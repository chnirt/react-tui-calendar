{"ast":null,"code":"/*!\n * TOAST UI Date Picker\n * @version 4.1.0\n * @author NHN. FE Development Lab <dl_javascript@nhn.com>\n * @license MIT\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory(require(\"tui-time-picker\"));else if (typeof define === 'function' && define.amd) define([\"tui-time-picker\"], factory);else if (typeof exports === 'object') exports[\"DatePicker\"] = factory(require(\"tui-time-picker\"));else root[\"tui\"] = root[\"tui\"] || {}, root[\"tui\"][\"DatePicker\"] = factory(root[\"tui\"][\"TimePicker\"]);\n})(window, function (__WEBPACK_EXTERNAL_MODULE__43__) {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__webpack_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            enumerable: true,\n            get: getter\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // define __esModule on exports\n\n      /******/\n\n\n      __webpack_require__.r = function (exports) {\n        /******/\n        if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n          /******/\n          Object.defineProperty(exports, Symbol.toStringTag, {\n            value: 'Module'\n          });\n          /******/\n        }\n        /******/\n\n\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n        /******/\n      };\n      /******/\n\n      /******/\n      // create a fake namespace object\n\n      /******/\n      // mode & 1: value is a module id, require it\n\n      /******/\n      // mode & 2: merge all properties of value into the ns\n\n      /******/\n      // mode & 4: return value when already ns object\n\n      /******/\n      // mode & 8|1: behave like require\n\n      /******/\n\n\n      __webpack_require__.t = function (value, mode) {\n        /******/\n        if (mode & 1) value = __webpack_require__(value);\n        /******/\n\n        if (mode & 8) return value;\n        /******/\n\n        if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n        /******/\n\n        var ns = Object.create(null);\n        /******/\n\n        __webpack_require__.r(ns);\n        /******/\n\n\n        Object.defineProperty(ns, 'default', {\n          enumerable: true,\n          value: value\n        });\n        /******/\n\n        if (mode & 2 && typeof value != 'string') for (var key in value) {\n          __webpack_require__.d(ns, key, function (key) {\n            return value[key];\n          }.bind(null, key));\n        }\n        /******/\n\n        return ns;\n        /******/\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __webpack_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __webpack_require__.p = \"dist\";\n      /******/\n\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(__webpack_require__.s = 34);\n      /******/\n    }(\n    /************************************************************************/\n\n    /******/\n    [\n    /* 0 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview\n       * This module provides a function to make a constructor\n       * that can inherit from the other constructors like the CLASS easily.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var inherit = __webpack_require__(35);\n\n      var extend = __webpack_require__(7);\n      /**\n       * @module defineClass\n       */\n\n      /**\n       * Help a constructor to be defined and to inherit from the other constructors\n       * @param {*} [parent] Parent constructor\n       * @param {Object} props Members of constructor\n       *  @param {Function} props.init Initialization method\n       *  @param {Object} [props.static] Static members of constructor\n       * @returns {*} Constructor\n       * @memberof module:defineClass\n       * @example\n       * var defineClass = require('tui-code-snippet/defineClass/defineClass'); // node, commonjs\n       *\n       * //-- #2. Use property --//\n       * var Parent = defineClass({\n       *     init: function() { // constuructor\n       *         this.name = 'made by def';\n       *     },\n       *     method: function() {\n       *         // ...\n       *     },\n       *     static: {\n       *         staticMethod: function() {\n       *              // ...\n       *         }\n       *     }\n       * });\n       *\n       * var Child = defineClass(Parent, {\n       *     childMethod: function() {}\n       * });\n       *\n       * Parent.staticMethod();\n       *\n       * var parentInstance = new Parent();\n       * console.log(parentInstance.name); //made by def\n       * parentInstance.staticMethod(); // Error\n       *\n       * var childInstance = new Child();\n       * childInstance.method();\n       * childInstance.childMethod();\n       */\n\n\n      function defineClass(parent, props) {\n        var obj;\n\n        if (!props) {\n          props = parent;\n          parent = null;\n        }\n\n        obj = props.init || function () {};\n\n        if (parent) {\n          inherit(obj, parent);\n        }\n\n        if (props.hasOwnProperty('static')) {\n          extend(obj, props['static']);\n          delete props['static'];\n        }\n\n        extend(obj.prototype, props);\n        return obj;\n      }\n\n      module.exports = defineClass;\n      /***/\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Constants of date-picker\n       * @author NHN. FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      module.exports = {\n        TYPE_DATE: 'date',\n        TYPE_MONTH: 'month',\n        TYPE_YEAR: 'year',\n        TYPE_HOUR: 'hour',\n        TYPE_MINUTE: 'minute',\n        TYPE_MERIDIEM: 'meridiem',\n        MIN_DATE: new Date(1900, 0, 1),\n        MAX_DATE: new Date(2999, 11, 31),\n        DEFAULT_LANGUAGE_TYPE: 'en',\n        CLASS_NAME_SELECTED: 'tui-is-selected',\n        CLASS_NAME_PREV_MONTH_BTN: 'tui-calendar-btn-prev-month',\n        CLASS_NAME_PREV_YEAR_BTN: 'tui-calendar-btn-prev-year',\n        CLASS_NAME_NEXT_YEAR_BTN: 'tui-calendar-btn-next-year',\n        CLASS_NAME_NEXT_MONTH_BTN: 'tui-calendar-btn-next-month'\n      };\n      /***/\n    },\n    /* 2 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Execute the provided callback once for each element present in the array(or Array-like object) in ascending order.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Execute the provided callback once for each element present\n       * in the array(or Array-like object) in ascending order.\n       * If the callback function returns false, the loop will be stopped.\n       * Callback function(iteratee) is invoked with three arguments:\n       *  1) The value of the element\n       *  2) The index of the element\n       *  3) The array(or Array-like object) being traversed\n       * @param {Array|Arguments|NodeList} arr The array(or Array-like object) that will be traversed\n       * @param {function} iteratee Callback function\n       * @param {Object} [context] Context(this) of callback function\n       * @memberof module:collection\n       * @example\n       * var forEachArray = require('tui-code-snippet/collection/forEachArray'); // node, commonjs\n       *\n       * var sum = 0;\n       *\n       * forEachArray([1,2,3], function(value){\n       *     sum += value;\n       * });\n       * alert(sum); // 6\n       */\n\n      function forEachArray(arr, iteratee, context) {\n        var index = 0;\n        var len = arr.length;\n        context = context || null;\n\n        for (; index < len; index += 1) {\n          if (iteratee.call(context, arr[index], index, arr) === false) {\n            break;\n          }\n        }\n      }\n\n      module.exports = forEachArray;\n      /***/\n    },\n    /* 3 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /* eslint-disable complexity */\n\n      /**\n       * @fileoverview Returns the first index at which a given element can be found in the array.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var isArray = __webpack_require__(6);\n      /**\n       * @module array\n       */\n\n      /**\n       * Returns the first index at which a given element can be found in the array\n       * from start index(default 0), or -1 if it is not present.\n       * It compares searchElement to elements of the Array using strict equality\n       * (the same method used by the ===, or triple-equals, operator).\n       * @param {*} searchElement Element to locate in the array\n       * @param {Array} array Array that will be traversed.\n       * @param {number} startIndex Start index in array for searching (default 0)\n       * @returns {number} the First index at which a given element, or -1 if it is not present\n       * @memberof module:array\n       * @example\n       * var inArray = require('tui-code-snippet/array/inArray'); // node, commonjs\n       *\n       * var arr = ['one', 'two', 'three', 'four'];\n       * var idx1 = inArray('one', arr, 3); // -1\n       * var idx2 = inArray('one', arr); // 0\n       */\n\n\n      function inArray(searchElement, array, startIndex) {\n        var i;\n        var length;\n        startIndex = startIndex || 0;\n\n        if (!isArray(array)) {\n          return -1;\n        }\n\n        if (Array.prototype.indexOf) {\n          return Array.prototype.indexOf.call(array, searchElement, startIndex);\n        }\n\n        length = array.length;\n\n        for (i = startIndex; startIndex >= 0 && i < length; i += 1) {\n          if (array[i] === searchElement) {\n            return i;\n          }\n        }\n\n        return -1;\n      }\n\n      module.exports = inArray;\n      /***/\n    },\n    /* 4 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Utils for Datepicker component\n       * @author NHN. FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var forEachArray = __webpack_require__(2);\n\n      var isHTMLNode = __webpack_require__(46);\n\n      var sendHostname = __webpack_require__(47);\n\n      var currentId = 0;\n      var utils = {\n        /**\n         * Get a target element\n         * @param {Event} ev Event object\n         * @returns {HTMLElement} An event target element\n         */\n        getTarget: function getTarget(ev) {\n          return ev.target || ev.srcElement;\n        },\n\n        /**\n         * Return the same element with an element or a matched element searched by a selector.\n         * @param {HTMLElement|string} param HTMLElement or selector\n         * @returns {HTMLElement} A matched element\n         */\n        getElement: function getElement(param) {\n          return isHTMLNode(param) ? param : document.querySelector(param);\n        },\n\n        /**\n         * Get a selector of the element.\n         * @param {HTMLElement} elem An element\n         * @returns {string}\n         */\n        getSelector: function getSelector(elem) {\n          var selector = '';\n\n          if (elem.id) {\n            selector = '#' + elem.id;\n          } else if (elem.className) {\n            selector = '.' + elem.className.split(' ')[0];\n          }\n\n          return selector;\n        },\n\n        /**\n         * Create an unique id.\n         * @returns {number}\n         */\n        generateId: function generateId() {\n          currentId += 1;\n          return currentId;\n        },\n\n        /**\n         * Create a new array with all elements that pass the test implemented by the provided function.\n         * @param {Array} arr - Array that will be traversed\n         * @param {function} iteratee - iteratee callback function\n         * @returns {Array}\n         */\n        filter: function filter(arr, iteratee) {\n          var result = [];\n          forEachArray(arr, function (item) {\n            if (iteratee(item)) {\n              result.push(item);\n            }\n          });\n          return result;\n        },\n\n        /**\n         * Send hostname for GA\n         * @ignore\n         */\n        sendHostName: function sendHostName() {\n          sendHostname('date-picker', 'UA-129987462-1');\n        }\n      };\n      module.exports = utils;\n      /***/\n    },\n    /* 5 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Utils for DatePicker component\n       * @author NHN. FE dev Lab. <dl_javascript@nhn.com>\n       */\n\n      var isDate = __webpack_require__(28);\n\n      var isNumber = __webpack_require__(15);\n\n      var constants = __webpack_require__(1);\n\n      var TYPE_DATE = constants.TYPE_DATE;\n      var TYPE_MONTH = constants.TYPE_MONTH;\n      var TYPE_YEAR = constants.TYPE_YEAR;\n      /**\n       * Utils of calendar\n       * @namespace dateUtil\n       * @ignore\n       */\n\n      var utils = {\n        /**\n         * Get weeks count by paramenter\n         * @param {number} year A year\n         * @param {number} month A month\n         * @returns {number} Weeks count (4~6)\n         **/\n        getWeeksCount: function getWeeksCount(year, month) {\n          var firstDay = utils.getFirstDay(year, month),\n              lastDate = utils.getLastDayInMonth(year, month);\n          return Math.ceil((firstDay + lastDate) / 7);\n        },\n\n        /**\n         * @param {Date} date - Date instance\n         * @returns {boolean}\n         */\n        isValidDate: function isValidDate(date) {\n          return isDate(date) && !isNaN(date.getTime());\n        },\n\n        /**\n         * Get which day is first by parameters that include year and month information.\n         * @param {number} year A year\n         * @param {number} month A month\n         * @returns {number} (0~6)\n         */\n        getFirstDay: function getFirstDay(year, month) {\n          return new Date(year, month - 1, 1).getDay();\n        },\n\n        /**\n         * Get timestamp of the first day.\n         * @param {number} year A year\n         * @param {number} month A month\n         * @returns {number} timestamp\n         */\n        getFirstDayTimestamp: function getFirstDayTimestamp(year, month) {\n          return new Date(year, month, 1).getTime();\n        },\n\n        /**\n         * Get last date by parameters that include year and month information.\n         * @param {number} year A year\n         * @param {number} month A month\n         * @returns {number} (1~31)\n         */\n        getLastDayInMonth: function getLastDayInMonth(year, month) {\n          return new Date(year, month, 0).getDate();\n        },\n\n        /**\n         * Chagne number 0~9 to '00~09'\n         * @param {number} number number\n         * @returns {string}\n         * @example\n         *  dateUtil.prependLeadingZero(0); //  '00'\n         *  dateUtil.prependLeadingZero(9); //  '09'\n         *  dateUtil.prependLeadingZero(12); //  '12'\n         */\n        prependLeadingZero: function prependLeadingZero(number) {\n          var prefix = '';\n\n          if (number < 10) {\n            prefix = '0';\n          }\n\n          return prefix + number;\n        },\n\n        /**\n         * Get meridiem hour\n         * @param {number} hour - Original hour\n         * @returns {number} Converted meridiem hour\n         */\n        getMeridiemHour: function getMeridiemHour(hour) {\n          hour %= 12;\n\n          if (hour === 0) {\n            hour = 12;\n          }\n\n          return hour;\n        },\n\n        /**\n         * Returns number or default\n         * @param {*} any - Any value\n         * @param {number} defaultNumber - Default number\n         * @throws Will throw an error if the defaultNumber is invalid.\n         * @returns {number}\n         */\n        getSafeNumber: function getSafeNumber(any, defaultNumber) {\n          if (isNaN(defaultNumber) || !isNumber(defaultNumber)) {\n            throw Error('The defaultNumber must be a valid number.');\n          }\n\n          if (isNaN(any)) {\n            return defaultNumber;\n          }\n\n          return Number(any);\n        },\n\n        /**\n         * Return date of the week\n         * @param {number} year - Year\n         * @param {number} month - Month\n         * @param {number} weekNumber - Week number (0~5)\n         * @param {number} dayNumber - Day number (0: sunday, 1: monday, ....)\n         * @returns {number}\n         */\n        getDateOfWeek: function getDateOfWeek(year, month, weekNumber, dayNumber) {\n          var firstDayOfMonth = new Date(year, month - 1).getDay();\n          var dateOffset = firstDayOfMonth - dayNumber - 1;\n          return new Date(year, month - 1, weekNumber * 7 - dateOffset);\n        },\n\n        /**\n         * Returns range arr\n         * @param {number} start - Start value\n         * @param {number} end - End value\n         * @returns {Array}\n         */\n        getRangeArr: function getRangeArr(start, end) {\n          var arr = [];\n          var i;\n\n          if (start > end) {\n            for (i = end; i >= start; i -= 1) {\n              arr.push(i);\n            }\n          } else {\n            for (i = start; i <= end; i += 1) {\n              arr.push(i);\n            }\n          }\n\n          return arr;\n        },\n\n        /**\n         * Returns cloned date with the start of a unit of time\n         * @param {Date|number} date - Original date\n         * @param {string} [type = TYPE_DATE] - Unit type\n         * @throws {Error}\n         * @returns {Date}\n         */\n        cloneWithStartOf: function cloneWithStartOf(date, type) {\n          type = type || TYPE_DATE;\n          date = new Date(date); // Does not consider time-level yet.\n\n          date.setHours(0, 0, 0, 0);\n\n          switch (type) {\n            case TYPE_DATE:\n              break;\n\n            case TYPE_MONTH:\n              date.setDate(1);\n              break;\n\n            case TYPE_YEAR:\n              date.setMonth(0, 1);\n              break;\n\n            default:\n              throw Error('Unsupported type: ' + type);\n          }\n\n          return date;\n        },\n\n        /**\n         * Returns cloned date with the end of a unit of time\n         * @param {Date|number} date - Original date\n         * @param {string} [type = TYPE_DATE] - Unit type\n         * @throws {Error}\n         * @returns {Date}\n         */\n        cloneWithEndOf: function cloneWithEndOf(date, type) {\n          type = type || TYPE_DATE;\n          date = new Date(date); // Does not consider time-level yet.\n\n          date.setHours(23, 59, 59, 999);\n\n          switch (type) {\n            case TYPE_DATE:\n              break;\n\n            case TYPE_MONTH:\n              date.setMonth(date.getMonth() + 1, 0);\n              break;\n\n            case TYPE_YEAR:\n              date.setMonth(11, 31);\n              break;\n\n            default:\n              throw Error('Unsupported type: ' + type);\n          }\n\n          return date;\n        },\n\n        /**\n         * Compare two dates\n         * @param {Date|number} dateA - Date\n         * @param {Date|number} dateB - Date\n         * @param {string} [cmpLevel] - Comparing level\n         * @returns {number}\n         */\n        compare: function compare(dateA, dateB, cmpLevel) {\n          var aTimestamp, bTimestamp;\n\n          if (!(utils.isValidDate(dateA) && utils.isValidDate(dateB))) {\n            return NaN;\n          }\n\n          if (!cmpLevel) {\n            aTimestamp = dateA.getTime();\n            bTimestamp = dateB.getTime();\n          } else {\n            aTimestamp = utils.cloneWithStartOf(dateA, cmpLevel).getTime();\n            bTimestamp = utils.cloneWithStartOf(dateB, cmpLevel).getTime();\n          }\n\n          if (aTimestamp > bTimestamp) {\n            return 1;\n          }\n\n          return aTimestamp === bTimestamp ? 0 : -1;\n        },\n\n        /**\n         * Returns whether two dates are same\n         * @param {Date|number} dateA - Date\n         * @param {Date|number} dateB - Date\n         * @param {string} [cmpLevel] - Comparing level\n         * @returns {boolean}\n         */\n        isSame: function isSame(dateA, dateB, cmpLevel) {\n          return utils.compare(dateA, dateB, cmpLevel) === 0;\n        },\n\n        /**\n         * Returns whether the target is in range\n         * @param {Date|number} start - Range start\n         * @param {Date|number} end - Range end\n         * @param {Date|number} target - Target\n         * @param {string} [cmpLevel = TYPE_DATE] - Comparing level\n         * @returns {boolean}\n         */\n        inRange: function inRange(start, end, target, cmpLevel) {\n          return utils.compare(start, target, cmpLevel) < 1 && utils.compare(end, target, cmpLevel) > -1;\n        }\n      };\n      module.exports = utils;\n      /***/\n    },\n    /* 6 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Check whether the given variable is an instance of Array or not.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Check whether the given variable is an instance of Array or not.\n       * If the given variable is an instance of Array, return true.\n       * @param {*} obj - Target for checking\n       * @returns {boolean} Is array instance?\n       * @memberof module:type\n       */\n\n      function isArray(obj) {\n        return obj instanceof Array;\n      }\n\n      module.exports = isArray;\n      /***/\n    },\n    /* 7 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Extend the target object from other objects.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * @module object\n       */\n\n      /**\n       * Extend the target object from other objects.\n       * @param {object} target - Object that will be extended\n       * @param {...object} objects - Objects as sources\n       * @returns {object} Extended object\n       * @memberof module:object\n       */\n\n      function extend(target, objects) {\n        // eslint-disable-line no-unused-vars\n        var hasOwnProp = Object.prototype.hasOwnProperty;\n        var source, prop, i, len;\n\n        for (i = 1, len = arguments.length; i < len; i += 1) {\n          source = arguments[i];\n\n          for (prop in source) {\n            if (hasOwnProp.call(source, prop)) {\n              target[prop] = source[prop];\n            }\n          }\n        }\n\n        return target;\n      }\n\n      module.exports = extend;\n      /***/\n    },\n    /* 8 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview This module provides some functions for custom events. And it is implemented in the observer design pattern.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var extend = __webpack_require__(7);\n\n      var isExisty = __webpack_require__(37);\n\n      var isString = __webpack_require__(13);\n\n      var isObject = __webpack_require__(22);\n\n      var isArray = __webpack_require__(6);\n\n      var isFunction = __webpack_require__(39);\n\n      var forEach = __webpack_require__(9);\n\n      var R_EVENTNAME_SPLIT = /\\s+/g;\n      /**\n       * @class\n       * @example\n       * // node, commonjs\n       * var CustomEvents = require('tui-code-snippet/customEvents/customEvents');\n       */\n\n      function CustomEvents() {\n        /**\n           * @type {HandlerItem[]}\n           */\n        this.events = null;\n        /**\n           * only for checking specific context event was binded\n           * @type {object[]}\n           */\n\n        this.contexts = null;\n      }\n      /**\n       * Mixin custom events feature to specific constructor\n       * @param {function} func - constructor\n       * @example\n       * var CustomEvents = require('tui-code-snippet/customEvents/customEvents'); // node, commonjs\n       *\n       * var model;\n       * function Model() {\n       *     this.name = '';\n       * }\n       * CustomEvents.mixin(Model);\n       *\n       * model = new Model();\n       * model.on('change', function() { this.name = 'model'; }, this);\n       * model.fire('change');\n       * alert(model.name); // 'model';\n       */\n\n\n      CustomEvents.mixin = function (func) {\n        extend(func.prototype, CustomEvents.prototype);\n      };\n      /**\n       * Get HandlerItem object\n       * @param {function} handler - handler function\n       * @param {object} [context] - context for handler\n       * @returns {HandlerItem} HandlerItem object\n       * @private\n       */\n\n\n      CustomEvents.prototype._getHandlerItem = function (handler, context) {\n        var item = {\n          handler: handler\n        };\n\n        if (context) {\n          item.context = context;\n        }\n\n        return item;\n      };\n      /**\n       * Get event object safely\n       * @param {string} [eventName] - create sub event map if not exist.\n       * @returns {(object|array)} event object. if you supplied `eventName`\n       *  parameter then make new array and return it\n       * @private\n       */\n\n\n      CustomEvents.prototype._safeEvent = function (eventName) {\n        var events = this.events;\n        var byName;\n\n        if (!events) {\n          events = this.events = {};\n        }\n\n        if (eventName) {\n          byName = events[eventName];\n\n          if (!byName) {\n            byName = [];\n            events[eventName] = byName;\n          }\n\n          events = byName;\n        }\n\n        return events;\n      };\n      /**\n       * Get context array safely\n       * @returns {array} context array\n       * @private\n       */\n\n\n      CustomEvents.prototype._safeContext = function () {\n        var context = this.contexts;\n\n        if (!context) {\n          context = this.contexts = [];\n        }\n\n        return context;\n      };\n      /**\n       * Get index of context\n       * @param {object} ctx - context that used for bind custom event\n       * @returns {number} index of context\n       * @private\n       */\n\n\n      CustomEvents.prototype._indexOfContext = function (ctx) {\n        var context = this._safeContext();\n\n        var index = 0;\n\n        while (context[index]) {\n          if (ctx === context[index][0]) {\n            return index;\n          }\n\n          index += 1;\n        }\n\n        return -1;\n      };\n      /**\n       * Memorize supplied context for recognize supplied object is context or\n       *  name: handler pair object when off()\n       * @param {object} ctx - context object to memorize\n       * @private\n       */\n\n\n      CustomEvents.prototype._memorizeContext = function (ctx) {\n        var context, index;\n\n        if (!isExisty(ctx)) {\n          return;\n        }\n\n        context = this._safeContext();\n        index = this._indexOfContext(ctx);\n\n        if (index > -1) {\n          context[index][1] += 1;\n        } else {\n          context.push([ctx, 1]);\n        }\n      };\n      /**\n       * Forget supplied context object\n       * @param {object} ctx - context object to forget\n       * @private\n       */\n\n\n      CustomEvents.prototype._forgetContext = function (ctx) {\n        var context, contextIndex;\n\n        if (!isExisty(ctx)) {\n          return;\n        }\n\n        context = this._safeContext();\n        contextIndex = this._indexOfContext(ctx);\n\n        if (contextIndex > -1) {\n          context[contextIndex][1] -= 1;\n\n          if (context[contextIndex][1] <= 0) {\n            context.splice(contextIndex, 1);\n          }\n        }\n      };\n      /**\n       * Bind event handler\n       * @param {(string|{name:string, handler:function})} eventName - custom\n       *  event name or an object {eventName: handler}\n       * @param {(function|object)} [handler] - handler function or context\n       * @param {object} [context] - context for binding\n       * @private\n       */\n\n\n      CustomEvents.prototype._bindEvent = function (eventName, handler, context) {\n        var events = this._safeEvent(eventName);\n\n        this._memorizeContext(context);\n\n        events.push(this._getHandlerItem(handler, context));\n      };\n      /**\n       * Bind event handlers\n       * @param {(string|{name:string, handler:function})} eventName - custom\n       *  event name or an object {eventName: handler}\n       * @param {(function|object)} [handler] - handler function or context\n       * @param {object} [context] - context for binding\n       * //-- #1. Get Module --//\n       * var CustomEvents = require('tui-code-snippet/customEvents/customEvents'); // node, commonjs\n       *\n       * //-- #2. Use method --//\n       * // # 2.1 Basic Usage\n       * CustomEvents.on('onload', handler);\n       *\n       * // # 2.2 With context\n       * CustomEvents.on('onload', handler, myObj);\n       *\n       * // # 2.3 Bind by object that name, handler pairs\n       * CustomEvents.on({\n       *     'play': handler,\n       *     'pause': handler2\n       * });\n       *\n       * // # 2.4 Bind by object that name, handler pairs with context object\n       * CustomEvents.on({\n       *     'play': handler\n       * }, myObj);\n       */\n\n\n      CustomEvents.prototype.on = function (eventName, handler, context) {\n        var self = this;\n\n        if (isString(eventName)) {\n          // [syntax 1, 2]\n          eventName = eventName.split(R_EVENTNAME_SPLIT);\n          forEach(eventName, function (name) {\n            self._bindEvent(name, handler, context);\n          });\n        } else if (isObject(eventName)) {\n          // [syntax 3, 4]\n          context = handler;\n          forEach(eventName, function (func, name) {\n            self.on(name, func, context);\n          });\n        }\n      };\n      /**\n       * Bind one-shot event handlers\n       * @param {(string|{name:string,handler:function})} eventName - custom\n       *  event name or an object {eventName: handler}\n       * @param {function|object} [handler] - handler function or context\n       * @param {object} [context] - context for binding\n       */\n\n\n      CustomEvents.prototype.once = function (eventName, handler, context) {\n        var self = this;\n\n        if (isObject(eventName)) {\n          context = handler;\n          forEach(eventName, function (func, name) {\n            self.once(name, func, context);\n          });\n          return;\n        }\n\n        function onceHandler() {\n          // eslint-disable-line require-jsdoc\n          handler.apply(context, arguments);\n          self.off(eventName, onceHandler, context);\n        }\n\n        this.on(eventName, onceHandler, context);\n      };\n      /**\n       * Splice supplied array by callback result\n       * @param {array} arr - array to splice\n       * @param {function} predicate - function return boolean\n       * @private\n       */\n\n\n      CustomEvents.prototype._spliceMatches = function (arr, predicate) {\n        var i = 0;\n        var len;\n\n        if (!isArray(arr)) {\n          return;\n        }\n\n        for (len = arr.length; i < len; i += 1) {\n          if (predicate(arr[i]) === true) {\n            arr.splice(i, 1);\n            len -= 1;\n            i -= 1;\n          }\n        }\n      };\n      /**\n       * Get matcher for unbind specific handler events\n       * @param {function} handler - handler function\n       * @returns {function} handler matcher\n       * @private\n       */\n\n\n      CustomEvents.prototype._matchHandler = function (handler) {\n        var self = this;\n        return function (item) {\n          var needRemove = handler === item.handler;\n\n          if (needRemove) {\n            self._forgetContext(item.context);\n          }\n\n          return needRemove;\n        };\n      };\n      /**\n       * Get matcher for unbind specific context events\n       * @param {object} context - context\n       * @returns {function} object matcher\n       * @private\n       */\n\n\n      CustomEvents.prototype._matchContext = function (context) {\n        var self = this;\n        return function (item) {\n          var needRemove = context === item.context;\n\n          if (needRemove) {\n            self._forgetContext(item.context);\n          }\n\n          return needRemove;\n        };\n      };\n      /**\n       * Get matcher for unbind specific hander, context pair events\n       * @param {function} handler - handler function\n       * @param {object} context - context\n       * @returns {function} handler, context matcher\n       * @private\n       */\n\n\n      CustomEvents.prototype._matchHandlerAndContext = function (handler, context) {\n        var self = this;\n        return function (item) {\n          var matchHandler = handler === item.handler;\n          var matchContext = context === item.context;\n          var needRemove = matchHandler && matchContext;\n\n          if (needRemove) {\n            self._forgetContext(item.context);\n          }\n\n          return needRemove;\n        };\n      };\n      /**\n       * Unbind event by event name\n       * @param {string} eventName - custom event name to unbind\n       * @param {function} [handler] - handler function\n       * @private\n       */\n\n\n      CustomEvents.prototype._offByEventName = function (eventName, handler) {\n        var self = this;\n        var andByHandler = isFunction(handler);\n\n        var matchHandler = self._matchHandler(handler);\n\n        eventName = eventName.split(R_EVENTNAME_SPLIT);\n        forEach(eventName, function (name) {\n          var handlerItems = self._safeEvent(name);\n\n          if (andByHandler) {\n            self._spliceMatches(handlerItems, matchHandler);\n          } else {\n            forEach(handlerItems, function (item) {\n              self._forgetContext(item.context);\n            });\n            self.events[name] = [];\n          }\n        });\n      };\n      /**\n       * Unbind event by handler function\n       * @param {function} handler - handler function\n       * @private\n       */\n\n\n      CustomEvents.prototype._offByHandler = function (handler) {\n        var self = this;\n\n        var matchHandler = this._matchHandler(handler);\n\n        forEach(this._safeEvent(), function (handlerItems) {\n          self._spliceMatches(handlerItems, matchHandler);\n        });\n      };\n      /**\n       * Unbind event by object(name: handler pair object or context object)\n       * @param {object} obj - context or {name: handler} pair object\n       * @param {function} handler - handler function\n       * @private\n       */\n\n\n      CustomEvents.prototype._offByObject = function (obj, handler) {\n        var self = this;\n        var matchFunc;\n\n        if (this._indexOfContext(obj) < 0) {\n          forEach(obj, function (func, name) {\n            self.off(name, func);\n          });\n        } else if (isString(handler)) {\n          matchFunc = this._matchContext(obj);\n\n          self._spliceMatches(this._safeEvent(handler), matchFunc);\n        } else if (isFunction(handler)) {\n          matchFunc = this._matchHandlerAndContext(handler, obj);\n          forEach(this._safeEvent(), function (handlerItems) {\n            self._spliceMatches(handlerItems, matchFunc);\n          });\n        } else {\n          matchFunc = this._matchContext(obj);\n          forEach(this._safeEvent(), function (handlerItems) {\n            self._spliceMatches(handlerItems, matchFunc);\n          });\n        }\n      };\n      /**\n       * Unbind custom events\n       * @param {(string|object|function)} eventName - event name or context or\n       *  {name: handler} pair object or handler function\n       * @param {(function)} handler - handler function\n       * @example\n       * //-- #1. Get Module --//\n       * var CustomEvents = require('tui-code-snippet/customEvents/customEvents'); // node, commonjs\n       *\n       * //-- #2. Use method --//\n       * // # 2.1 off by event name\n       * CustomEvents.off('onload');\n       *\n       * // # 2.2 off by event name and handler\n       * CustomEvents.off('play', handler);\n       *\n       * // # 2.3 off by handler\n       * CustomEvents.off(handler);\n       *\n       * // # 2.4 off by context\n       * CustomEvents.off(myObj);\n       *\n       * // # 2.5 off by context and handler\n       * CustomEvents.off(myObj, handler);\n       *\n       * // # 2.6 off by context and event name\n       * CustomEvents.off(myObj, 'onload');\n       *\n       * // # 2.7 off by an Object.<string, function> that is {eventName: handler}\n       * CustomEvents.off({\n       *   'play': handler,\n       *   'pause': handler2\n       * });\n       *\n       * // # 2.8 off the all events\n       * CustomEvents.off();\n       */\n\n\n      CustomEvents.prototype.off = function (eventName, handler) {\n        if (isString(eventName)) {\n          // [syntax 1, 2]\n          this._offByEventName(eventName, handler);\n        } else if (!arguments.length) {\n          // [syntax 8]\n          this.events = {};\n          this.contexts = [];\n        } else if (isFunction(eventName)) {\n          // [syntax 3]\n          this._offByHandler(eventName);\n        } else if (isObject(eventName)) {\n          // [syntax 4, 5, 6]\n          this._offByObject(eventName, handler);\n        }\n      };\n      /**\n       * Fire custom event\n       * @param {string} eventName - name of custom event\n       */\n\n\n      CustomEvents.prototype.fire = function (eventName) {\n        // eslint-disable-line\n        this.invoke.apply(this, arguments);\n      };\n      /**\n       * Fire a event and returns the result of operation 'boolean AND' with all\n       *  listener's results.\n       *\n       * So, It is different from {@link CustomEvents#fire}.\n       *\n       * In service code, use this as a before event in component level usually\n       *  for notifying that the event is cancelable.\n       * @param {string} eventName - Custom event name\n       * @param {...*} data - Data for event\n       * @returns {boolean} The result of operation 'boolean AND'\n       * @example\n       * var map = new Map();\n       * map.on({\n       *     'beforeZoom': function() {\n       *         // It should cancel the 'zoom' event by some conditions.\n       *         if (that.disabled && this.getState()) {\n       *             return false;\n       *         }\n       *         return true;\n       *     }\n       * });\n       *\n       * if (this.invoke('beforeZoom')) {    // check the result of 'beforeZoom'\n       *     // if true,\n       *     // doSomething\n       * }\n       */\n\n\n      CustomEvents.prototype.invoke = function (eventName) {\n        var events, args, index, item;\n\n        if (!this.hasListener(eventName)) {\n          return true;\n        }\n\n        events = this._safeEvent(eventName);\n        args = Array.prototype.slice.call(arguments, 1);\n        index = 0;\n\n        while (events[index]) {\n          item = events[index];\n\n          if (item.handler.apply(item.context, args) === false) {\n            return false;\n          }\n\n          index += 1;\n        }\n\n        return true;\n      };\n      /**\n       * Return whether at least one of the handlers is registered in the given\n       *  event name.\n       * @param {string} eventName - Custom event name\n       * @returns {boolean} Is there at least one handler in event name?\n       */\n\n\n      CustomEvents.prototype.hasListener = function (eventName) {\n        return this.getListenerLength(eventName) > 0;\n      };\n      /**\n       * Return a count of events registered.\n       * @param {string} eventName - Custom event name\n       * @returns {number} number of event\n       */\n\n\n      CustomEvents.prototype.getListenerLength = function (eventName) {\n        var events = this._safeEvent(eventName);\n\n        return events.length;\n      };\n\n      module.exports = CustomEvents;\n      /***/\n    },\n    /* 9 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Execute the provided callback once for each property of object(or element of array) which actually exist.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var isArray = __webpack_require__(6);\n\n      var forEachArray = __webpack_require__(2);\n\n      var forEachOwnProperties = __webpack_require__(23);\n      /**\n       * @module collection\n       */\n\n      /**\n       * Execute the provided callback once for each property of object(or element of array) which actually exist.\n       * If the object is Array-like object(ex-arguments object), It needs to transform to Array.(see 'ex2' of example).\n       * If the callback function returns false, the loop will be stopped.\n       * Callback function(iteratee) is invoked with three arguments:\n       *  1) The value of the property(or The value of the element)\n       *  2) The name of the property(or The index of the element)\n       *  3) The object being traversed\n       * @param {Object} obj The object that will be traversed\n       * @param {function} iteratee Callback function\n       * @param {Object} [context] Context(this) of callback function\n       * @memberof module:collection\n       * @example\n       * var forEach = require('tui-code-snippet/collection/forEach'); // node, commonjs\n       *\n       * var sum = 0;\n       *\n       * forEach([1,2,3], function(value){\n       *     sum += value;\n       * });\n       * alert(sum); // 6\n       *\n       * // In case of Array-like object\n       * var array = Array.prototype.slice.call(arrayLike); // change to array\n       * forEach(array, function(value){\n       *     sum += value;\n       * });\n       */\n\n\n      function forEach(obj, iteratee, context) {\n        if (isArray(obj)) {\n          forEachArray(obj, iteratee, context);\n        } else {\n          forEachOwnProperties(obj, iteratee, context);\n        }\n      }\n\n      module.exports = forEach;\n      /***/\n    },\n    /* 10 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Default locale texts\n       * @author NHN. FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      module.exports = {\n        en: {\n          titles: {\n            DD: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            D: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            MMM: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            MMMM: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n          },\n          titleFormat: 'MMMM yyyy',\n          todayFormat: 'To\\\\d\\\\ay: DD, MMMM d, yyyy',\n          time: 'Time',\n          date: 'Date'\n        },\n        ko: {\n          titles: {\n            DD: ['일요일', '월요일', '화요일', '수요일', '목요일', '금요일', '토요일'],\n            D: ['일', '월', '화', '수', '목', '금', '토'],\n            MMM: ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'],\n            MMMM: ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월']\n          },\n          titleFormat: 'yyyy.MM',\n          todayFormat: '오늘: yyyy.MM.dd (D)',\n          date: '날짜',\n          time: '시간'\n        }\n      };\n      /***/\n    },\n    /* 11 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Convert text by binding expressions with context.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var inArray = __webpack_require__(3);\n\n      var forEach = __webpack_require__(9);\n\n      var isArray = __webpack_require__(6);\n\n      var isString = __webpack_require__(13);\n\n      var extend = __webpack_require__(7); // IE8 does not support capture groups.\n\n\n      var EXPRESSION_REGEXP = /{{\\s?|\\s?}}/g;\n      var BRACKET_NOTATION_REGEXP = /^[a-zA-Z0-9_@]+\\[[a-zA-Z0-9_@\"']+\\]$/;\n      var BRACKET_REGEXP = /\\[\\s?|\\s?\\]/;\n      var DOT_NOTATION_REGEXP = /^[a-zA-Z_]+\\.[a-zA-Z_]+$/;\n      var DOT_REGEXP = /\\./;\n      var STRING_NOTATION_REGEXP = /^[\"']\\w+[\"']$/;\n      var STRING_REGEXP = /\"|'/g;\n      var NUMBER_REGEXP = /^-?\\d+\\.?\\d*$/;\n      var EXPRESSION_INTERVAL = 2;\n      var BLOCK_HELPERS = {\n        'if': handleIf,\n        'each': handleEach,\n        'with': handleWith\n      };\n      var isValidSplit = 'a'.split(/a/).length === 3;\n      /**\n       * Split by RegExp. (Polyfill for IE8)\n       * @param {string} text - text to be splitted\\\n       * @param {RegExp} regexp - regular expression\n       * @returns {Array.<string>}\n       */\n\n      var splitByRegExp = function () {\n        if (isValidSplit) {\n          return function (text, regexp) {\n            return text.split(regexp);\n          };\n        }\n\n        return function (text, regexp) {\n          var result = [];\n          var prevIndex = 0;\n          var match, index;\n\n          if (!regexp.global) {\n            regexp = new RegExp(regexp, 'g');\n          }\n\n          match = regexp.exec(text);\n\n          while (match !== null) {\n            index = match.index;\n            result.push(text.slice(prevIndex, index));\n            prevIndex = index + match[0].length;\n            match = regexp.exec(text);\n          }\n\n          result.push(text.slice(prevIndex));\n          return result;\n        };\n      }();\n      /**\n       * Find value in the context by an expression.\n       * @param {string} exp - an expression\n       * @param {object} context - context\n       * @returns {*}\n       * @private\n       */\n      // eslint-disable-next-line complexity\n\n\n      function getValueFromContext(exp, context) {\n        var splitedExps;\n        var value = context[exp];\n\n        if (exp === 'true') {\n          value = true;\n        } else if (exp === 'false') {\n          value = false;\n        } else if (STRING_NOTATION_REGEXP.test(exp)) {\n          value = exp.replace(STRING_REGEXP, '');\n        } else if (BRACKET_NOTATION_REGEXP.test(exp)) {\n          splitedExps = exp.split(BRACKET_REGEXP);\n          value = getValueFromContext(splitedExps[0], context)[getValueFromContext(splitedExps[1], context)];\n        } else if (DOT_NOTATION_REGEXP.test(exp)) {\n          splitedExps = exp.split(DOT_REGEXP);\n          value = getValueFromContext(splitedExps[0], context)[splitedExps[1]];\n        } else if (NUMBER_REGEXP.test(exp)) {\n          value = parseFloat(exp);\n        }\n\n        return value;\n      }\n      /**\n       * Extract elseif and else expressions.\n       * @param {Array.<string>} ifExps - args of if expression\n       * @param {Array.<string>} sourcesInsideBlock - sources inside if block\n       * @returns {object} - exps: expressions of if, elseif, and else / sourcesInsideIf: sources inside if, elseif, and else block.\n       * @private\n       */\n\n\n      function extractElseif(ifExps, sourcesInsideBlock) {\n        var exps = [ifExps];\n        var sourcesInsideIf = [];\n        var otherIfCount = 0;\n        var start = 0; // eslint-disable-next-line complexity\n\n        forEach(sourcesInsideBlock, function (source, index) {\n          if (source.indexOf('if') === 0) {\n            otherIfCount += 1;\n          } else if (source === '/if') {\n            otherIfCount -= 1;\n          } else if (!otherIfCount && (source.indexOf('elseif') === 0 || source === 'else')) {\n            exps.push(source === 'else' ? ['true'] : source.split(' ').slice(1));\n            sourcesInsideIf.push(sourcesInsideBlock.slice(start, index));\n            start = index + 1;\n          }\n        });\n        sourcesInsideIf.push(sourcesInsideBlock.slice(start));\n        return {\n          exps: exps,\n          sourcesInsideIf: sourcesInsideIf\n        };\n      }\n      /**\n       * Helper function for \"if\". \n       * @param {Array.<string>} exps - array of expressions split by spaces\n       * @param {Array.<string>} sourcesInsideBlock - array of sources inside the if block\n       * @param {object} context - context\n       * @returns {string}\n       * @private\n       */\n\n\n      function handleIf(exps, sourcesInsideBlock, context) {\n        var analyzed = extractElseif(exps, sourcesInsideBlock);\n        var result = false;\n        var compiledSource = '';\n        forEach(analyzed.exps, function (exp, index) {\n          result = handleExpression(exp, context);\n\n          if (result) {\n            compiledSource = compile(analyzed.sourcesInsideIf[index], context);\n          }\n\n          return !result;\n        });\n        return compiledSource;\n      }\n      /**\n       * Helper function for \"each\".\n       * @param {Array.<string>} exps - array of expressions split by spaces\n       * @param {Array.<string>} sourcesInsideBlock - array of sources inside the each block\n       * @param {object} context - context\n       * @returns {string}\n       * @private\n       */\n\n\n      function handleEach(exps, sourcesInsideBlock, context) {\n        var collection = handleExpression(exps, context);\n        var additionalKey = isArray(collection) ? '@index' : '@key';\n        var additionalContext = {};\n        var result = '';\n        forEach(collection, function (item, key) {\n          additionalContext[additionalKey] = key;\n          additionalContext['@this'] = item;\n          extend(context, additionalContext);\n          result += compile(sourcesInsideBlock.slice(), context);\n        });\n        return result;\n      }\n      /**\n       * Helper function for \"with ... as\"\n       * @param {Array.<string>} exps - array of expressions split by spaces\n       * @param {Array.<string>} sourcesInsideBlock - array of sources inside the with block\n       * @param {object} context - context\n       * @returns {string}\n       * @private\n       */\n\n\n      function handleWith(exps, sourcesInsideBlock, context) {\n        var asIndex = inArray('as', exps);\n        var alias = exps[asIndex + 1];\n        var result = handleExpression(exps.slice(0, asIndex), context);\n        var additionalContext = {};\n        additionalContext[alias] = result;\n        return compile(sourcesInsideBlock, extend(context, additionalContext)) || '';\n      }\n      /**\n       * Extract sources inside block in place.\n       * @param {Array.<string>} sources - array of sources\n       * @param {number} start - index of start block\n       * @param {number} end - index of end block\n       * @returns {Array.<string>}\n       * @private\n       */\n\n\n      function extractSourcesInsideBlock(sources, start, end) {\n        var sourcesInsideBlock = sources.splice(start + 1, end - start);\n        sourcesInsideBlock.pop();\n        return sourcesInsideBlock;\n      }\n      /**\n       * Handle block helper function\n       * @param {string} helperKeyword - helper keyword (ex. if, each, with)\n       * @param {Array.<string>} sourcesToEnd - array of sources after the starting block\n       * @param {object} context - context\n       * @returns {Array.<string>}\n       * @private\n       */\n\n\n      function handleBlockHelper(helperKeyword, sourcesToEnd, context) {\n        var executeBlockHelper = BLOCK_HELPERS[helperKeyword];\n        var helperCount = 1;\n        var startBlockIndex = 0;\n        var endBlockIndex;\n        var index = startBlockIndex + EXPRESSION_INTERVAL;\n        var expression = sourcesToEnd[index];\n\n        while (helperCount && isString(expression)) {\n          if (expression.indexOf(helperKeyword) === 0) {\n            helperCount += 1;\n          } else if (expression.indexOf('/' + helperKeyword) === 0) {\n            helperCount -= 1;\n            endBlockIndex = index;\n          }\n\n          index += EXPRESSION_INTERVAL;\n          expression = sourcesToEnd[index];\n        }\n\n        if (helperCount) {\n          throw Error(helperKeyword + ' needs {{/' + helperKeyword + '}} expression.');\n        }\n\n        sourcesToEnd[startBlockIndex] = executeBlockHelper(sourcesToEnd[startBlockIndex].split(' ').slice(1), extractSourcesInsideBlock(sourcesToEnd, startBlockIndex, endBlockIndex), context);\n        return sourcesToEnd;\n      }\n      /**\n       * Helper function for \"custom helper\".\n       * If helper is not a function, return helper itself.\n       * @param {Array.<string>} exps - array of expressions split by spaces (first element: helper)\n       * @param {object} context - context\n       * @returns {string}\n       * @private\n       */\n\n\n      function handleExpression(exps, context) {\n        var result = getValueFromContext(exps[0], context);\n\n        if (result instanceof Function) {\n          return executeFunction(result, exps.slice(1), context);\n        }\n\n        return result;\n      }\n      /**\n       * Execute a helper function.\n       * @param {Function} helper - helper function\n       * @param {Array.<string>} argExps - expressions of arguments\n       * @param {object} context - context\n       * @returns {string} - result of executing the function with arguments\n       * @private\n       */\n\n\n      function executeFunction(helper, argExps, context) {\n        var args = [];\n        forEach(argExps, function (exp) {\n          args.push(getValueFromContext(exp, context));\n        });\n        return helper.apply(null, args);\n      }\n      /**\n       * Get a result of compiling an expression with the context.\n       * @param {Array.<string>} sources - array of sources split by regexp of expression.\n       * @param {object} context - context\n       * @returns {Array.<string>} - array of sources that bind with its context\n       * @private\n       */\n\n\n      function compile(sources, context) {\n        var index = 1;\n        var expression = sources[index];\n        var exps, firstExp, result;\n\n        while (isString(expression)) {\n          exps = expression.split(' ');\n          firstExp = exps[0];\n\n          if (BLOCK_HELPERS[firstExp]) {\n            result = handleBlockHelper(firstExp, sources.splice(index, sources.length - index), context);\n            sources = sources.concat(result);\n          } else {\n            sources[index] = handleExpression(exps, context);\n          }\n\n          index += EXPRESSION_INTERVAL;\n          expression = sources[index];\n        }\n\n        return sources.join('');\n      }\n      /**\n       * Convert text by binding expressions with context.\n       * <br>\n       * If expression exists in the context, it will be replaced.\n       * ex) '{{title}}' with context {title: 'Hello!'} is converted to 'Hello!'.\n       * An array or object can be accessed using bracket and dot notation.\n       * ex) '{{odds\\[2\\]}}' with context {odds: \\[1, 3, 5\\]} is converted to '5'.\n       * ex) '{{evens\\[first\\]}}' with context {evens: \\[2, 4\\], first: 0} is converted to '2'.\n       * ex) '{{project\\[\"name\"\\]}}' and '{{project.name}}' with context {project: {name: 'CodeSnippet'}} is converted to 'CodeSnippet'.\n       * <br>\n       * If replaced expression is a function, next expressions will be arguments of the function.\n       * ex) '{{add 1 2}}' with context {add: function(a, b) {return a + b;}} is converted to '3'.\n       * <br>\n       * It has 3 predefined block helpers '{{helper ...}} ... {{/helper}}': 'if', 'each', 'with ... as ...'.\n       * 1) 'if' evaluates conditional statements. It can use with 'elseif' and 'else'.\n       * 2) 'each' iterates an array or object. It provides '@index'(array), '@key'(object), and '@this'(current element).\n       * 3) 'with ... as ...' provides an alias.\n       * @param {string} text - text with expressions\n       * @param {object} context - context\n       * @returns {string} - text that bind with its context\n       * @memberof module:domUtil\n       * @example\n       * var template = require('tui-code-snippet/domUtil/template');\n       * \n       * var source = \n       *     '<h1>'\n       *   +   '{{if isValidNumber title}}'\n       *   +     '{{title}}th'\n       *   +   '{{elseif isValidDate title}}'\n       *   +     'Date: {{title}}'\n       *   +   '{{/if}}'\n       *   + '</h1>'\n       *   + '{{each list}}'\n       *   +   '{{with addOne @index as idx}}'\n       *   +     '<p>{{idx}}: {{@this}}</p>'\n       *   +   '{{/with}}'\n       *   + '{{/each}}';\n       * \n       * var context = {\n       *   isValidDate: function(text) {\n       *     return /^\\d{4}-(0|1)\\d-(0|1|2|3)\\d$/.test(text);\n       *   },\n       *   isValidNumber: function(text) {\n       *     return /^\\d+$/.test(text);\n       *   }\n       *   title: '2019-11-25',\n       *   list: ['Clean the room', 'Wash the dishes'],\n       *   addOne: function(num) {\n       *     return num + 1;\n       *   }\n       * };\n       * \n       * var result = template(source, context);\n       * console.log(result); // <h1>Date: 2019-11-25</h1><p>1: Clean the room</p><p>2: Wash the dishes</p>\n       */\n\n\n      function template(text, context) {\n        return compile(splitByRegExp(text, EXPRESSION_REGEXP), context);\n      }\n\n      module.exports = template;\n      /***/\n    },\n    /* 12 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Check whether the given variable is undefined or not.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Check whether the given variable is undefined or not.\n       * If the given variable is undefined, returns true.\n       * @param {*} obj - Target for checking\n       * @returns {boolean} Is undefined?\n       * @memberof module:type\n       */\n\n      function isUndefined(obj) {\n        return obj === undefined; // eslint-disable-line no-undefined\n      }\n\n      module.exports = isUndefined;\n      /***/\n    },\n    /* 13 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Check whether the given variable is a string or not.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Check whether the given variable is a string or not.\n       * If the given variable is a string, return true.\n       * @param {*} obj - Target for checking\n       * @returns {boolean} Is string?\n       * @memberof module:type\n       */\n\n      function isString(obj) {\n        return typeof obj === 'string' || obj instanceof String;\n      }\n\n      module.exports = isString;\n      /***/\n    },\n    /* 14 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Remove element from parent node.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Remove element from parent node.\n       * @param {HTMLElement} element - element to remove.\n       * @memberof module:domUtil\n       */\n\n      function removeElement(element) {\n        if (element && element.parentNode) {\n          element.parentNode.removeChild(element);\n        }\n      }\n\n      module.exports = removeElement;\n      /***/\n    },\n    /* 15 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Check whether the given variable is a number or not.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Check whether the given variable is a number or not.\n       * If the given variable is a number, return true.\n       * @param {*} obj - Target for checking\n       * @returns {boolean} Is number?\n       * @memberof module:type\n       */\n\n      function isNumber(obj) {\n        return typeof obj === 'number' || obj instanceof Number;\n      }\n\n      module.exports = isNumber;\n      /***/\n    },\n    /* 16 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Add css class to element\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var forEach = __webpack_require__(9);\n\n      var inArray = __webpack_require__(3);\n\n      var getClass = __webpack_require__(17);\n\n      var setClassName = __webpack_require__(24);\n      /**\n       * domUtil module\n       * @module domUtil\n       */\n\n      /**\n       * Add css class to element\n       * @param {(HTMLElement|SVGElement)} element - target element\n       * @param {...string} cssClass - css classes to add\n       * @memberof module:domUtil\n       */\n\n\n      function addClass(element) {\n        var cssClass = Array.prototype.slice.call(arguments, 1);\n        var classList = element.classList;\n        var newClass = [];\n        var origin;\n\n        if (classList) {\n          forEach(cssClass, function (name) {\n            element.classList.add(name);\n          });\n          return;\n        }\n\n        origin = getClass(element);\n\n        if (origin) {\n          cssClass = [].concat(origin.split(/\\s+/), cssClass);\n        }\n\n        forEach(cssClass, function (cls) {\n          if (inArray(cls, newClass) < 0) {\n            newClass.push(cls);\n          }\n        });\n        setClassName(element, newClass);\n      }\n\n      module.exports = addClass;\n      /***/\n    },\n    /* 17 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Get HTML element's design classes.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var isUndefined = __webpack_require__(12);\n      /**\n       * Get HTML element's design classes.\n       * @param {(HTMLElement|SVGElement)} element target element\n       * @returns {string} element css class name\n       * @memberof module:domUtil\n       */\n\n\n      function getClass(element) {\n        if (!element || !element.className) {\n          return '';\n        }\n\n        if (isUndefined(element.className.baseVal)) {\n          return element.className;\n        }\n\n        return element.className.baseVal;\n      }\n\n      module.exports = getClass;\n      /***/\n    },\n    /* 18 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Remove css class from element\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var forEachArray = __webpack_require__(2);\n\n      var inArray = __webpack_require__(3);\n\n      var getClass = __webpack_require__(17);\n\n      var setClassName = __webpack_require__(24);\n      /**\n       * Remove css class from element\n       * @param {(HTMLElement|SVGElement)} element - target element\n       * @param {...string} cssClass - css classes to remove\n       * @memberof module:domUtil\n       */\n\n\n      function removeClass(element) {\n        var cssClass = Array.prototype.slice.call(arguments, 1);\n        var classList = element.classList;\n        var origin, newClass;\n\n        if (classList) {\n          forEachArray(cssClass, function (name) {\n            classList.remove(name);\n          });\n          return;\n        }\n\n        origin = getClass(element).split(/\\s+/);\n        newClass = [];\n        forEachArray(origin, function (name) {\n          if (inArray(name, cssClass) < 0) {\n            newClass.push(name);\n          }\n        });\n        setClassName(element, newClass);\n      }\n\n      module.exports = removeClass;\n      /***/\n    },\n    /* 19 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Set mouse-touch event\n       * @author NHN. FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var _on = __webpack_require__(31);\n\n      var _off = __webpack_require__(33);\n\n      var mouseTouchEvent = {\n        /**\n         * Detect mobile browser\n         * @type {boolean} Whether using Mobile browser\n         * @private\n         */\n        _isMobile: function () {\n          return /Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i.test(navigator.userAgent);\n        }(),\n\n        /**\n         * Return a matched event type by a mouse event type\n         * @param {string} type A mouse event type - mousedown, click\n         * @returns {string}\n         * @private\n         */\n        _getEventType: function _getEventType(type) {\n          if (this._isMobile) {\n            if (type === 'mousedown') {\n              type = 'touchstart';\n            } else if (type === 'click') {\n              type = 'touchend';\n            }\n          }\n\n          return type;\n        },\n\n        /**\n         * Bind touch or mouse events\n         * @param {HTMLElement} element An element to bind\n         * @param {string} type A mouse event type - mousedown, click\n         * @param {Function} handler A handler function\n         * @param {object} [context] A context for handler.\n         */\n        on: function on(element, type, handler, context) {\n          _on(element, this._getEventType(type), handler, context);\n        },\n\n        /**\n         * Unbind touch or mouse events\n         * @param {HTMLElement} element - Target element\n         * @param {string} type A mouse event type - mousedown, click\n         * @param {Function} handler - Handler\n         */\n        off: function off(element, type, handler) {\n          _off(element, this._getEventType(type), handler);\n        }\n      };\n      module.exports = mouseTouchEvent;\n      /***/\n    },\n    /* 20 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Layer base\n       * @author NHN. FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var defineClass = __webpack_require__(0);\n\n      var removeElement = __webpack_require__(14);\n\n      var localeText = __webpack_require__(10);\n\n      var DEFAULT_LANGUAGE_TYPE = __webpack_require__(1).DEFAULT_LANGUAGE_TYPE;\n      /**\n       * @abstract\n       * @class\n       * @ignore\n       * @param {string} language - Initial language\n       * Layer base\n       */\n\n\n      var LayerBase = defineClass(\n      /** @lends LayerBase.prototype */\n      {\n        init: function init(language) {\n          language = language || DEFAULT_LANGUAGE_TYPE;\n          /**\n           * Layer element\n           * @type {HTMLElement}\n           * @private\n           */\n\n          this._element = null;\n          /**\n           * Language type\n           * @type {string}\n           * @private\n           */\n\n          this._localeText = localeText[language];\n          /**\n           * Layer type\n           * @type {string}\n           * @private\n           */\n\n          this._type = 'base';\n        },\n\n        /**\n         * Make context\n         * @abstract\n         * @throws {Error}\n         * @returns {object}\n         * @private\n         */\n        _makeContext: function _makeContext() {\n          throwOverrideError(this.getType(), '_makeContext');\n        },\n\n        /**\n         * Render the layer element\n         * @abstract\n         * @throws {Error}\n         */\n        render: function render() {\n          throwOverrideError(this.getType(), 'render');\n        },\n\n        /**\n         * Returns date elements\n         * @abstract\n         * @throws {Error}\n         * @returns {HTMLElement[]}\n         */\n        getDateElements: function getDateElements() {\n          throwOverrideError(this.getType(), 'getDateElements');\n        },\n\n        /**\n         * Returns layer type\n         * @returns {string}\n         */\n        getType: function getType() {\n          return this._type;\n        },\n\n        /**\n         * Set language\n         * @param {string} language - Language name\n         */\n        changeLanguage: function changeLanguage(language) {\n          this._localeText = localeText[language];\n        },\n\n        /**\n         * Remove elements\n         */\n        remove: function remove() {\n          if (this._element) {\n            removeElement(this._element);\n          }\n\n          this._element = null;\n        }\n      });\n      /**\n       * Throw - method override error\n       * @ignore\n       * @param {string} layerType - Layer type\n       * @param {string} methodName - Method name\n       * @throws {Error}\n       */\n\n      function throwOverrideError(layerType, methodName) {\n        throw new Error(layerType + ' layer does not have the \"' + methodName + '\" method.');\n      }\n\n      module.exports = LayerBase;\n      /***/\n    },\n    /* 21 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview DatePicker component\n       * @author NHN. FE dev Lab <dl_javascript@nhn.com>\n       */\n\n      var inArray = __webpack_require__(3);\n\n      var forEachArray = __webpack_require__(2);\n\n      var defineClass = __webpack_require__(0);\n\n      var CustomEvents = __webpack_require__(8);\n\n      var addClass = __webpack_require__(16);\n\n      var closest = __webpack_require__(25);\n\n      var getData = __webpack_require__(26);\n\n      var hasClass = __webpack_require__(27);\n\n      var removeClass = __webpack_require__(18);\n\n      var removeElement = __webpack_require__(14);\n\n      var extend = __webpack_require__(7);\n\n      var isArray = __webpack_require__(6);\n\n      var isDate = __webpack_require__(28);\n\n      var isNumber = __webpack_require__(15);\n\n      var isObject = __webpack_require__(22);\n\n      var TimePicker = __webpack_require__(43);\n\n      var Calendar = __webpack_require__(29);\n\n      var RangeModel = __webpack_require__(56);\n\n      var constants = __webpack_require__(1);\n\n      var localeTexts = __webpack_require__(10);\n\n      var dateUtil = __webpack_require__(5);\n\n      var util = __webpack_require__(4);\n\n      var mouseTouchEvent = __webpack_require__(19);\n\n      var tmpl = __webpack_require__(58);\n\n      var DatePickerInput = __webpack_require__(59);\n\n      var DEFAULT_LANGUAGE_TYPE = constants.DEFAULT_LANGUAGE_TYPE;\n      var TYPE_DATE = constants.TYPE_DATE;\n      var TYPE_MONTH = constants.TYPE_MONTH;\n      var TYPE_YEAR = constants.TYPE_YEAR;\n      var CLASS_NAME_NEXT_YEAR_BTN = constants.CLASS_NAME_NEXT_YEAR_BTN;\n      var CLASS_NAME_NEXT_MONTH_BTN = constants.CLASS_NAME_NEXT_MONTH_BTN;\n      var CLASS_NAME_PREV_YEAR_BTN = constants.CLASS_NAME_PREV_YEAR_BTN;\n      var CLASS_NAME_PREV_MONTH_BTN = constants.CLASS_NAME_PREV_MONTH_BTN;\n      var CLASS_NAME_SELECTED = constants.CLASS_NAME_SELECTED;\n      var CLASS_NAME_SELECTABLE = 'tui-is-selectable';\n      var CLASS_NAME_BLOCKED = 'tui-is-blocked';\n      var CLASS_NAME_CHECKED = 'tui-is-checked';\n      var CLASS_NAME_SELECTOR_BUTTON = 'tui-datepicker-selector-button';\n      var CLASS_NAME_TODAY = 'tui-calendar-today';\n      var CLASS_NAME_HIDDEN = 'tui-hidden';\n      var SELECTOR_BODY = '.tui-datepicker-body';\n      var SELECTOR_DATE_ICO = '.tui-ico-date';\n      var SELECTOR_CALENDAR_TITLE = '.tui-calendar-title';\n      var SELECTOR_CALENDAR_CONTAINER = '.tui-calendar-container';\n      var SELECTOR_TIMEPICKER_CONTAINER = '.tui-timepicker-container';\n      /**\n       * Merge default option\n       * @ignore\n       * @param {object} option - DatePicker option\n       * @returns {object}\n       */\n\n      var mergeDefaultOption = function mergeDefaultOption(option) {\n        option = extend({\n          language: DEFAULT_LANGUAGE_TYPE,\n          calendar: {},\n          input: {\n            element: null,\n            format: null\n          },\n          timePicker: null,\n          date: null,\n          showAlways: false,\n          type: TYPE_DATE,\n          selectableRanges: null,\n          openers: [],\n          autoClose: true,\n          usageStatistics: true\n        }, option);\n        option.selectableRanges = option.selectableRanges || [[constants.MIN_DATE, constants.MAX_DATE]];\n\n        if (!isObject(option.calendar)) {\n          throw new Error('Calendar option must be an object');\n        }\n\n        if (!isObject(option.input)) {\n          throw new Error('Input option must be an object');\n        }\n\n        if (!isArray(option.selectableRanges)) {\n          throw new Error('Selectable-ranges must be a 2d-array');\n        }\n\n        option.localeText = localeTexts[option.language]; // override calendar option\n\n        option.calendar.language = option.language;\n        option.calendar.type = option.type; // @TODO: after v5.0.0, remove option.timepicker\n\n        option.timePicker = option.timePicker || option.timepicker;\n        return option;\n      };\n      /**\n       * @class\n       * @description\n       * Create a date picker.\n       * @see {@link /tutorial-example01-basic DatePicker example}\n       * @param {HTMLElement|string} container - Container element or selector of DatePicker\n       * @param {Object} [options] - Options\n       *      @param {Date|number} [options.date = null] - Initial date. Set by a Date instance or a number(timestamp). (default: no initial date)\n       *      @param {('date'|'month'|'year')} [options.type = 'date'] - DatePicker type. Determine whether to choose a date, month, or year.\n       *      @param {string} [options.language='en'] - Language code. English('en') and Korean('ko') are provided as default. To set to the other languages, use {@link DatePicker#localeTexts DatePicker.localeTexts}.\n       *      @param {object|boolean} [options.timePicker] - [TimePicker](https://nhn.github.io/tui.time-picker/latest) options. Refer to the [TimePicker instance's options](https://nhn.github.io/tui.time-picker/latest/TimePicker). To create the TimePicker without customization, set to true.\n       *      @param {object} [options.calendar] - {@link Calendar} options. Refer to the {@link Calendar Calendar instance's options}.\n       *      @param {object} [options.input] - Input option\n       *      @param {HTMLElement|string} [options.input.element] - Input element or selector\n       *      @param {string} [options.input.format = 'yyyy-mm-dd'] - Format of the Date string\n       *      @param {Array.<Array.<Date|number>>} [options.selectableRanges = 1900/1/1 ~ 2999/12/31]\n       *        - Ranges of selectable date. Set by Date instances or numbers(timestamp).\n       *      @param {Array<HTMLElement|string>} [options.openers = []] - List of the openers to open the DatePicker (example - icon, button, etc.)\n       *      @param {boolean} [options.showAlways = false] - Show the DatePicker always\n       *      @param {boolean} [options.autoClose = true] - Close the DatePicker after clicking the date\n       *      @param {boolean} [options.usageStatistics = true] - Send a hostname to Google Analytics (default: true)\n       * @example\n       * import DatePicker from 'tui-date-picker' // ES6\n       * // const DatePicker = require('tui-date-picker'); // CommonJS\n       * // const DatePicker = tui.DatePicker;\n       *\n       * const range1 = [new Date(2015, 2, 1), new Date(2015, 3, 1)];\n       * const range2 = [1465570800000, 1481266182155]; // timestamps\n       *\n       * const picker1 = new DatePicker('#datepicker-container1', {\n       *     showAlways: true\n       * });\n       *\n       * const picker2 = new DatePicker('#datepicker-container2', {\n       *    showAlways: true,\n       *    timePicker: true\n       * });\n       *\n       * const picker3 = new DatePicker('#datepicker-container3', {\n       *     language: 'ko',\n       *     calendar: {\n       *         showToday: true\n       *     },\n       *     timePicker: {\n       *         showMeridiem: true,\n       *         defaultHour: 13,\n       *         defaultMinute: 24\n       *     },\n       *     input: {\n       *         element: '#datepicker-input',\n       *         format: 'yyyy년 MM월 dd일 hh:mm A'\n       *     }\n       *     type: 'date',\n       *     date: new Date(2015, 0, 1)\n       *     selectableRanges: [range1, range2],\n       *     openers: ['#opener']\n       * });\n       */\n\n\n      var DatePicker = defineClass(\n      /** @lends DatePicker.prototype */\n      {\n        static: {\n          /**\n           * Locale text data. English('en') and Korean('ko') are provided as default.\n           * @type {object}\n           * @memberof DatePicker\n           * @static\n           * @example\n           * DatePicker.localeTexts['customKey'] = {\n           *     titles: {\n           *         // days\n           *         DD: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n           *         // daysShort\n           *         D: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n           *         // months\n           *         MMMM: [\n           *             'January', 'February', 'March', 'April', 'May', 'June',\n           *             'July', 'August', 'September', 'October', 'November', 'December'\n           *         ],\n           *         // monthsShort\n           *         MMM: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n           *     },\n           *     titleFormat: 'MMM yyyy',\n           *     todayFormat: 'D, MMMM dd, yyyy',\n           *     date: 'Date',\n           *     time: 'Time'\n           * };\n           *\n           * const datepicker = new DatePicker('#datepicker-container', {\n           *     language: 'customKey'\n           * });\n           */\n          localeTexts: localeTexts\n        },\n        init: function init(container, options) {\n          options = mergeDefaultOption(options);\n          /**\n           * Language type\n           * @type {string}\n           * @private\n           */\n\n          this._language = options.language;\n          /**\n           * DatePicker container\n           * @type {HTMLElement}\n           * @private\n           */\n\n          this._container = util.getElement(container);\n          this._container.innerHTML = tmpl(extend(options, {\n            isTab: options.timePicker && options.timePicker.layoutType === 'tab'\n          }));\n          /**\n           * DatePicker element\n           * @type {HTMLElement}\n           * @private\n           */\n\n          this._element = this._container.firstChild;\n          /**\n           * Calendar instance\n           * @type {Calendar}\n           * @private\n           */\n\n          this._calendar = new Calendar(this._element.querySelector(SELECTOR_CALENDAR_CONTAINER), extend(options.calendar, {\n            usageStatistics: options.usageStatistics\n          }));\n          /**\n           * TimePicker instance\n           * @type {TimePicker}\n           * @private\n           */\n\n          this._timePicker = null;\n          /**\n           * DatePicker input\n           * @type {DatePickerInput}\n           * @private\n           */\n\n          this._datepickerInput = null;\n          /**\n           * Object having date values\n           * @type {Date}\n           * @private\n           */\n\n          this._date = null;\n          /**\n           * Selectable date-ranges model\n           * @type {RangeModel}\n           * @private\n           */\n\n          this._rangeModel = null;\n          /**\n           * openers - opener list\n           * @type {Array}\n           * @private\n           */\n\n          this._openers = [];\n          /**\n           * State of picker enable\n           * @type {boolean}\n           * @private\n           */\n\n          this._isEnabled = true;\n          /**\n           * ID of instance\n           * @type {number}\n           * @private\n           */\n\n          this._id = 'tui-datepicker-' + util.generateId();\n          /**\n           * DatePicker type\n           * @type {TYPE_DATE|TYPE_MONTH|TYPE_YEAR}\n           * @private\n           */\n\n          this._type = options.type;\n          /**\n           * Show always or not\n           * @type {boolean}\n           */\n\n          this.showAlways = options.showAlways;\n          /**\n           * Close after select a date\n           * @type {boolean}\n           */\n\n          this.autoClose = options.autoClose;\n\n          this._initializeDatePicker(options);\n        },\n\n        /**\n         * Initialize method\n         * @param {Object} option - user option\n         * @private\n         */\n        _initializeDatePicker: function _initializeDatePicker(option) {\n          this.setRanges(option.selectableRanges);\n\n          this._setEvents();\n\n          this._initTimePicker(option.timePicker, option.usageStatistics);\n\n          this.setInput(option.input.element);\n          this.setDateFormat(option.input.format);\n          this.setDate(option.date);\n          forEachArray(option.openers, this.addOpener, this);\n\n          if (!this.showAlways) {\n            this._hide();\n          }\n\n          if (this.getType() === TYPE_DATE) {\n            addClass(this._element.querySelector(SELECTOR_BODY), 'tui-datepicker-type-date');\n          }\n        },\n\n        /**\n         * Set events on the date picker's element\n         * @param {object} option - Constructor option\n         * @private\n         */\n        _setEvents: function _setEvents() {\n          mouseTouchEvent.on(this._element, 'click', this._onClickHandler, this);\n\n          this._calendar.on('draw', this._onDrawCalendar, this);\n        },\n\n        /**\n         * Remove events on the date picker's element\n         * @private\n         */\n        _removeEvents: function _removeEvents() {\n          mouseTouchEvent.off(this._element, 'click', this._onClickHandler, this);\n\n          this._calendar.off();\n        },\n\n        /**\n         * Set events on the document\n         * @private\n         */\n        _setDocumentEvents: function _setDocumentEvents() {\n          mouseTouchEvent.on(document, 'mousedown', this._onMousedownDocument, this);\n        },\n\n        /**\n         * Remove events on the document\n         * @private\n         */\n        _removeDocumentEvents: function _removeDocumentEvents() {\n          mouseTouchEvent.off(document, 'mousedown', this._onMousedownDocument);\n        },\n\n        /**\n         * Set events on the opener\n         * @param {HTMLElement} opener An opener to bind the events\n         * @private\n         */\n        _setOpenerEvents: function _setOpenerEvents(opener) {\n          mouseTouchEvent.on(opener, 'click', this.toggle, this);\n        },\n\n        /**\n         * Remove events on the opener\n         * @param {HTMLElement} opener An opener to unbind the events\n         * @private\n         */\n        _removeOpenerEvents: function _removeOpenerEvents(opener) {\n          mouseTouchEvent.off(opener, 'click', this.toggle);\n        },\n\n        /**\n         * Set TimePicker instance\n         * @param {object|boolean} opTimePicker - TimePicker instance options\n         * @param {boolean} usageStatistics - GA tracking options\n         * @private\n         */\n        _initTimePicker: function _initTimePicker(opTimePicker, usageStatistics) {\n          var layoutType;\n\n          if (!opTimePicker) {\n            return;\n          }\n\n          layoutType = opTimePicker.layoutType || '';\n\n          if (isObject(opTimePicker)) {\n            opTimePicker.usageStatistics = usageStatistics;\n          } else {\n            opTimePicker = {\n              usageStatistics: usageStatistics\n            };\n          }\n\n          this._timePicker = new TimePicker(this._element.querySelector(SELECTOR_TIMEPICKER_CONTAINER), opTimePicker);\n\n          if (layoutType.toLowerCase() === 'tab') {\n            this._timePicker.hide();\n          }\n\n          this._timePicker.on('change', function (ev) {\n            var prevDate;\n\n            if (this._date) {\n              prevDate = new Date(this._date);\n              this.setDate(prevDate.setHours(ev.hour, ev.minute));\n            }\n          }, this);\n        },\n\n        /**\n         * Change picker's type by a selector button.\n         * @param {HTMLElement} target A target element\n         * @private\n         */\n        _changePicker: function _changePicker(target) {\n          var btnSelector = '.' + CLASS_NAME_SELECTOR_BUTTON;\n          var selectedBtn = closest(target, btnSelector);\n          var isDateElement = !!selectedBtn.querySelector(SELECTOR_DATE_ICO);\n\n          if (isDateElement) {\n            this._calendar.show();\n\n            this._timePicker.hide();\n          } else {\n            this._calendar.hide();\n\n            this._timePicker.show();\n          }\n\n          removeClass(this._element.querySelector('.' + CLASS_NAME_CHECKED), CLASS_NAME_CHECKED);\n          addClass(selectedBtn, CLASS_NAME_CHECKED);\n        },\n\n        /**\n         * Returns whether the element is opener\n         * @param {string|HTMLElement} element - Element or selector\n         * @returns {boolean}\n         * @private\n         */\n        _isOpener: function _isOpener(element) {\n          var el = util.getElement(element);\n          return inArray(el, this._openers) > -1;\n        },\n\n        /**\n         * add/remove today-class-name to date element\n         * @param {HTMLElement} el - date element\n         * @private\n         */\n        _setTodayClassName: function _setTodayClassName(el) {\n          var timestamp, isToday;\n\n          if (this.getCalendarType() !== TYPE_DATE) {\n            return;\n          }\n\n          timestamp = Number(getData(el, 'timestamp'));\n          isToday = timestamp === new Date().setHours(0, 0, 0, 0);\n\n          if (isToday) {\n            addClass(el, CLASS_NAME_TODAY);\n          } else {\n            removeClass(el, CLASS_NAME_TODAY);\n          }\n        },\n\n        /**\n         * add/remove selectable-class-name to date element\n         * @param {HTMLElement} el - date element\n         * @private\n         */\n        _setSelectableClassName: function _setSelectableClassName(el) {\n          var elDate = new Date(Number(getData(el, 'timestamp')));\n\n          if (this._isSelectableOnCalendar(elDate)) {\n            addClass(el, CLASS_NAME_SELECTABLE);\n            removeClass(el, CLASS_NAME_BLOCKED);\n          } else {\n            removeClass(el, CLASS_NAME_SELECTABLE);\n            addClass(el, CLASS_NAME_BLOCKED);\n          }\n        },\n\n        /**\n         * add/remove selected-class-name to date element\n         * @param {HTMLElement} el - date element\n         * @private\n         */\n        _setSelectedClassName: function _setSelectedClassName(el) {\n          var elDate = new Date(Number(getData(el, 'timestamp')));\n\n          if (this._isSelectedOnCalendar(elDate)) {\n            addClass(el, CLASS_NAME_SELECTED);\n          } else {\n            removeClass(el, CLASS_NAME_SELECTED);\n          }\n        },\n\n        /**\n         * Returns whether the date is selectable on calendar\n         * @param {Date} date - Date instance\n         * @returns {boolean}\n         * @private\n         */\n        _isSelectableOnCalendar: function _isSelectableOnCalendar(date) {\n          var type = this.getCalendarType();\n          var start = dateUtil.cloneWithStartOf(date, type).getTime();\n          var end = dateUtil.cloneWithEndOf(date, type).getTime();\n          return this._rangeModel.hasOverlap(start, end);\n        },\n\n        /**\n         * Returns whether the date is selected on calendar\n         * @param {Date} date - Date instance\n         * @returns {boolean}\n         * @private\n         */\n        _isSelectedOnCalendar: function _isSelectedOnCalendar(date) {\n          var curDate = this.getDate();\n          var calendarType = this.getCalendarType();\n          return curDate && dateUtil.isSame(curDate, date, calendarType);\n        },\n\n        /**\n         * Show the date picker element\n         * @private\n         */\n        _show: function _show() {\n          removeClass(this._element, CLASS_NAME_HIDDEN);\n        },\n\n        /**\n         * Hide the date picker element\n         * @private\n         */\n        _hide: function _hide() {\n          addClass(this._element, CLASS_NAME_HIDDEN);\n        },\n\n        /**\n         * Set value a date-string of current this instance to input element\n         * @private\n         */\n        _syncToInput: function _syncToInput() {\n          if (!this._date) {\n            return;\n          }\n\n          this._datepickerInput.setDate(this._date);\n        },\n\n        /**\n         * Set date from input value\n         * @param {boolean} [shouldRollback = false] - Should rollback from unselectable or error\n         * @private\n         */\n        _syncFromInput: function _syncFromInput(shouldRollback) {\n          var isFailed = false;\n          var date;\n\n          try {\n            date = this._datepickerInput.getDate();\n\n            if (this.isSelectable(date)) {\n              if (this._timePicker) {\n                this._timePicker.setTime(date.getHours(), date.getMinutes());\n              }\n\n              this.setDate(date);\n            } else {\n              isFailed = true;\n            }\n          } catch (err) {\n            this.fire('error', {\n              type: 'ParsingError',\n              message: err.message\n            });\n            isFailed = true;\n          } finally {\n            if (isFailed) {\n              if (shouldRollback) {\n                this._syncToInput();\n              } else {\n                this.setNull();\n              }\n            }\n          }\n        },\n\n        /**\n         * Event handler for mousedown of document<br>\n         * - When click the out of layer, close the layer\n         * @param {Event} ev - Event object\n         * @private\n         */\n        _onMousedownDocument: function _onMousedownDocument(ev) {\n          var target = util.getTarget(ev);\n          var selector = util.getSelector(target);\n          var isContain = selector ? this._element.querySelector(selector) : false;\n\n          var isInput = this._datepickerInput.is(target);\n\n          var isInOpener = inArray(target, this._openers) > -1;\n          var shouldClose = !(this.showAlways || isInput || isContain || isInOpener);\n\n          if (shouldClose) {\n            this.close();\n          }\n        },\n\n        /**\n         * Event handler for click of calendar\n         * @param {Event} ev An event object\n         * @private\n         */\n        _onClickHandler: function _onClickHandler(ev) {\n          var target = util.getTarget(ev);\n\n          if (closest(target, '.' + CLASS_NAME_SELECTABLE)) {\n            this._updateDate(target);\n          } else if (closest(target, SELECTOR_CALENDAR_TITLE)) {\n            this.drawUpperCalendar(this._date);\n          } else if (closest(target, '.' + CLASS_NAME_SELECTOR_BUTTON)) {\n            this._changePicker(target);\n          }\n        },\n\n        /**\n         * Update date from event-target\n         * @param {HTMLElement} target An event target element\n         * @private\n         */\n        _updateDate: function _updateDate(target) {\n          var timestamp = Number(getData(target, 'timestamp'));\n          var newDate = new Date(timestamp);\n          var timePicker = this._timePicker;\n          var prevDate = this._date;\n          var calendarType = this.getCalendarType();\n          var pickerType = this.getType();\n\n          if (calendarType !== pickerType) {\n            this.drawLowerCalendar(newDate);\n          } else {\n            if (timePicker) {\n              newDate.setHours(timePicker.getHour(), timePicker.getMinute());\n            } else if (prevDate) {\n              newDate.setHours(prevDate.getHours(), prevDate.getMinutes());\n            }\n\n            this.setDate(newDate);\n\n            if (!this.showAlways && this.autoClose) {\n              this.close();\n            }\n          }\n        },\n\n        /**\n         * Event handler for 'draw'-custom event of calendar\n         * @param {Object} eventData - custom event data\n         * @see {@link Calendar#draw}\n         * @private\n         */\n        _onDrawCalendar: function _onDrawCalendar(eventData) {\n          forEachArray(eventData.dateElements, function (el) {\n            this._setTodayClassName(el);\n\n            this._setSelectableClassName(el);\n\n            this._setSelectedClassName(el);\n          }, this);\n\n          this._setDisplayHeadButtons();\n          /**\n           * Occur after the calendar is drawn.\n           * @event DatePicker#draw\n           * @see {@link https://nhn.github.io/tui.code-snippet/latest/CustomEvents#on datepicker.on()} to bind event handlers.\n           * @see {@link https://nhn.github.io/tui.code-snippet/latest/CustomEvents#off datepicker.off()} to unbind event handlers.\n           * @see Refer to {@link https://nhn.github.io/tui.code-snippet/latest/CustomEvents CustomEvents from tui-code-snippet} for more methods. DatePicker mixes in the methods from CustomEvents.\n           * @property {Date} date - Calendar date\n           * @property {('date'|'month'|'year')} type - Calendar type\n           * @property {HTMLElement[]} dateElements - elements for dates\n           * @example\n           * // bind the 'draw' event\n           * datepicker.on('draw', function(event) {\n           *     console.log(`Draw the ${event.type} calendar and its date is ${event.date}.`);\n           * });\n           *\n           * // unbind the 'draw' event\n           * datepicker.off('draw');\n           */\n\n\n          this.fire('draw', eventData);\n        },\n\n        /**\n         * Hide useless buttons (next, next-year, prev, prev-year)\n         * @see Don't save buttons reference. The buttons are rerendered every \"calendar.draw\".\n         * @private\n         */\n        _setDisplayHeadButtons: function _setDisplayHeadButtons() {\n          var nextYearDate = this._calendar.getNextYearDate();\n\n          var prevYearDate = this._calendar.getPrevYearDate();\n\n          var maxTimestamp = this._rangeModel.getMaximumValue();\n\n          var minTimestamp = this._rangeModel.getMinimumValue();\n\n          var nextYearBtn = this._element.querySelector('.' + CLASS_NAME_NEXT_YEAR_BTN);\n\n          var prevYearBtn = this._element.querySelector('.' + CLASS_NAME_PREV_YEAR_BTN);\n\n          var nextMonthDate, prevMonthDate, nextMonBtn, prevMonBtn;\n\n          if (this.getCalendarType() === TYPE_DATE) {\n            nextMonthDate = dateUtil.cloneWithStartOf(this._calendar.getNextDate(), TYPE_MONTH);\n            prevMonthDate = dateUtil.cloneWithEndOf(this._calendar.getPrevDate(), TYPE_MONTH);\n            nextMonBtn = this._element.querySelector('.' + CLASS_NAME_NEXT_MONTH_BTN);\n            prevMonBtn = this._element.querySelector('.' + CLASS_NAME_PREV_MONTH_BTN);\n\n            this._setDisplay(nextMonBtn, nextMonthDate.getTime() <= maxTimestamp);\n\n            this._setDisplay(prevMonBtn, prevMonthDate.getTime() >= minTimestamp);\n\n            prevYearDate.setDate(1);\n            nextYearDate.setDate(1);\n          } else {\n            prevYearDate.setMonth(12, 0);\n            nextYearDate.setMonth(0, 1);\n          }\n\n          this._setDisplay(nextYearBtn, nextYearDate.getTime() <= maxTimestamp);\n\n          this._setDisplay(prevYearBtn, prevYearDate.getTime() >= minTimestamp);\n        },\n\n        /**\n         * Set display show/hide by condition\n         * @param {HTMLElement} el - An Element\n         * @param {boolean} shouldShow - Condition\n         * @private\n         */\n        _setDisplay: function _setDisplay(el, shouldShow) {\n          if (el) {\n            if (shouldShow) {\n              removeClass(el, CLASS_NAME_HIDDEN);\n            } else {\n              addClass(el, CLASS_NAME_HIDDEN);\n            }\n          }\n        },\n\n        /**\n         * Input change handler\n         * @private\n         * @throws {Error}\n         */\n        _onChangeInput: function _onChangeInput() {\n          this._syncFromInput(true);\n        },\n\n        /**\n         * Returns whether the date is changed\n         * @param {Date} date - Date\n         * @returns {boolean}\n         * @private\n         */\n        _isChanged: function _isChanged(date) {\n          var prevDate = this.getDate();\n          return !prevDate || date.getTime() !== prevDate.getTime();\n        },\n\n        /**\n         * Refresh datepicker\n         * @private\n         */\n        _refreshFromRanges: function _refreshFromRanges() {\n          if (!this.isSelectable(this._date)) {\n            this.setNull();\n          } else {\n            this._calendar.draw(); // view update\n\n          }\n        },\n\n        /**\n         * Return the current calendar's type.\n         * @returns {('date'|'month'|'year')}\n         */\n        getCalendarType: function getCalendarType() {\n          return this._calendar.getType();\n        },\n\n        /**\n         * Return the date picker's type.\n         * @returns {('date'|'month'|'year')}\n         */\n        getType: function getType() {\n          return this._type;\n        },\n\n        /**\n         * Return whether the date is selectable.\n         * @param {Date} date - Date to check\n         * @returns {boolean}\n         */\n        isSelectable: function isSelectable(date) {\n          var type = this.getType();\n          var start, end;\n\n          if (!dateUtil.isValidDate(date)) {\n            return false;\n          }\n\n          start = dateUtil.cloneWithStartOf(date, type).getTime();\n          end = dateUtil.cloneWithEndOf(date, type).getTime();\n          return this._rangeModel.hasOverlap(start, end);\n        },\n\n        /**\n         * Return whether the date is selected.\n         * @param {Date} date - Date to check\n         * @returns {boolean}\n         */\n        isSelected: function isSelected(date) {\n          return dateUtil.isValidDate(date) && dateUtil.isSame(this._date, date, this.getType());\n        },\n\n        /**\n         * Set selectable ranges. Previous ranges will be removed.\n         * @param {Array.<Array<Date|number>>} ranges - Selectable ranges. Use Date instances or numbers(timestamp).\n         * @example\n         * datepicker.setRanges([\n         *     [new Date(2017, 0, 1), new Date(2018, 0, 2)],\n         *     [new Date(2015, 2, 3), new Date(2016, 4, 2)]\n         * ]);\n         */\n        setRanges: function setRanges(ranges) {\n          var result = [];\n          forEachArray(ranges, function (range) {\n            var start = new Date(range[0]).getTime();\n            var end = new Date(range[1]).getTime();\n            result.push([start, end]);\n          });\n          this._rangeModel = new RangeModel(result);\n\n          this._refreshFromRanges();\n        },\n\n        /**\n         * Set the calendar's type.\n         * @param {('date'|'month'|'year')} type - Calendar type\n         * @example\n         * datepicker.setType('month');\n         */\n        setType: function setType(type) {\n          this._type = type;\n        },\n\n        /**\n         * Add a selectable range. Use Date instances or numbers(timestamp).\n         * @param {Date|number} start - the start date\n         * @param {Date|number} end - the end date\n         * @example\n         * const start = new Date(2015, 1, 3);\n         * const end = new Date(2015, 2, 6);\n         *\n         * datepicker.addRange(start, end);\n         */\n        addRange: function addRange(start, end) {\n          start = new Date(start).getTime();\n          end = new Date(end).getTime();\n\n          this._rangeModel.add(start, end);\n\n          this._refreshFromRanges();\n        },\n\n        /**\n         * Remove a range. Use Date instances or numbers(timestamp).\n         * @param {Date|number} start - the start date\n         * @param {Date|number} end - the end date\n         * @param {null|'date'|'month'|'year'} type - Range type. If falsy, start and end values are considered as timestamp\n         * @example\n         * const start = new Date(2015, 1, 3);\n         * const end = new Date(2015, 2, 6);\n         *\n         * datepicker.removeRange(start, end);\n         */\n        removeRange: function removeRange(start, end, type) {\n          start = new Date(start);\n          end = new Date(end);\n\n          if (type) {\n            // @todo Consider time-range on timePicker\n            start = dateUtil.cloneWithStartOf(start, type);\n            end = dateUtil.cloneWithEndOf(end, type);\n          }\n\n          this._rangeModel.exclude(start.getTime(), end.getTime());\n\n          this._refreshFromRanges();\n        },\n\n        /**\n         * Add an opener.\n         * @param {HTMLElement|string} opener - element or selector of opener\n         */\n        addOpener: function addOpener(opener) {\n          opener = util.getElement(opener);\n\n          if (!this._isOpener(opener)) {\n            this._openers.push(opener);\n\n            this._setOpenerEvents(opener);\n          }\n        },\n\n        /**\n         * Remove an opener.\n         * @param {HTMLElement|string} opener - element or selector of opener\n         */\n        removeOpener: function removeOpener(opener) {\n          var index;\n          opener = util.getElement(opener);\n          index = inArray(opener, this._openers);\n\n          if (index > -1) {\n            this._removeOpenerEvents(opener);\n\n            this._openers.splice(index, 1);\n          }\n        },\n\n        /**\n         * Remove all openers.\n         */\n        removeAllOpeners: function removeAllOpeners() {\n          forEachArray(this._openers, function (opener) {\n            this._removeOpenerEvents(opener);\n          }, this);\n          this._openers = [];\n        },\n\n        /**\n         * Open the date picker.\n         * @example\n         * datepicker.open();\n         */\n        open: function open() {\n          if (this.isOpened() || !this._isEnabled) {\n            return;\n          }\n\n          this._calendar.draw({\n            date: this._date,\n            type: this._type\n          });\n\n          this._show();\n\n          if (!this.showAlways) {\n            this._setDocumentEvents();\n          }\n          /**\n           * Occur after the date picker opens.\n           * @event DatePicker#open\n           * @see {@link https://nhn.github.io/tui.code-snippet/latest/CustomEvents#on datepicker.on()} to bind event handlers.\n           * @see {@link https://nhn.github.io/tui.code-snippet/latest/CustomEvents#off datepicker.off()} to unbind event handlers.\n           * @see Refer to {@link https://nhn.github.io/tui.code-snippet/latest/CustomEvents CustomEvents from tui-code-snippet} for more methods. DatePicker mixes in the methods from CustomEvents.\n           * @example\n           * // bind the 'open' event\n           * datepicker.on('open', function() {\n           *     alert('open');\n           * });\n           *\n           * // unbind the 'open' event\n           * datepicker.off('open');\n           */\n\n\n          this.fire('open');\n        },\n\n        /**\n         * Raise the calendar type. (date -> month -> year)\n         * @param {Date} [date] - Date to set\n         */\n        drawUpperCalendar: function drawUpperCalendar(date) {\n          var calendarType = this.getCalendarType();\n\n          if (calendarType === TYPE_DATE) {\n            this._calendar.draw({\n              date: date,\n              type: TYPE_MONTH\n            });\n          } else if (calendarType === TYPE_MONTH) {\n            this._calendar.draw({\n              date: date,\n              type: TYPE_YEAR\n            });\n          }\n        },\n\n        /**\n         * Lower the calendar type. (year -> month -> date)\n         * @param {Date} [date] - Date to set\n         */\n        drawLowerCalendar: function drawLowerCalendar(date) {\n          var calendarType = this.getCalendarType();\n          var pickerType = this.getType();\n          var isLast = calendarType === pickerType;\n\n          if (isLast) {\n            return;\n          }\n\n          if (calendarType === TYPE_MONTH) {\n            this._calendar.draw({\n              date: date,\n              type: TYPE_DATE\n            });\n          } else if (calendarType === TYPE_YEAR) {\n            this._calendar.draw({\n              date: date,\n              type: TYPE_MONTH\n            });\n          }\n        },\n\n        /**\n         * Close the date picker.\n         * @exmaple\n         * datepicker.close();\n         */\n        close: function close() {\n          if (!this.isOpened()) {\n            return;\n          }\n\n          this._removeDocumentEvents();\n\n          this._hide();\n          /**\n           * Occur after the date picker closes.\n           * @event DatePicker#close\n           * @see {@link https://nhn.github.io/tui.code-snippet/latest/CustomEvents#on datepicker.on()} to bind event handlers.\n           * @see {@link https://nhn.github.io/tui.code-snippet/latest/CustomEvents#off datepicker.off()} to unbind event handlers.\n           * @see Refer to {@link https://nhn.github.io/tui.code-snippet/latest/CustomEvents CustomEvents from tui-code-snippet} for more methods. DatePicker mixes in the methods from CustomEvents.\n           * @example\n           * // bind the 'close' event\n           * datepicker.on('close', function() {\n           *     alert('close');\n           * });\n           *\n           * // unbind the 'close' event\n           * datepicker.off('close');\n           */\n\n\n          this.fire('close');\n        },\n\n        /**\n         * Toggle the date picker.\n         * @example\n         * datepicker.toggle();\n         */\n        toggle: function toggle() {\n          if (this.isOpened()) {\n            this.close();\n          } else {\n            this.open();\n          }\n        },\n\n        /**\n         * Return the selected date.\n         * @returns {?Date} - selected date\n         * @example\n         * // 2015-04-13\n         * datepicker.getDate(); // new Date(2015, 3, 13)\n         */\n        getDate: function getDate() {\n          if (!this._date) {\n            return null;\n          }\n\n          return new Date(this._date);\n        },\n\n        /**\n         * Select the date.\n         * @param {Date|number} date - Date instance or timestamp to set\n         * @example\n         * datepicker.setDate(new Date()); // Set today\n         */\n        // eslint-disable-next-line complexity\n        setDate: function setDate(date) {\n          var isValidInput, newDate, shouldUpdate;\n\n          if (date === null) {\n            this.setNull();\n            return;\n          }\n\n          isValidInput = isNumber(date) || isDate(date);\n          newDate = new Date(date);\n          shouldUpdate = isValidInput && this._isChanged(newDate) && this.isSelectable(newDate);\n\n          if (shouldUpdate) {\n            newDate = new Date(date);\n            this._date = newDate;\n\n            this._calendar.draw({\n              date: newDate\n            });\n\n            if (this._timePicker) {\n              this._timePicker.setTime(newDate.getHours(), newDate.getMinutes());\n            }\n\n            this._syncToInput();\n            /**\n             * Occur after the selected date is changed.\n             * @event DatePicker#change\n             * @see {@link https://nhn.github.io/tui.code-snippet/latest/CustomEvents#on datepicker.on()} to bind event handlers.\n             * @see {@link https://nhn.github.io/tui.code-snippet/latest/CustomEvents#off datepicker.off()} to unbind event handlers.\n             * @see Refer to {@link https://nhn.github.io/tui.code-snippet/latest/CustomEvents CustomEvents from tui-code-snippet} for more methods. DatePicker mixes in the methods from CustomEvents.\n             * @example\n             * // bind the 'change' event\n             * datepicker.on('change', function() {\n             *     console.log(`Selected date: ${datepicker.getDate()}`);\n             * });\n             *\n             * // unbind the 'change' event\n             * datepicker.off('change');\n             */\n\n\n            this.fire('change');\n          }\n        },\n\n        /**\n         * Set no date to be selected. (Selected date: null)\n         */\n        setNull: function setNull() {\n          var calendarDate = this._calendar.getDate();\n\n          var isChagned = this._date !== null;\n          this._date = null;\n\n          if (this._datepickerInput) {\n            this._datepickerInput.clearText();\n          }\n\n          if (this._timePicker) {\n            this._timePicker.setTime(0, 0);\n          } // View update\n\n\n          if (!this.isSelectable(calendarDate)) {\n            this._calendar.draw({\n              date: new Date(this._rangeModel.getMinimumValue())\n            });\n          } else {\n            this._calendar.draw();\n          }\n\n          if (isChagned) {\n            this.fire('change');\n          }\n        },\n\n        /**\n         * Select the date by the date string format.\n         * @param {String} [format] - Date string format\n         * @example\n         * datepicker.setDateFormat('yyyy-MM-dd');\n         * datepicker.setDateFormat('MM-dd, yyyy');\n         * datepicker.setDateFormat('yy/M/d');\n         * datepicker.setDateFormat('yy/MM/dd');\n         */\n        setDateFormat: function setDateFormat(format) {\n          this._datepickerInput.setFormat(format);\n\n          this._syncToInput();\n        },\n\n        /**\n         * Return whether the datepicker opens or not\n         * @returns {boolean}\n         * @example\n         * datepicker.close();\n         * datepicker.isOpened(); // false\n         *\n         * datepicker.open();\n         * datepicker.isOpened(); // true\n         */\n        isOpened: function isOpened() {\n          return !hasClass(this._element, CLASS_NAME_HIDDEN);\n        },\n\n        /**\n         * Return the time picker instance\n         * @returns {?TimePicker} - TimePicker instance\n         * @see {@link https://nhn.github.io/tui.time-picker/latest tui-time-picker}\n         * @example\n         * const timePicker = this.getTimePicker();\n         */\n        getTimePicker: function getTimePicker() {\n          return this._timePicker;\n        },\n\n        /**\n         * Return the calendar instance.\n         * @see {@link calendar Calendar}\n         * @returns {Calendar}\n         */\n        getCalendar: function getCalendar() {\n          return this._calendar;\n        },\n\n        /**\n         * Return the locale text object.\n         * @see {@link DatePicker#localeTexts DatePicker.localeTexts}\n         * @returns {object}\n         */\n        getLocaleText: function getLocaleText() {\n          return localeTexts[this._language] || localeTexts[DEFAULT_LANGUAGE_TYPE];\n        },\n\n        /**\n         * Set the input element\n         * @param {string|HTMLElement} element - Input element or selector\n         * @param {object} [options] - Input option\n         * @param {string} [options.format = prevInput.format] - Format of the Date string in the input\n         * @param {boolean} [options.syncFromInput = false] - Whether set the date from the input\n         */\n        setInput: function setInput(element, options) {\n          var prev = this._datepickerInput;\n          var localeText = this.getLocaleText();\n          var prevFormat;\n          options = options || {};\n\n          if (prev) {\n            prevFormat = prev.getFormat();\n            prev.destroy();\n          }\n\n          this._datepickerInput = new DatePickerInput(element, {\n            format: options.format || prevFormat,\n            id: this._id,\n            localeText: localeText\n          });\n\n          this._datepickerInput.on({\n            change: this._onChangeInput,\n            click: this.open\n          }, this);\n\n          if (options.syncFromInput) {\n            this._syncFromInput();\n          } else {\n            this._syncToInput();\n          }\n        },\n\n        /**\n         * Enable the date picker.\n         */\n        enable: function enable() {\n          if (this._isEnabled) {\n            return;\n          }\n\n          this._isEnabled = true;\n\n          this._datepickerInput.enable();\n\n          forEachArray(this._openers, function (opener) {\n            opener.removeAttribute('disabled');\n\n            this._setOpenerEvents(opener);\n          }, this);\n        },\n\n        /**\n         * Disable the date picker.\n         */\n        disable: function disable() {\n          if (!this._isEnabled) {\n            return;\n          }\n\n          this._isEnabled = false;\n          this.close();\n\n          this._datepickerInput.disable();\n\n          forEachArray(this._openers, function (opener) {\n            opener.setAttribute('disabled', true);\n\n            this._removeOpenerEvents(opener);\n          }, this);\n        },\n\n        /**\n         * Return whether the date picker is disabled\n         * @returns {boolean}\n         */\n        isDisabled: function isDisabled() {\n          // @todo this._isEnabled --> this._isDisabled\n          return !this._isEnabled;\n        },\n\n        /**\n         * Apply a CSS class to the date picker.\n         * @param {string} className - Class name\n         */\n        addCssClass: function addCssClass(className) {\n          addClass(this._element, className);\n        },\n\n        /**\n         * Remove a CSS class from the date picker.\n         * @param {string} className - Class name\n         */\n        removeCssClass: function removeCssClass(className) {\n          removeClass(this._element, className);\n        },\n\n        /**\n         * Return the date elements on the calendar.\n         * @returns {HTMLElement[]}\n         */\n        getDateElements: function getDateElements() {\n          return this._calendar.getDateElements();\n        },\n\n        /**\n         * Return the first overlapped range from the point or range.\n         * @param {Date|number} startDate - Start date to find overlapped range\n         * @param {Date|number} endDate - End date to find overlapped range\n         * @returns {Array.<Date>} - \\[startDate, endDate]\n         */\n        findOverlappedRange: function findOverlappedRange(startDate, endDate) {\n          var startTimestamp = new Date(startDate).getTime();\n          var endTimestamp = new Date(endDate).getTime();\n\n          var overlappedRange = this._rangeModel.findOverlappedRange(startTimestamp, endTimestamp);\n\n          return [new Date(overlappedRange[0]), new Date(overlappedRange[1])];\n        },\n\n        /**\n         * Change language.\n         * @param {string} language - Language code. English('en') and Korean('ko') are provided as default.\n         * @see To set to the other languages, use {@link DatePicker#localeTexts DatePicker.localeTexts}.\n         */\n        changeLanguage: function changeLanguage(language) {\n          this._language = language;\n\n          this._calendar.changeLanguage(this._language);\n\n          this._datepickerInput.changeLocaleTitles(this.getLocaleText().titles);\n\n          this.setDateFormat(this._datepickerInput.getFormat());\n\n          if (this._timePicker) {\n            this._timePicker.changeLanguage(this._language);\n          }\n        },\n\n        /**\n         * Destroy the date picker.\n         */\n        destroy: function destroy() {\n          this._removeDocumentEvents();\n\n          this._calendar.destroy();\n\n          if (this._timePicker) {\n            this._timePicker.destroy();\n          }\n\n          if (this._datepickerInput) {\n            this._datepickerInput.destroy();\n          }\n\n          this._removeEvents();\n\n          removeElement(this._element);\n          this.removeAllOpeners();\n          this._calendar = this._timePicker = this._datepickerInput = this._container = this._element = this._date = this._rangeModel = this._openers = this._isEnabled = this._id = null;\n        }\n      });\n      CustomEvents.mixin(DatePicker);\n      module.exports = DatePicker;\n      /***/\n    },\n    /* 22 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Check whether the given variable is an object or not.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Check whether the given variable is an object or not.\n       * If the given variable is an object, return true.\n       * @param {*} obj - Target for checking\n       * @returns {boolean} Is object?\n       * @memberof module:type\n       */\n\n      function isObject(obj) {\n        return obj === Object(obj);\n      }\n\n      module.exports = isObject;\n      /***/\n    },\n    /* 23 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Execute the provided callback once for each property of object which actually exist.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Execute the provided callback once for each property of object which actually exist.\n       * If the callback function returns false, the loop will be stopped.\n       * Callback function(iteratee) is invoked with three arguments:\n       *  1) The value of the property\n       *  2) The name of the property\n       *  3) The object being traversed\n       * @param {Object} obj The object that will be traversed\n       * @param {function} iteratee  Callback function\n       * @param {Object} [context] Context(this) of callback function\n       * @memberof module:collection\n       * @example\n       * var forEachOwnProperties = require('tui-code-snippet/collection/forEachOwnProperties'); // node, commonjs\n       *\n       * var sum = 0;\n       *\n       * forEachOwnProperties({a:1,b:2,c:3}, function(value){\n       *     sum += value;\n       * });\n       * alert(sum); // 6\n       */\n\n      function forEachOwnProperties(obj, iteratee, context) {\n        var key;\n        context = context || null;\n\n        for (key in obj) {\n          if (obj.hasOwnProperty(key)) {\n            if (iteratee.call(context, obj[key], key, obj) === false) {\n              break;\n            }\n          }\n        }\n      }\n\n      module.exports = forEachOwnProperties;\n      /***/\n    },\n    /* 24 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Set className value\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var isArray = __webpack_require__(6);\n\n      var isUndefined = __webpack_require__(12);\n      /**\n       * Set className value\n       * @param {(HTMLElement|SVGElement)} element - target element\n       * @param {(string|string[])} cssClass - class names\n       * @private\n       */\n\n\n      function setClassName(element, cssClass) {\n        cssClass = isArray(cssClass) ? cssClass.join(' ') : cssClass;\n        cssClass = cssClass.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n        if (isUndefined(element.className.baseVal)) {\n          element.className = cssClass;\n          return;\n        }\n\n        element.className.baseVal = cssClass;\n      }\n\n      module.exports = setClassName;\n      /***/\n    },\n    /* 25 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Find parent element recursively\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var matches = __webpack_require__(40);\n      /**\n       * Find parent element recursively\n       * @param {HTMLElement} element - base element to start find\n       * @param {string} selector - selector string for find\n       * @returns {HTMLElement} - element finded or null\n       * @memberof module:domUtil\n       */\n\n\n      function closest(element, selector) {\n        var parent = element.parentNode;\n\n        if (matches(element, selector)) {\n          return element;\n        }\n\n        while (parent && parent !== document) {\n          if (matches(parent, selector)) {\n            return parent;\n          }\n\n          parent = parent.parentNode;\n        }\n\n        return null;\n      }\n\n      module.exports = closest;\n      /***/\n    },\n    /* 26 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Get data value from data-attribute\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var convertToKebabCase = __webpack_require__(42);\n      /**\n       * Get data value from data-attribute\n       * @param {HTMLElement} element - target element\n       * @param {string} key - key\n       * @returns {string} value\n       * @memberof module:domUtil\n       */\n\n\n      function getData(element, key) {\n        if (element.dataset) {\n          return element.dataset[key];\n        }\n\n        return element.getAttribute('data-' + convertToKebabCase(key));\n      }\n\n      module.exports = getData;\n      /***/\n    },\n    /* 27 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Check element has specific css class\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var inArray = __webpack_require__(3);\n\n      var getClass = __webpack_require__(17);\n      /**\n       * Check element has specific css class\n       * @param {(HTMLElement|SVGElement)} element - target element\n       * @param {string} cssClass - css class\n       * @returns {boolean}\n       * @memberof module:domUtil\n       */\n\n\n      function hasClass(element, cssClass) {\n        var origin;\n\n        if (element.classList) {\n          return element.classList.contains(cssClass);\n        }\n\n        origin = getClass(element).split(/\\s+/);\n        return inArray(cssClass, origin) > -1;\n      }\n\n      module.exports = hasClass;\n      /***/\n    },\n    /* 28 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Check whether the given variable is an instance of Date or not.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Check whether the given variable is an instance of Date or not.\n       * If the given variables is an instance of Date, return true.\n       * @param {*} obj - Target for checking\n       * @returns {boolean} Is an instance of Date?\n       * @memberof module:type\n       */\n\n      function isDate(obj) {\n        return obj instanceof Date;\n      }\n\n      module.exports = isDate;\n      /***/\n    },\n    /* 29 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Calendar component\n       * @author NHN. FE dev Lab <dl_javascript@nhn.com>\n       */\n\n      var defineClass = __webpack_require__(0);\n\n      var CustomEvents = __webpack_require__(8);\n\n      var addClass = __webpack_require__(16);\n\n      var hasClass = __webpack_require__(27);\n\n      var removeClass = __webpack_require__(18);\n\n      var removeElement = __webpack_require__(14);\n\n      var extend = __webpack_require__(7);\n\n      var Header = __webpack_require__(44);\n\n      var Body = __webpack_require__(49);\n\n      var localeTexts = __webpack_require__(10);\n\n      var constants = __webpack_require__(1);\n\n      var dateUtil = __webpack_require__(5);\n\n      var util = __webpack_require__(4);\n\n      var DEFAULT_LANGUAGE_TYPE = constants.DEFAULT_LANGUAGE_TYPE;\n      var TYPE_DATE = constants.TYPE_DATE;\n      var TYPE_MONTH = constants.TYPE_MONTH;\n      var TYPE_YEAR = constants.TYPE_YEAR;\n      var CLASS_NAME_PREV_MONTH_BTN = constants.CLASS_NAME_PREV_MONTH_BTN;\n      var CLASS_NAME_PREV_YEAR_BTN = constants.CLASS_NAME_PREV_YEAR_BTN;\n      var CLASS_NAME_NEXT_YEAR_BTN = constants.CLASS_NAME_NEXT_YEAR_BTN;\n      var CLASS_NAME_NEXT_MONTH_BTN = constants.CLASS_NAME_NEXT_MONTH_BTN;\n      var CLASS_NAME_CALENDAR_MONTH = 'tui-calendar-month';\n      var CLASS_NAME_CALENDAR_YEAR = 'tui-calendar-year';\n      var CLASS_NAME_HIDDEN = 'tui-hidden';\n      var HEADER_SELECTOR = '.tui-calendar-header';\n      var BODY_SELECTOR = '.tui-calendar-body';\n      /**\n       * @class\n       * @description\n       * Create a calendar by {@link DatePicker#createCalendar DatePicker.createCalendar()}.\n       * @see {@link /tutorial-example07-calendar Calendar example}\n       * @param {HTMLElement|string} container - Container or selector of the Calendar\n       * @param {Object} [options] - Calendar options\n       *     @param {Date} [options.date = new Date()] - Initial date (default: today)\n       *     @param {('date'|'month'|'year')} [options.type = 'date'] - Calendar type. Determine whether to show a date, month, or year.\n       *     @param {string} [options.language = 'en'] - Language code. English('en') and Korean('ko') are provided as default. To use the other languages, use {@link DatePicker#localeTexts DatePicker.localeTexts}.\n       *     @param {boolean} [options.showToday = true] - Show today.\n       *     @param {boolean} [options.showJumpButtons = false] - Show the yearly jump buttons (move to the previous and next year in 'date' Calendar)\n       *     @param {boolean} [options.usageStatistics = true] - Send a hostname to Google Analytics (default: true)\n       * @example\n       * import DatePicker from 'tui-date-picker' // ES6\n       * // const DatePicker = require('tui-date-picker'); // CommonJS\n       * // const DatePicker = tui.DatePicker;\n       *\n       * const calendar = DatePicker.createCalendar('#calendar-wrapper', {\n       *     language: 'en',\n       *     showToday: true,\n       *     showJumpButtons: false,\n       *     date: new Date(),\n       *     type: 'date'\n       * });\n       *\n       * calendar.on('draw', function(event) {\n       *     console.log(event.date);\n       *     console.log(event.type);\n       *     for (let i = 0, len = event.dateElements.length; i < len; i += 1) {\n       *         const el = event.dateElements[i];\n       *         const date = new Date(getData(el, 'timestamp'));\n       *         console.log(date);\n       *     }\n       * });\n       */\n\n      var Calendar = defineClass(\n      /** @lends Calendar.prototype */\n      {\n        static: {\n          localeTexts: localeTexts\n        },\n        init: function init(container, options) {\n          options = extend({\n            language: DEFAULT_LANGUAGE_TYPE,\n            showToday: true,\n            showJumpButtons: false,\n            date: new Date(),\n            type: TYPE_DATE,\n            usageStatistics: true\n          }, options);\n          /**\n           * Container element\n           * @type {HTMLElement}\n           * @private\n           */\n\n          this._container = util.getElement(container);\n          this._container.innerHTML = '<div class=\"tui-calendar\">' + '    <div class=\"tui-calendar-header\"></div>' + '    <div class=\"tui-calendar-body\"></div>' + '</div>';\n          /**\n           * Wrapper element\n           * @type {HTMLElement}\n           * @private\n           */\n\n          this._element = this._container.firstChild;\n          /**\n           * Date\n           * @type {Date}\n           * @private\n           */\n\n          this._date = null;\n          /**\n           * Layer type\n           * @type {string}\n           * @private\n           */\n\n          this._type = null;\n          /**\n           * Header box\n           * @type {Header}\n           * @private\n           */\n\n          this._header = null;\n          /**\n           * Body box\n           * @type {Body}\n           * @private\n           */\n\n          this._body = null;\n\n          this._initHeader(options);\n\n          this._initBody(options);\n\n          this.draw({\n            date: options.date,\n            type: options.type\n          });\n\n          if (options.usageStatistics) {\n            util.sendHostName();\n          }\n        },\n\n        /**\n         * Initialize header\n         * @param {object} options - Header options\n         * @private\n         */\n        _initHeader: function _initHeader(options) {\n          var headerContainer = this._element.querySelector(HEADER_SELECTOR);\n\n          this._header = new Header(headerContainer, options);\n\n          this._header.on('click', function (ev) {\n            var target = util.getTarget(ev);\n\n            if (hasClass(target, CLASS_NAME_PREV_MONTH_BTN)) {\n              this.drawPrev();\n            } else if (hasClass(target, CLASS_NAME_PREV_YEAR_BTN)) {\n              this._onClickPrevYear();\n            } else if (hasClass(target, CLASS_NAME_NEXT_MONTH_BTN)) {\n              this.drawNext();\n            } else if (hasClass(target, CLASS_NAME_NEXT_YEAR_BTN)) {\n              this._onClickNextYear();\n            }\n          }, this);\n        },\n\n        /**\n         * Initialize body\n         * @param {object} options - Body options\n         * @private\n         */\n        _initBody: function _initBody(options) {\n          var bodyContainer = this._element.querySelector(BODY_SELECTOR);\n\n          this._body = new Body(bodyContainer, options);\n        },\n\n        /**\n         * clickHandler - prev year button\n         * @private\n         */\n        _onClickPrevYear: function _onClickPrevYear() {\n          if (this.getType() === TYPE_DATE) {\n            this.draw({\n              date: this._getRelativeDate(-12)\n            });\n          } else {\n            this.drawPrev();\n          }\n        },\n\n        /**\n         * clickHandler - next year button\n         * @private\n         */\n        _onClickNextYear: function _onClickNextYear() {\n          if (this.getType() === TYPE_DATE) {\n            this.draw({\n              date: this._getRelativeDate(12)\n            });\n          } else {\n            this.drawNext();\n          }\n        },\n\n        /**\n         * Returns whether the layer type is valid\n         * @param {string} type - Layer type to check\n         * @returns {boolean}\n         * @private\n         */\n        _isValidType: function _isValidType(type) {\n          return type === TYPE_DATE || type === TYPE_MONTH || type === TYPE_YEAR;\n        },\n\n        /**\n         * @param {Date} date - Date to draw\n         * @param {string} type - Layer type to draw\n         * @returns {boolean}\n         * @private\n         */\n        _shouldUpdate: function _shouldUpdate(date, type) {\n          var prevDate = this._date;\n\n          if (!dateUtil.isValidDate(date)) {\n            throw new Error('Invalid date');\n          }\n\n          if (!this._isValidType(type)) {\n            throw new Error('Invalid layer type');\n          }\n\n          return !prevDate || prevDate.getFullYear() !== date.getFullYear() || prevDate.getMonth() !== date.getMonth() || this.getType() !== type;\n        },\n\n        /**\n         * Render header & body elements\n         * @private\n         */\n        _render: function _render() {\n          var date = this._date;\n          var type = this.getType();\n\n          this._header.render(date, type);\n\n          this._body.render(date, type);\n\n          removeClass(this._element, CLASS_NAME_CALENDAR_MONTH, CLASS_NAME_CALENDAR_YEAR);\n\n          switch (type) {\n            case TYPE_MONTH:\n              addClass(this._element, CLASS_NAME_CALENDAR_MONTH);\n              break;\n\n            case TYPE_YEAR:\n              addClass(this._element, CLASS_NAME_CALENDAR_YEAR);\n              break;\n\n            default:\n              break;\n          }\n        },\n\n        /**\n         * Returns relative date\n         * @param {number} step - Month step\n         * @returns {Date}\n         * @private\n         */\n        _getRelativeDate: function _getRelativeDate(step) {\n          var prev = this._date;\n          return new Date(prev.getFullYear(), prev.getMonth() + step);\n        },\n\n        /**\n         * Draw the calendar.\n         * @param {Object} [options] - Draw options\n         *   @param {Date} [options.date] - Date to set\n         *   @param {('date'|'month'|'year')} [options.type = 'date'] - Calendar type. Determine whether to show a date, month, or year.\n         * @example\n         * calendar.draw();\n         * calendar.draw({\n         *     date: new Date()\n         * });\n         * calendar.draw({\n         *     type: 'month'\n         * });\n         * calendar.draw({\n         *     type: 'month',\n         *     date: new Date()\n         * });\n         */\n        draw: function draw(options) {\n          var date, type;\n          options = options || {};\n          date = options.date || this._date;\n          type = (options.type || this.getType()).toLowerCase();\n\n          if (this._shouldUpdate(date, type)) {\n            this._date = date;\n            this._type = type;\n\n            this._render();\n          }\n          /**\n           * Occur after the calendar draws.\n           * @event Calendar#draw\n           * @see {@link https://nhn.github.io/tui.code-snippet/latest/CustomEvents#on calendar.on()} to bind event handlers.\n           * @see {@link https://nhn.github.io/tui.code-snippet/latest/CustomEvents#off calendar.off()} to unbind event handlers.\n           * @see Refer to {@link https://nhn.github.io/tui.code-snippet/latest/CustomEvents CustomEvents from tui-code-snippet} for more methods. Calendar mixes in the methods from CustomEvents.\n           * @property {Date} date - Calendar date\n           * @property {('date'|'month'|'year')} type - Calendar type\n           * @property {HTMLElement[]} dateElements - elements for dates\n           * @example\n           * // bind the 'draw' event\n           * calendar.on('draw', function({type, date}) {\n           *     console.log(`Draw the ${type} calendar and its date is ${date}.`);\n           * });\n           *\n           * // unbind the 'draw' event\n           * calendar.off('draw');\n           */\n\n\n          this.fire('draw', {\n            date: this._date,\n            type: type,\n            dateElements: this._body.getDateElements()\n          });\n        },\n\n        /**\n         * Show the calendar.\n         */\n        show: function show() {\n          removeClass(this._element, CLASS_NAME_HIDDEN);\n        },\n\n        /**\n         * Hide the calendar.\n         */\n        hide: function hide() {\n          addClass(this._element, CLASS_NAME_HIDDEN);\n        },\n\n        /**\n         * Draw the next page.\n         */\n        drawNext: function drawNext() {\n          this.draw({\n            date: this.getNextDate()\n          });\n        },\n\n        /**\n         * Draw the previous page.\n         */\n        drawPrev: function drawPrev() {\n          this.draw({\n            date: this.getPrevDate()\n          });\n        },\n\n        /**\n         * Return the next date.\n         * @returns {Date}\n         */\n        getNextDate: function getNextDate() {\n          if (this.getType() === TYPE_DATE) {\n            return this._getRelativeDate(1);\n          }\n\n          return this.getNextYearDate();\n        },\n\n        /**\n         * Return the previous date.\n         * @returns {Date}\n         */\n        getPrevDate: function getPrevDate() {\n          if (this.getType() === TYPE_DATE) {\n            return this._getRelativeDate(-1);\n          }\n\n          return this.getPrevYearDate();\n        },\n\n        /**\n         * Return the date a year later.\n         * @returns {Date}\n         */\n        getNextYearDate: function getNextYearDate() {\n          switch (this.getType()) {\n            case TYPE_DATE:\n            case TYPE_MONTH:\n              return this._getRelativeDate(12);\n            // 12 months = 1 year\n\n            case TYPE_YEAR:\n              return this._getRelativeDate(108);\n            // 108 months = 9 years = 12 * 9\n\n            default:\n              throw new Error('Unknown layer type');\n          }\n        },\n\n        /**\n         * Return the date a year previously.\n         * @returns {Date}\n         */\n        getPrevYearDate: function getPrevYearDate() {\n          switch (this.getType()) {\n            case TYPE_DATE:\n            case TYPE_MONTH:\n              return this._getRelativeDate(-12);\n            // 12 months = 1 year\n\n            case TYPE_YEAR:\n              return this._getRelativeDate(-108);\n            // 108 months = 9 years = 12 * 9\n\n            default:\n              throw new Error('Unknown layer type');\n          }\n        },\n\n        /**\n         * Change language.\n         * @param {string} language - Language code. English('en') and Korean('ko') are provided as default.\n         * @see To set to the other languages, use {@link DatePicker#localeTexts DatePicker.localeTexts}.\n         */\n        changeLanguage: function changeLanguage(language) {\n          this._header.changeLanguage(language);\n\n          this._body.changeLanguage(language);\n\n          this._render();\n        },\n\n        /**\n         * Return the rendered date.\n         * @returns {Date}\n         */\n        getDate: function getDate() {\n          return new Date(this._date);\n        },\n\n        /**\n         * Return the calendar's type.\n         * @returns {('date'|'month'|'year')}\n         */\n        getType: function getType() {\n          return this._type;\n        },\n\n        /**\n         * Returns HTML elements for dates.\n         * @returns {HTMLElement[]}\n         */\n        getDateElements: function getDateElements() {\n          return this._body.getDateElements();\n        },\n\n        /**\n         * Apply a CSS class to the calendar.\n         * @param {string} className - Class name\n         */\n        addCssClass: function addCssClass(className) {\n          addClass(this._element, className);\n        },\n\n        /**\n         * Remove a CSS class from the calendar.\n         * @param {string} className - Class name\n         */\n        removeCssClass: function removeCssClass(className) {\n          removeClass(this._element, className);\n        },\n\n        /**\n         * Destroy the calendar.\n         */\n        destroy: function destroy() {\n          this._header.destroy();\n\n          this._body.destroy();\n\n          removeElement(this._element);\n          this._type = this._date = this._container = this._element = this._header = this._body = null;\n        }\n      });\n      CustomEvents.mixin(Calendar);\n      module.exports = Calendar;\n      /***/\n    },\n    /* 30 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Date <-> Text formatting module\n       * @author NHN. FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var inArray = __webpack_require__(3);\n\n      var forEachArray = __webpack_require__(2);\n\n      var defineClass = __webpack_require__(0);\n\n      var util = __webpack_require__(4);\n\n      var dateUtil = __webpack_require__(5);\n\n      var constants = __webpack_require__(1);\n\n      var localeTexts = __webpack_require__(10);\n\n      var rFormableKeys = /\\\\?(yyyy|yy|mmmm|mmm|mm|m|dd|d|hh|h|a)/gi;\n      var mapForConverting = {\n        yyyy: {\n          expression: '(\\\\d{4}|\\\\d{2})',\n          type: constants.TYPE_YEAR\n        },\n        yy: {\n          expression: '(\\\\d{4}|\\\\d{2})',\n          type: constants.TYPE_YEAR\n        },\n        y: {\n          expression: '(\\\\d{4}|\\\\d{2})',\n          type: constants.TYPE_YEAR\n        },\n        M: {\n          expression: '(1[012]|0[1-9]|[1-9])',\n          type: constants.TYPE_MONTH\n        },\n        MM: {\n          expression: '(1[012]|0[1-9]|[1-9])',\n          type: constants.TYPE_MONTH\n        },\n        MMM: {\n          expression: '(1[012]|0[1-9]|[1-9])',\n          type: constants.TYPE_MONTH\n        },\n        MMMM: {\n          expression: '(1[012]|0[1-9]|[1-9])',\n          type: constants.TYPE_MONTH\n        },\n        mmm: {\n          expression: '(1[012]|0[1-9]|[1-9])',\n          type: constants.TYPE_MONTH\n        },\n        mmmm: {\n          expression: '(1[012]|0[1-9]|[1-9])',\n          type: constants.TYPE_MONTH\n        },\n        dd: {\n          expression: '([12]\\\\d{1}|3[01]|0[1-9]|[1-9])',\n          type: constants.TYPE_DATE\n        },\n        d: {\n          expression: '([12]\\\\d{1}|3[01]|0[1-9]|[1-9])',\n          type: constants.TYPE_DATE\n        },\n        D: {\n          expression: '([12]\\\\d{1}|3[01]|0[1-9]|[1-9])',\n          type: constants.TYPE_DATE\n        },\n        DD: {\n          expression: '([12]\\\\d{1}|3[01]|0[1-9]|[1-9])',\n          type: constants.TYPE_DATE\n        },\n        h: {\n          expression: '(d{1}|0\\\\d{1}|1\\\\d{1}|2[0123])',\n          type: constants.TYPE_HOUR\n        },\n        hh: {\n          expression: '(d{1}|[01]\\\\d{1}|2[0123])',\n          type: constants.TYPE_HOUR\n        },\n        H: {\n          expression: '(d{1}|0\\\\d{1}|1\\\\d{1}|2[0123])',\n          type: constants.TYPE_HOUR\n        },\n        HH: {\n          expression: '(d{1}|[01]\\\\d{1}|2[0123])',\n          type: constants.TYPE_HOUR\n        },\n        m: {\n          expression: '(d{1}|[012345]\\\\d{1})',\n          type: constants.TYPE_MINUTE\n        },\n        mm: {\n          expression: '(d{1}|[012345]\\\\d{1})',\n          type: constants.TYPE_MINUTE\n        },\n        a: {\n          expression: '([ap]m)',\n          type: constants.TYPE_MERIDIEM\n        },\n        A: {\n          expression: '([ap]m)',\n          type: constants.TYPE_MERIDIEM\n        }\n      };\n      /**\n       * @class\n       * @ignore\n       */\n\n      var DateTimeFormatter = defineClass(\n      /** @lends DateTimeFormatter.prototype */\n      {\n        init: function init(rawStr, titles) {\n          /**\n           * @type {string}\n           * @private\n           */\n          this._rawStr = rawStr;\n          /**\n           * @type {Array}\n           * @private\n           * @example\n           *  rawStr = \"yyyy-MM-dd\" --> keyOrder = ['year', 'month', 'date']\n           *  rawStr = \"MM/dd, yyyy\" --> keyOrder = ['month', 'date', 'year']\n           */\n\n          this._keyOrder = null;\n          /**\n           * @type {RegExp}\n           * @private\n           */\n\n          this._regExp = null;\n          /**\n           * Titles\n           * @type {object}\n           * @private\n           */\n\n          this._titles = titles || localeTexts.en.titles;\n\n          this._parseFormat();\n        },\n\n        /**\n         * Parse initial format and make the keyOrder, regExp\n         * @private\n         */\n        _parseFormat: function _parseFormat() {\n          var regExpStr = '^';\n\n          var matchedKeys = this._rawStr.match(rFormableKeys);\n\n          var keyOrder = [];\n          matchedKeys = util.filter(matchedKeys, function (key) {\n            return key[0] !== '\\\\';\n          });\n          forEachArray(matchedKeys, function (key, index) {\n            if (!/m/i.test(key)) {\n              key = key.toLowerCase();\n            }\n\n            regExpStr += mapForConverting[key].expression + '[\\\\D\\\\s]*';\n            keyOrder[index] = mapForConverting[key].type;\n          }); // This formatter does not allow additional numbers at the end of string.\n\n          regExpStr += '$';\n          this._keyOrder = keyOrder;\n          this._regExp = new RegExp(regExpStr, 'gi');\n        },\n\n        /**\n         * Parse string to dateHash\n         * @param {string} str - Date string\n         * @returns {Date}\n         */\n        parse: function parse(str) {\n          var dateHash = {\n            year: 0,\n            month: 1,\n            date: 1,\n            hour: 0,\n            minute: 0\n          };\n          var hasMeridiem = false;\n          var isPM = false;\n          var matched;\n          this._regExp.lastIndex = 0;\n          matched = this._regExp.exec(str);\n\n          if (!matched) {\n            throw Error('DateTimeFormatter: Not matched - \"' + str + '\"');\n          } // eslint-disable-next-line complexity\n\n\n          forEachArray(this._keyOrder, function (name, index) {\n            var value = matched[index + 1];\n\n            if (name === constants.TYPE_MERIDIEM && /[ap]m/i.test(value)) {\n              hasMeridiem = true;\n              isPM = /pm/i.test(value);\n            } else {\n              value = Number(value);\n\n              if (value !== 0 && !value) {\n                throw Error('DateTimeFormatter: Unknown value - ' + matched[index + 1]);\n              }\n\n              if (name === constants.TYPE_YEAR && value < 100) {\n                value += 2000;\n              }\n\n              dateHash[name] = value;\n            }\n          });\n\n          if (hasMeridiem) {\n            isPM = isPM || dateHash.hour > 12;\n            dateHash.hour %= 12;\n\n            if (isPM) {\n              dateHash.hour += 12;\n            }\n          }\n\n          return new Date(dateHash.year, dateHash.month - 1, dateHash.date, dateHash.hour, dateHash.minute);\n        },\n\n        /**\n         * Returns raw string of format\n         * @returns {string}\n         */\n        getRawString: function getRawString() {\n          return this._rawStr;\n        },\n\n        /**\n         * Format date to string\n         * @param {Date} dateObj - Date object\n         * @returns {string}\n         */\n        format: function format(dateObj) {\n          var year = dateObj.getFullYear();\n          var month = dateObj.getMonth() + 1;\n          var dayInMonth = dateObj.getDate();\n          var day = dateObj.getDay();\n          var hour = dateObj.getHours();\n          var minute = dateObj.getMinutes();\n          var meridiem = 'a'; // Default value for unusing meridiem format\n\n          var replaceMap;\n\n          if (inArray(constants.TYPE_MERIDIEM, this._keyOrder) > -1) {\n            meridiem = hour >= 12 ? 'pm' : 'am';\n            hour = dateUtil.getMeridiemHour(hour);\n          }\n\n          replaceMap = {\n            yyyy: year,\n            yy: String(year).substr(2, 2),\n            M: month,\n            MM: dateUtil.prependLeadingZero(month),\n            MMM: this._titles.MMM[month - 1],\n            MMMM: this._titles.MMMM[month - 1],\n            d: dayInMonth,\n            dd: dateUtil.prependLeadingZero(dayInMonth),\n            D: this._titles.D[day],\n            DD: this._titles.DD[day],\n            hh: dateUtil.prependLeadingZero(hour),\n            h: hour,\n            mm: dateUtil.prependLeadingZero(minute),\n            m: minute,\n            A: meridiem.toUpperCase(),\n            a: meridiem\n          };\n          return this._rawStr.replace(rFormableKeys, function (key) {\n            if (key[0] === '\\\\') {\n              return key.substr(1);\n            }\n\n            return replaceMap[key] || replaceMap[key.toLowerCase()] || '';\n          });\n        }\n      });\n      module.exports = DateTimeFormatter;\n      /***/\n    },\n    /* 31 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Bind DOM events\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var isString = __webpack_require__(13);\n\n      var forEach = __webpack_require__(9);\n\n      var safeEvent = __webpack_require__(32);\n      /**\n       * Bind DOM events.\n       * @param {HTMLElement} element - element to bind events\n       * @param {(string|object)} types - Space splitted events names or eventName:handler object\n       * @param {(function|object)} handler - handler function or context for handler method\n       * @param {object} [context] context - context for handler method.\n       * @memberof module:domEvent\n       * @example\n       * var div = document.querySelector('div');\n       * \n       * // Bind one event to an element.\n       * on(div, 'click', toggle);\n       * \n       * // Bind multiple events with a same handler to multiple elements at once.\n       * // Use event names splitted by a space.\n       * on(div, 'mouseenter mouseleave', changeColor);\n       * \n       * // Bind multiple events with different handlers to an element at once.\n       * // Use an object which of key is an event name and value is a handler function.\n       * on(div, {\n       *   keydown: highlight,\n       *   keyup: dehighlight\n       * });\n       * \n       * // Set a context for handler method.\n       * var name = 'global';\n       * var repository = {name: 'CodeSnippet'};\n       * on(div, 'drag', function() {\n       *  console.log(this.name);\n       * }, repository);\n       * // Result when you drag a div: \"CodeSnippet\"\n       */\n\n\n      function on(element, types, handler, context) {\n        if (isString(types)) {\n          forEach(types.split(/\\s+/g), function (type) {\n            bindEvent(element, type, handler, context);\n          });\n          return;\n        }\n\n        forEach(types, function (func, type) {\n          bindEvent(element, type, func, handler);\n        });\n      }\n      /**\n       * Bind DOM events\n       * @param {HTMLElement} element - element to bind events\n       * @param {string} type - events name\n       * @param {function} handler - handler function or context for handler method\n       * @param {object} [context] context - context for handler method.\n       * @private\n       */\n\n\n      function bindEvent(element, type, handler, context) {\n        /**\n           * Event handler\n           * @param {Event} e - event object\n           */\n        function eventHandler(e) {\n          handler.call(context || element, e || window.event);\n        }\n\n        if ('addEventListener' in element) {\n          element.addEventListener(type, eventHandler);\n        } else if ('attachEvent' in element) {\n          element.attachEvent('on' + type, eventHandler);\n        }\n\n        memorizeHandler(element, type, handler, eventHandler);\n      }\n      /**\n       * Memorize DOM event handler for unbinding.\n       * @param {HTMLElement} element - element to bind events\n       * @param {string} type - events name\n       * @param {function} handler - handler function that user passed at on() use\n       * @param {function} wrappedHandler - handler function that wrapped by domevent for implementing some features\n       * @private\n       */\n\n\n      function memorizeHandler(element, type, handler, wrappedHandler) {\n        var events = safeEvent(element, type);\n        var existInEvents = false;\n        forEach(events, function (obj) {\n          if (obj.handler === handler) {\n            existInEvents = true;\n            return false;\n          }\n\n          return true;\n        });\n\n        if (!existInEvents) {\n          events.push({\n            handler: handler,\n            wrappedHandler: wrappedHandler\n          });\n        }\n      }\n\n      module.exports = on;\n      /***/\n    },\n    /* 32 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Get event collection for specific HTML element\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var EVENT_KEY = '_feEventKey';\n      /**\n       * Get event collection for specific HTML element\n       * @param {HTMLElement} element - HTML element\n       * @param {string} type - event type\n       * @returns {array}\n       * @private\n       */\n\n      function safeEvent(element, type) {\n        var events = element[EVENT_KEY];\n        var handlers;\n\n        if (!events) {\n          events = element[EVENT_KEY] = {};\n        }\n\n        handlers = events[type];\n\n        if (!handlers) {\n          handlers = events[type] = [];\n        }\n\n        return handlers;\n      }\n\n      module.exports = safeEvent;\n      /***/\n    },\n    /* 33 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Unbind DOM events\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var isString = __webpack_require__(13);\n\n      var forEach = __webpack_require__(9);\n\n      var safeEvent = __webpack_require__(32);\n      /**\n       * Unbind DOM events\n       * If a handler function is not passed, remove all events of that type.\n       * @param {HTMLElement} element - element to unbind events\n       * @param {(string|object)} types - Space splitted events names or eventName:handler object\n       * @param {function} [handler] - handler function\n       * @memberof module:domEvent\n       * @example\n       * // Following the example of domEvent#on\n       * \n       * // Unbind one event from an element.\n       * off(div, 'click', toggle);\n       * \n       * // Unbind multiple events with a same handler from multiple elements at once.\n       * // Use event names splitted by a space.\n       * off(element, 'mouseenter mouseleave', changeColor);\n       * \n       * // Unbind multiple events with different handlers from an element at once.\n       * // Use an object which of key is an event name and value is a handler function.\n       * off(div, {\n       *   keydown: highlight,\n       *   keyup: dehighlight\n       * });\n       * \n       * // Unbind events without handlers.\n       * off(div, 'drag');\n       */\n\n\n      function off(element, types, handler) {\n        if (isString(types)) {\n          forEach(types.split(/\\s+/g), function (type) {\n            unbindEvent(element, type, handler);\n          });\n          return;\n        }\n\n        forEach(types, function (func, type) {\n          unbindEvent(element, type, func);\n        });\n      }\n      /**\n       * Unbind DOM events\n       * If a handler function is not passed, remove all events of that type.\n       * @param {HTMLElement} element - element to unbind events\n       * @param {string} type - events name\n       * @param {function} [handler] - handler function\n       * @private\n       */\n\n\n      function unbindEvent(element, type, handler) {\n        var events = safeEvent(element, type);\n        var index;\n\n        if (!handler) {\n          forEach(events, function (item) {\n            removeHandler(element, type, item.wrappedHandler);\n          });\n          events.splice(0, events.length);\n        } else {\n          forEach(events, function (item, idx) {\n            if (handler === item.handler) {\n              removeHandler(element, type, item.wrappedHandler);\n              index = idx;\n              return false;\n            }\n\n            return true;\n          });\n          events.splice(index, 1);\n        }\n      }\n      /**\n       * Remove an event handler\n       * @param {HTMLElement} element - An element to remove an event\n       * @param {string} type - event type\n       * @param {function} handler - event handler\n       * @private\n       */\n\n\n      function removeHandler(element, type, handler) {\n        if ('removeEventListener' in element) {\n          element.removeEventListener(type, handler);\n        } else if ('detachEvent' in element) {\n          element.detachEvent('on' + type, handler);\n        }\n      }\n\n      module.exports = off;\n      /***/\n    },\n    /* 34 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview The entry file of DatePicker components\n       * @author NHN. FE Development Team\n       */\n\n      var DatePicker = __webpack_require__(21);\n\n      var DateRangePicker = __webpack_require__(60);\n\n      var Calendar = __webpack_require__(29);\n\n      __webpack_require__(61);\n      /**\n       * Create a calendar.\n       * @see {@link Calendar}\n       * @see {@link /tutorial-example07-calendar Calendar example}\n       * @static\n       * @param {HTMLElement|string} wrapperElement - Container element or selector of the Calendar\n       * @param {Object} [options] - {@link Calendar} options. Refer to the {@link Calendar Calendar instance's options}.\n       * @returns {Calendar}\n       * @example\n       * const calendar = DatePicker.createCalendar('#calendar-wrapper', {\n       *    language: 'en',\n       *    showToday: true,\n       *    showJumpButtons: false,\n       *    date: new Date(),\n       *    type: 'date'\n       * });\n       */\n\n\n      DatePicker.createCalendar = function (wrapperElement, options) {\n        return new Calendar(wrapperElement, options);\n      };\n      /**\n       * Create a date-range picker.\n       * @see {@link DateRangePicker}\n       * @see {@link /tutorial-example08-daterangepicker DateRangePicker example}\n       * @static\n       * @param {object} options - {@link DateRangePicker} options. Refer to the {@link DateRangePicker DateRangePicker instance's options}.\n       * @returns {DateRangePicker}\n       * @example\n       * const rangepicker = DatePicker.createRangePicker({\n       *     startpicker: {\n       *         input: '#start-input',\n       *         container: '#start-container'\n       *     },\n       *     endpicker: {\n       *         input: '#end-input',\n       *         container: '#end-container'\n       *     },\n       *     type: 'date',\n       *     format: 'yyyy-MM-dd'\n       *     selectableRanges: [\n       *         [new Date(2017, 3, 1), new Date(2017, 5, 1)],\n       *         [new Date(2017, 6, 3), new Date(2017, 10, 5)]\n       *     ]\n       * });\n       */\n\n\n      DatePicker.createRangePicker = function (options) {\n        return new DateRangePicker(options);\n      };\n\n      module.exports = DatePicker;\n      /***/\n    },\n    /* 35 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Provide a simple inheritance in prototype-oriented.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var createObject = __webpack_require__(36);\n      /**\n       * Provide a simple inheritance in prototype-oriented.\n       * Caution :\n       *  Don't overwrite the prototype of child constructor.\n       *\n       * @param {function} subType Child constructor\n       * @param {function} superType Parent constructor\n       * @memberof module:inheritance\n       * @example\n       * var inherit = require('tui-code-snippet/inheritance/inherit'); // node, commonjs\n       *\n       * // Parent constructor\n       * function Animal(leg) {\n       *     this.leg = leg;\n       * }\n       * Animal.prototype.growl = function() {\n       *     // ...\n       * };\n       *\n       * // Child constructor\n       * function Person(name) {\n       *     this.name = name;\n       * }\n       *\n       * // Inheritance\n       * inherit(Person, Animal);\n       *\n       * // After this inheritance, please use only the extending of property.\n       * // Do not overwrite prototype.\n       * Person.prototype.walk = function(direction) {\n       *     // ...\n       * };\n       */\n\n\n      function inherit(subType, superType) {\n        var prototype = createObject(superType.prototype);\n        prototype.constructor = subType;\n        subType.prototype = prototype;\n      }\n\n      module.exports = inherit;\n      /***/\n    },\n    /* 36 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Create a new object with the specified prototype object and properties.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * @module inheritance\n       */\n\n      /**\n       * Create a new object with the specified prototype object and properties.\n       * @param {Object} obj This object will be a prototype of the newly-created object.\n       * @returns {Object}\n       * @memberof module:inheritance\n       */\n\n      function createObject(obj) {\n        function F() {} // eslint-disable-line require-jsdoc\n\n\n        F.prototype = obj;\n        return new F();\n      }\n\n      module.exports = createObject;\n      /***/\n    },\n    /* 37 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Check whether the given variable is existing or not.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var isUndefined = __webpack_require__(12);\n\n      var isNull = __webpack_require__(38);\n      /**\n       * Check whether the given variable is existing or not.\n       * If the given variable is not null and not undefined, returns true.\n       * @param {*} param - Target for checking\n       * @returns {boolean} Is existy?\n       * @memberof module:type\n       * @example\n       * var isExisty = require('tui-code-snippet/type/isExisty'); // node, commonjs\n       *\n       * isExisty(''); //true\n       * isExisty(0); //true\n       * isExisty([]); //true\n       * isExisty({}); //true\n       * isExisty(null); //false\n       * isExisty(undefined); //false\n      */\n\n\n      function isExisty(param) {\n        return !isUndefined(param) && !isNull(param);\n      }\n\n      module.exports = isExisty;\n      /***/\n    },\n    /* 38 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Check whether the given variable is null or not.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Check whether the given variable is null or not.\n       * If the given variable(arguments[0]) is null, returns true.\n       * @param {*} obj - Target for checking\n       * @returns {boolean} Is null?\n       * @memberof module:type\n       */\n\n      function isNull(obj) {\n        return obj === null;\n      }\n\n      module.exports = isNull;\n      /***/\n    },\n    /* 39 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Check whether the given variable is a function or not.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Check whether the given variable is a function or not.\n       * If the given variable is a function, return true.\n       * @param {*} obj - Target for checking\n       * @returns {boolean} Is function?\n       * @memberof module:type\n       */\n\n      function isFunction(obj) {\n        return obj instanceof Function;\n      }\n\n      module.exports = isFunction;\n      /***/\n    },\n    /* 40 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Check element match selector\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var inArray = __webpack_require__(3);\n\n      var toArray = __webpack_require__(41);\n\n      var elProto = Element.prototype;\n\n      var matchSelector = elProto.matches || elProto.webkitMatchesSelector || elProto.mozMatchesSelector || elProto.msMatchesSelector || function (selector) {\n        var doc = this.document || this.ownerDocument;\n        return inArray(this, toArray(doc.querySelectorAll(selector))) > -1;\n      };\n      /**\n       * Check element match selector\n       * @param {HTMLElement} element - element to check\n       * @param {string} selector - selector to check\n       * @returns {boolean} is selector matched to element?\n       * @memberof module:domUtil\n       */\n\n\n      function matches(element, selector) {\n        return matchSelector.call(element, selector);\n      }\n\n      module.exports = matches;\n      /***/\n    },\n    /* 41 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Transform the Array-like object to Array.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var forEachArray = __webpack_require__(2);\n      /**\n       * Transform the Array-like object to Array.\n       * In low IE (below 8), Array.prototype.slice.call is not perfect. So, try-catch statement is used.\n       * @param {*} arrayLike Array-like object\n       * @returns {Array} Array\n       * @memberof module:collection\n       * @example\n       * var toArray = require('tui-code-snippet/collection/toArray'); // node, commonjs\n       *\n       * var arrayLike = {\n       *     0: 'one',\n       *     1: 'two',\n       *     2: 'three',\n       *     3: 'four',\n       *     length: 4\n       * };\n       * var result = toArray(arrayLike);\n       *\n       * alert(result instanceof Array); // true\n       * alert(result); // one,two,three,four\n       */\n\n\n      function toArray(arrayLike) {\n        var arr;\n\n        try {\n          arr = Array.prototype.slice.call(arrayLike);\n        } catch (e) {\n          arr = [];\n          forEachArray(arrayLike, function (value) {\n            arr.push(value);\n          });\n        }\n\n        return arr;\n      }\n\n      module.exports = toArray;\n      /***/\n    },\n    /* 42 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Convert kebab-case\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Convert kebab-case\n       * @param {string} key - string to be converted to Kebab-case\n       * @private\n       */\n\n      function convertToKebabCase(key) {\n        return key.replace(/([A-Z])/g, function (match) {\n          return '-' + match.toLowerCase();\n        });\n      }\n\n      module.exports = convertToKebabCase;\n      /***/\n    },\n    /* 43 */\n\n    /***/\n    function (module, exports) {\n      module.exports = __WEBPACK_EXTERNAL_MODULE__43__;\n      /***/\n    },\n    /* 44 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Calendar Header\n       * @author NHN. FE dev Lab <dl_javascript@nhn.com>\n       */\n\n      var defineClass = __webpack_require__(0);\n\n      var CustomEvents = __webpack_require__(8);\n\n      var closest = __webpack_require__(25);\n\n      var removeElement = __webpack_require__(14);\n\n      var localeTexts = __webpack_require__(10);\n\n      var headerTmpl = __webpack_require__(45);\n\n      var DateTimeFormatter = __webpack_require__(30);\n\n      var constants = __webpack_require__(1);\n\n      var util = __webpack_require__(4);\n\n      var mouseTouchEvent = __webpack_require__(19);\n\n      var TYPE_DATE = constants.TYPE_DATE;\n      var TYPE_MONTH = constants.TYPE_MONTH;\n      var TYPE_YEAR = constants.TYPE_YEAR;\n      var CLASS_NAME_TITLE_MONTH = 'tui-calendar-title-month';\n      var CLASS_NAME_TITLE_YEAR = 'tui-calendar-title-year';\n      var CLASS_NAME_TITLE_YEAR_TO_YEAR = 'tui-calendar-title-year-to-year';\n      var SELECTOR_INNER_ELEM = '.tui-calendar-header-inner';\n      var SELECTOR_INFO_ELEM = '.tui-calendar-header-info';\n      var SELECTOR_BTN = '.tui-calendar-btn';\n      var YEAR_TITLE_FORMAT = 'yyyy';\n      /**\n       * @ignore\n       * @class\n       * @param {string|HTMLElement} container - Header container or selector\n       * @param {object} option - Header option\n       * @param {string} option.language - Header language\n       * @param {boolean} option.showToday - Has today box or not.\n       * @param {boolean} option.showJumpButtons - Has jump buttons or not.\n       */\n\n      var Header = defineClass(\n      /** @lends Header.prototype */\n      {\n        init: function init(container, option) {\n          /**\n           * Container element\n           * @type {HTMLElement}\n           * @private\n           */\n          this._container = util.getElement(container);\n          /**\n           * Header inner element\n           * @type {HTMLElement}\n           * @private\n           */\n\n          this._innerElement = null;\n          /**\n           * Header info element\n           * @type {HTMLElement}\n           * @private\n           */\n\n          this._infoElement = null;\n          /**\n           * Render today box or not\n           * @type {boolean}\n           * @private\n           */\n\n          this._showToday = option.showToday;\n          /**\n           * Render jump buttons or not (next,prev year on date calendar)\n           * @type {boolean}\n           * @private\n           */\n\n          this._showJumpButtons = option.showJumpButtons;\n          /**\n           * Year_Month title formatter\n           * @type {DateTimeFormatter}\n           * @private\n           */\n\n          this._yearMonthTitleFormatter = null;\n          /**\n           * Year title formatter\n           * @type {DateTimeFormatter}\n           * @private\n           */\n\n          this._yearTitleFormatter = null;\n          /**\n           * Today formatter\n           * @type {DateTimeFormatter}\n           * @private\n           */\n\n          this._todayFormatter = null;\n\n          this._setFormatters(localeTexts[option.language]);\n\n          this._setEvents(option);\n        },\n\n        /**\n         * @param {object} localeText - Locale text\n         * @private\n         */\n        _setFormatters: function _setFormatters(localeText) {\n          this._yearMonthTitleFormatter = new DateTimeFormatter(localeText.titleFormat, localeText.titles);\n          this._yearTitleFormatter = new DateTimeFormatter(YEAR_TITLE_FORMAT, localeText.titles);\n          this._todayFormatter = new DateTimeFormatter(localeText.todayFormat, localeText.titles);\n        },\n\n        /**\n         * @param {object} option - Constructor option\n         * @private\n         */\n        _setEvents: function _setEvents() {\n          mouseTouchEvent.on(this._container, 'click', this._onClickHandler, this);\n        },\n\n        /**\n         * @private\n         */\n        _removeEvents: function _removeEvents() {\n          this.off();\n          mouseTouchEvent.off(this._container, 'click', this._onClickHandler);\n        },\n\n        /**\n         * Fire customEvents\n         * @param {Event} ev An event object\n         * @private\n         */\n        _onClickHandler: function _onClickHandler(ev) {\n          var target = util.getTarget(ev);\n\n          if (closest(target, SELECTOR_BTN)) {\n            this.fire('click', ev);\n          }\n        },\n\n        /**\n         * @param {string} type - Calendar type\n         * @returns {string}\n         * @private\n         */\n        _getTitleClass: function _getTitleClass(type) {\n          switch (type) {\n            case TYPE_DATE:\n              return CLASS_NAME_TITLE_MONTH;\n\n            case TYPE_MONTH:\n              return CLASS_NAME_TITLE_YEAR;\n\n            case TYPE_YEAR:\n              return CLASS_NAME_TITLE_YEAR_TO_YEAR;\n\n            default:\n              return '';\n          }\n        },\n\n        /**\n         * @param {Date} date - date\n         * @param {string} type - Calendar type\n         * @returns {string}\n         * @private\n         */\n        _getTitleText: function _getTitleText(date, type) {\n          var currentYear, start, end;\n\n          switch (type) {\n            case TYPE_DATE:\n              return this._yearMonthTitleFormatter.format(date);\n\n            case TYPE_MONTH:\n              return this._yearTitleFormatter.format(date);\n\n            case TYPE_YEAR:\n              currentYear = date.getFullYear();\n              start = new Date(currentYear - 4, 0, 1);\n              end = new Date(currentYear + 4, 0, 1);\n              return this._yearTitleFormatter.format(start) + ' - ' + this._yearTitleFormatter.format(end);\n\n            default:\n              return '';\n          }\n        },\n\n        /**\n         * Change langauge\n         * @param {string} language - Language\n         */\n        changeLanguage: function changeLanguage(language) {\n          this._setFormatters(localeTexts[language]);\n        },\n\n        /**\n         * Render header\n         * @param {Date} date - date\n         * @param {string} type - Calendar type\n         */\n        render: function render(date, type) {\n          var context = {\n            showToday: this._showToday,\n            showJumpButtons: this._showJumpButtons,\n            todayText: this._todayFormatter.format(new Date()),\n            isDateCalendar: type === TYPE_DATE,\n            titleClass: this._getTitleClass(type),\n            title: this._getTitleText(date, type)\n          };\n          this._container.innerHTML = headerTmpl(context).replace(/^\\s+|\\s+$/g, '');\n          this._innerElement = this._container.querySelector(SELECTOR_INNER_ELEM);\n\n          if (context.showToday) {\n            this._infoElement = this._container.querySelector(SELECTOR_INFO_ELEM);\n          }\n        },\n\n        /**\n         * Destroy header\n         */\n        destroy: function destroy() {\n          this._removeEvents();\n\n          removeElement(this._innerElement);\n          removeElement(this._infoElement);\n          this._container = this._showToday = this._showJumpButtons = this._yearMonthTitleFormatter = this._yearTitleFormatter = this._todayFormatter = this._innerElement = this._infoElement = null;\n        }\n      });\n      CustomEvents.mixin(Header);\n      module.exports = Header;\n      /***/\n    },\n    /* 45 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var template = __webpack_require__(11);\n\n      module.exports = function (context) {\n        var source = '{{if isDateCalendar}}' + '  {{if showJumpButtons}}' + '    <div class=\"tui-calendar-header-inner tui-calendar-has-btns\">' + '      <button class=\"tui-calendar-btn tui-calendar-btn-prev-year\">Prev year</button>' + '      <button class=\"tui-calendar-btn tui-calendar-btn-prev-month\">Prev month</button>' + '      <em class=\"tui-calendar-title {{titleClass}}\">{{title}}</em>' + '      <button class=\"tui-calendar-btn tui-calendar-btn-next-month\">Next month</button>' + '      <button class=\"tui-calendar-btn tui-calendar-btn-next-year\">Next year</button>' + '    </div>' + '  {{else}}' + '    <div class=\"tui-calendar-header-inner\">' + '      <button class=\"tui-calendar-btn tui-calendar-btn-prev-month\">Prev month</button>' + '      <em class=\"tui-calendar-title {{titleClass}}\">{{title}}</em>' + '      <button class=\"tui-calendar-btn tui-calendar-btn-next-month\">Next month</button>' + '    </div>' + '  {{/if}}' + '{{else}}' + '  <div class=\"tui-calendar-header-inner\">' + '    <button class=\"tui-calendar-btn tui-calendar-btn-prev-year\">Prev year</button>' + '    <em class=\"tui-calendar-title {{titleClass}}\">{{title}}</em>' + '    <button class=\"tui-calendar-btn tui-calendar-btn-next-year\">Next year</button>' + '  </div>' + '{{/if}}' + '{{if showToday}}' + '  <div class=\"tui-calendar-header-info\">' + '    <p class=\"tui-calendar-title-today\">{{todayText}}</p>' + '  </div>' + '{{/if}}';\n        return template(source, context);\n      };\n      /***/\n\n    },\n    /* 46 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Check whether the given variable is a instance of HTMLNode or not.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Check whether the given variable is a instance of HTMLNode or not.\n       * If the given variables is a instance of HTMLNode, return true.\n       * @param {*} html - Target for checking\n       * @returns {boolean} Is HTMLNode ?\n       * @memberof module:type\n       */\n\n      function isHTMLNode(html) {\n        if (typeof HTMLElement === 'object') {\n          return html && (html instanceof HTMLElement || !!html.nodeType);\n        }\n\n        return !!(html && html.nodeType);\n      }\n\n      module.exports = isHTMLNode;\n      /***/\n    },\n    /* 47 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Send hostname on DOMContentLoaded.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var isUndefined = __webpack_require__(12);\n\n      var imagePing = __webpack_require__(48);\n\n      var ms7days = 7 * 24 * 60 * 60 * 1000;\n      /**\n       * Check if the date has passed 7 days\n       * @param {number} date - milliseconds\n       * @returns {boolean}\n       * @private\n       */\n\n      function isExpired(date) {\n        var now = new Date().getTime();\n        return now - date > ms7days;\n      }\n      /**\n       * Send hostname on DOMContentLoaded.\n       * To prevent hostname set tui.usageStatistics to false.\n       * @param {string} appName - application name\n       * @param {string} trackingId - GA tracking ID\n       * @ignore\n       */\n\n\n      function sendHostname(appName, trackingId) {\n        var url = 'https://www.google-analytics.com/collect';\n        var hostname = location.hostname;\n        var hitType = 'event';\n        var eventCategory = 'use';\n        var applicationKeyForStorage = 'TOAST UI ' + appName + ' for ' + hostname + ': Statistics';\n        var date = window.localStorage.getItem(applicationKeyForStorage); // skip if the flag is defined and is set to false explicitly\n\n        if (!isUndefined(window.tui) && window.tui.usageStatistics === false) {\n          return;\n        } // skip if not pass seven days old\n\n\n        if (date && !isExpired(date)) {\n          return;\n        }\n\n        window.localStorage.setItem(applicationKeyForStorage, new Date().getTime());\n        setTimeout(function () {\n          if (document.readyState === 'interactive' || document.readyState === 'complete') {\n            imagePing(url, {\n              v: 1,\n              t: hitType,\n              tid: trackingId,\n              cid: hostname,\n              dp: hostname,\n              dh: appName,\n              el: appName,\n              ec: eventCategory\n            });\n          }\n        }, 1000);\n      }\n\n      module.exports = sendHostname;\n      /***/\n    },\n    /* 48 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Request image ping.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var forEachOwnProperties = __webpack_require__(23);\n      /**\n       * @module request\n       */\n\n      /**\n       * Request image ping.\n       * @param {String} url url for ping request\n       * @param {Object} trackingInfo infos for make query string\n       * @returns {HTMLElement}\n       * @memberof module:request\n       * @example\n       * var imagePing = require('tui-code-snippet/request/imagePing'); // node, commonjs\n       *\n       * imagePing('https://www.google-analytics.com/collect', {\n       *     v: 1,\n       *     t: 'event',\n       *     tid: 'trackingid',\n       *     cid: 'cid',\n       *     dp: 'dp',\n       *     dh: 'dh'\n       * });\n       */\n\n\n      function imagePing(url, trackingInfo) {\n        var trackingElement = document.createElement('img');\n        var queryString = '';\n        forEachOwnProperties(trackingInfo, function (value, key) {\n          queryString += '&' + key + '=' + value;\n        });\n        queryString = queryString.substring(1);\n        trackingElement.src = url + '?' + queryString;\n        trackingElement.style.display = 'none';\n        document.body.appendChild(trackingElement);\n        document.body.removeChild(trackingElement);\n        return trackingElement;\n      }\n\n      module.exports = imagePing;\n      /***/\n    },\n    /* 49 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Calendar body\n       * @author NHN. FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var forEachArray = __webpack_require__(2);\n\n      var defineClass = __webpack_require__(0);\n\n      var DateLayer = __webpack_require__(50);\n\n      var MonthLayer = __webpack_require__(52);\n\n      var YearLayer = __webpack_require__(54);\n\n      var constants = __webpack_require__(1);\n\n      var TYPE_DATE = constants.TYPE_DATE;\n      var TYPE_MONTH = constants.TYPE_MONTH;\n      var TYPE_YEAR = constants.TYPE_YEAR;\n      /**\n       * @ignore\n       * @class\n       */\n\n      var Body = defineClass(\n      /** @lends Body.prototype */\n      {\n        init: function init(bodyContainer, option) {\n          var language = option.language;\n          /**\n           * Body container element\n           * @type {HTMLElement}\n           * @private\n           */\n\n          this._container = bodyContainer;\n          /**\n           * DateLayer\n           * @type {DateLayer}\n           * @private\n           */\n\n          this._dateLayer = new DateLayer(language);\n          /**\n           * MonthLayer\n           * @type {MonthLayer}\n           * @private\n           */\n\n          this._monthLayer = new MonthLayer(language);\n          /**\n           * YearLayer\n           * @type {YearLayer}\n           * @private\n           */\n\n          this._yearLayer = new YearLayer(language);\n          /**\n           * Current Layer\n           * @type {DateLayer|MonthLayer|YearLayer}\n           * @private\n           */\n\n          this._currentLayer = this._dateLayer;\n        },\n\n        /**\n         * Returns matched layer\n         * @param {string} type - Layer type\n         * @returns {Base} - Layer\n         * @private\n         */\n        _getLayer: function _getLayer(type) {\n          switch (type) {\n            case TYPE_DATE:\n              return this._dateLayer;\n\n            case TYPE_MONTH:\n              return this._monthLayer;\n\n            case TYPE_YEAR:\n              return this._yearLayer;\n\n            default:\n              return this._currentLayer;\n          }\n        },\n\n        /**\n         * Iterate each layer\n         * @param {Function} fn - function\n         * @private\n         */\n        _eachLayer: function _eachLayer(fn) {\n          forEachArray([this._dateLayer, this._monthLayer, this._yearLayer], fn);\n        },\n\n        /**\n         * Change language\n         * @param {string} language - Language\n         */\n        changeLanguage: function changeLanguage(language) {\n          this._eachLayer(function (layer) {\n            layer.changeLanguage(language);\n          });\n        },\n\n        /**\n         * Render body\n         * @param {Date} date - date\n         * @param {string} type - Layer type\n         */\n        render: function render(date, type) {\n          var nextLayer = this._getLayer(type);\n\n          var prevLayer = this._currentLayer;\n          prevLayer.remove();\n          nextLayer.render(date, this._container);\n          this._currentLayer = nextLayer;\n        },\n\n        /**\n         * Returns date elements\n         * @returns {HTMLElement[]}\n         */\n        getDateElements: function getDateElements() {\n          return this._currentLayer.getDateElements();\n        },\n\n        /**\n         * Destory\n         */\n        destroy: function destroy() {\n          this._eachLayer(function (layer) {\n            layer.remove();\n          });\n\n          this._container = this._currentLayer = this._dateLayer = this._monthLayer = this._yearLayer = null;\n        }\n      });\n      module.exports = Body;\n      /***/\n    },\n    /* 50 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Date layer\n       * @author NHN. FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var defineClass = __webpack_require__(0);\n\n      var dateUtil = __webpack_require__(5);\n\n      var bodyTmpl = __webpack_require__(51);\n\n      var LayerBase = __webpack_require__(20);\n\n      var TYPE_DATE = __webpack_require__(1).TYPE_DATE;\n\n      var DATE_SELECTOR = '.tui-calendar-date';\n      /**\n       * @ignore\n       * @class\n       * @extends LayerBase\n       * @param {string} language - Initial language\n       */\n\n      var DateLayer = defineClass(LayerBase,\n      /** @lends DateLayer.prototype */\n      {\n        init: function init(language) {\n          LayerBase.call(this, language);\n        },\n\n        /**\n         * Layer type\n         * @type {string}\n         * @private\n         */\n        _type: TYPE_DATE,\n\n        /**\n         * @override\n         * @private\n         * @returns {object} Template context\n         */\n        _makeContext: function _makeContext(date) {\n          var daysShort = this._localeText.titles.D;\n          var year, month;\n          date = date || new Date();\n          year = date.getFullYear();\n          month = date.getMonth() + 1;\n          return {\n            Sun: daysShort[0],\n            Mon: daysShort[1],\n            Tue: daysShort[2],\n            Wed: daysShort[3],\n            Thu: daysShort[4],\n            Fri: daysShort[5],\n            Sat: daysShort[6],\n            year: year,\n            month: month,\n            weeks: this._getWeeks(year, month)\n          };\n        },\n\n        /**\n         * weeks (templating) for date-calendar\n         * @param {number} year - Year\n         * @param {number} month - Month\n         * @returns {Array.<Array.<Date>>}\n         * @private\n         */\n        _getWeeks: function _getWeeks(year, month) {\n          var weekNumber = 0;\n          var weeksCount = 6; // Fix for no changing height\n\n          var weeks = [];\n          var dates, i;\n\n          for (; weekNumber < weeksCount; weekNumber += 1) {\n            dates = [];\n\n            for (i = 0; i < 7; i += 1) {\n              dates.push(dateUtil.getDateOfWeek(year, month, weekNumber, i));\n            }\n\n            weeks.push(this._getWeek(year, month, dates));\n          }\n\n          return weeks;\n        },\n\n        /**\n         * week (templating) for date-calendar\n         * @param {number} currentYear\n         * @param {number} currentMonth\n         * @param {Array.<Date>} dates\n         * @private\n         */\n        _getWeek: function _getWeek(currentYear, currentMonth, dates) {\n          var firstDateOfCurrentMonth = new Date(currentYear, currentMonth - 1, 1);\n          var lastDateOfCurrentMonth = new Date(currentYear, currentMonth, 0);\n          var contexts = [];\n          var i = 0;\n          var length = dates.length;\n          var date, className;\n\n          for (; i < length; i += 1) {\n            className = 'tui-calendar-date';\n            date = dates[i];\n\n            if (date < firstDateOfCurrentMonth) {\n              className += ' tui-calendar-prev-month';\n            }\n\n            if (date > lastDateOfCurrentMonth) {\n              className += ' tui-calendar-next-month';\n            }\n\n            if (date.getDay() === 0) {\n              className += ' tui-calendar-sun';\n            } else if (date.getDay() === 6) {\n              className += ' tui-calendar-sat';\n            }\n\n            contexts.push({\n              dayInMonth: date.getDate(),\n              className: className,\n              timestamp: date.getTime()\n            });\n          }\n\n          return contexts;\n        },\n\n        /**\n         * Render date-layer\n         * @override\n         * @param {Date} date Date to render\n         * @param {HTMLElement} container A container element for the rendered element\n         */\n        render: function render(date, container) {\n          var context = this._makeContext(date);\n\n          container.innerHTML = bodyTmpl(context);\n          this._element = container.firstChild;\n        },\n\n        /**\n         * Return date elements\n         * @override\n         * @returns {HTMLElement[]}\n         */\n        getDateElements: function getDateElements() {\n          return this._element.querySelectorAll(DATE_SELECTOR);\n        }\n      });\n      module.exports = DateLayer;\n      /***/\n    },\n    /* 51 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var template = __webpack_require__(11);\n\n      module.exports = function (context) {\n        var source = '<table class=\"tui-calendar-body-inner\" cellspacing=\"0\" cellpadding=\"0\">' + '  <caption><span>Dates</span></caption>' + '  <thead class=\"tui-calendar-body-header\">' + '    <tr>' + '      <th class=\"tui-sun\" scope=\"col\">{{Sun}}</th>' + '      <th scope=\"col\">{{Mon}}</th>' + '      <th scope=\"col\">{{Tue}}</th>' + '      <th scope=\"col\">{{Wed}}</th>' + '      <th scope=\"col\">{{Thu}}</th>' + '      <th scope=\"col\">{{Fri}}</th>' + '      <th class=\"tui-sat\" scope=\"col\">{{Sat}}</th>' + '    </tr>' + '  </thead>' + '  <tbody>' + '    {{each weeks}}' + '    <tr class=\"tui-calendar-week\">' + '      {{each @this}}' + '      <td class=\"{{@this[\"className\"]}}\" data-timestamp=\"{{@this[\"timestamp\"]}}\">{{@this[\"dayInMonth\"]}}</td>' + '      {{/each}}' + '    </tr>' + '    {{/each}}' + '  </tbody>' + '</table>';\n        return template(source, context);\n      };\n      /***/\n\n    },\n    /* 52 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Month layer\n       * @author NHN. FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var defineClass = __webpack_require__(0);\n\n      var bodyTmpl = __webpack_require__(53);\n\n      var LayerBase = __webpack_require__(20);\n\n      var TYPE_MONTH = __webpack_require__(1).TYPE_MONTH;\n\n      var dateUtil = __webpack_require__(5);\n\n      var DATE_SELECTOR = '.tui-calendar-month';\n      /**\n       * @class\n       * @extends LayerBase\n       * @param {string} language - Initial language\n       * @ignore\n       */\n\n      var MonthLayer = defineClass(LayerBase,\n      /** @lends MonthLayer.prototype */\n      {\n        init: function init(language) {\n          LayerBase.call(this, language);\n        },\n\n        /**\n         * Layer type\n         * @type {string}\n         * @private\n         */\n        _type: TYPE_MONTH,\n\n        /**\n         * @override\n         * @returns {object} Template context\n         * @private\n         */\n        _makeContext: function _makeContext(date) {\n          var monthsShort = this._localeText.titles.MMM;\n          return {\n            year: date.getFullYear(),\n            Jan: monthsShort[0],\n            Feb: monthsShort[1],\n            Mar: monthsShort[2],\n            Apr: monthsShort[3],\n            May: monthsShort[4],\n            Jun: monthsShort[5],\n            Jul: monthsShort[6],\n            Aug: monthsShort[7],\n            Sep: monthsShort[8],\n            Oct: monthsShort[9],\n            Nov: monthsShort[10],\n            Dec: monthsShort[11],\n            getFirstDayTimestamp: dateUtil.getFirstDayTimestamp\n          };\n        },\n\n        /**\n         * Render month-layer element\n         * @override\n         * @param {Date} date Date to render\n         * @param {HTMLElement} container A container element for the rendered element\n         */\n        render: function render(date, container) {\n          var context = this._makeContext(date);\n\n          container.innerHTML = bodyTmpl(context);\n          this._element = container.firstChild;\n        },\n\n        /**\n         * Returns month elements\n         * @override\n         * @returns {HTMLElement[]}\n         */\n        getDateElements: function getDateElements() {\n          return this._element.querySelectorAll(DATE_SELECTOR);\n        }\n      });\n      module.exports = MonthLayer;\n      /***/\n    },\n    /* 53 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var template = __webpack_require__(11);\n\n      module.exports = function (context) {\n        var source = '<table class=\"tui-calendar-body-inner\">' + '  <caption><span>Months</span></caption>' + '  <tbody>' + '    <tr class=\"tui-calendar-month-group\">' + '      <td class=\"tui-calendar-month\" data-timestamp={{getFirstDayTimestamp year 0}}>{{Jan}}</td>' + '      <td class=\"tui-calendar-month\" data-timestamp={{getFirstDayTimestamp year 1}}>{{Feb}}</td>' + '      <td class=\"tui-calendar-month\" data-timestamp={{getFirstDayTimestamp year 2}}>{{Mar}}</td>' + '      <td class=\"tui-calendar-month\" data-timestamp={{getFirstDayTimestamp year 3}}>{{Apr}}</td>' + '    </tr>' + '    <tr class=\"tui-calendar-month-group\">' + '      <td class=\"tui-calendar-month\" data-timestamp={{getFirstDayTimestamp year 4}}>{{May}}</td>' + '      <td class=\"tui-calendar-month\" data-timestamp={{getFirstDayTimestamp year 5}}>{{Jun}}</td>' + '      <td class=\"tui-calendar-month\" data-timestamp={{getFirstDayTimestamp year 6}}>{{Jul}}</td>' + '      <td class=\"tui-calendar-month\" data-timestamp={{getFirstDayTimestamp year 7}}>{{Aug}}</td>' + '    </tr>' + '    <tr class=\"tui-calendar-month-group\">' + '      <td class=\"tui-calendar-month\" data-timestamp={{getFirstDayTimestamp year 8}}>{{Sep}}</td>' + '      <td class=\"tui-calendar-month\" data-timestamp={{getFirstDayTimestamp year 9}}>{{Oct}}</td>' + '      <td class=\"tui-calendar-month\" data-timestamp={{getFirstDayTimestamp year 10}}>{{Nov}}</td>' + '      <td class=\"tui-calendar-month\" data-timestamp={{getFirstDayTimestamp year 11}}>{{Dec}}</td>' + '    </tr>' + '  </tbody>' + '</table>';\n        return template(source, context);\n      };\n      /***/\n\n    },\n    /* 54 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Year layer\n       * @author NHN. FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var defineClass = __webpack_require__(0);\n\n      var bodyTmpl = __webpack_require__(55);\n\n      var LayerBase = __webpack_require__(20);\n\n      var TYPE_YEAR = __webpack_require__(1).TYPE_YEAR;\n\n      var dateUtil = __webpack_require__(5);\n\n      var DATE_SELECTOR = '.tui-calendar-year';\n      /**\n       * @class\n       * @extends LayerBase\n       * @param {string} language - Initial language\n       * @ignore\n       */\n\n      var YearLayer = defineClass(LayerBase,\n      /** @lends YearLayer.prototype */\n      {\n        init: function init(language) {\n          LayerBase.call(this, language);\n        },\n\n        /**\n         * Layer type\n         * @type {string}\n         * @private\n         */\n        _type: TYPE_YEAR,\n\n        /**\n         * @override\n         * @returns {object} Template context\n         * @private\n         */\n        _makeContext: function _makeContext(date) {\n          var year = date.getFullYear();\n          return {\n            yearGroups: [dateUtil.getRangeArr(year - 4, year - 2), dateUtil.getRangeArr(year - 1, year + 1), dateUtil.getRangeArr(year + 2, year + 4)],\n            getFirstDayTimestamp: dateUtil.getFirstDayTimestamp\n          };\n        },\n\n        /**\n         * Render year-layer element\n         * @override\n         * @param {Date} date Date to render\n         * @param {HTMLElement} container A container element for the rendered element\n         */\n        render: function render(date, container) {\n          var context = this._makeContext(date);\n\n          container.innerHTML = bodyTmpl(context);\n          this._element = container.firstChild;\n        },\n\n        /**\n         * Returns year elements\n         * @override\n         * @returns {HTMLElement[]}\n         */\n        getDateElements: function getDateElements() {\n          return this._element.querySelectorAll(DATE_SELECTOR);\n        }\n      });\n      module.exports = YearLayer;\n      /***/\n    },\n    /* 55 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var template = __webpack_require__(11);\n\n      module.exports = function (context) {\n        var source = '<table class=\"tui-calendar-body-inner\">' + '  <caption><span>Years</span></caption>' + '  <tbody>' + '    {{each yearGroups}}' + '    <tr class=\"tui-calendar-year-group\">' + '      {{each @this}}' + '      <td class=\"tui-calendar-year\" data-timestamp={{getFirstDayTimestamp @this 0}}>' + '        {{@this}}' + '      </td>' + '      {{/each}}' + '    </tr>' + '    {{/each}}' + '  </tbody>' + '</table>';\n        return template(source, context);\n      };\n      /***/\n\n    },\n    /* 56 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview RangeModel\n       * @author NHN. FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var forEachArray = __webpack_require__(2);\n\n      var defineClass = __webpack_require__(0);\n\n      var isNumber = __webpack_require__(15);\n\n      var Range = __webpack_require__(57);\n\n      var util = __webpack_require__(4);\n      /**\n       * @class\n       * @ignore\n       * @param {Array.<Array.<number>>} ranges - Ranges\n       */\n\n\n      var RangeModel = defineClass(\n      /** @lends RangeModel.prototype */\n      {\n        init: function init(ranges) {\n          ranges = ranges || [];\n          /**\n           * @type {Array.<Range>}\n           * @private\n           */\n\n          this._ranges = [];\n          forEachArray(ranges, function (range) {\n            this.add(range[0], range[1]);\n          }, this);\n        },\n\n        /**\n         * Whether the ranges contain a time or time-range\n         * @param {number} start - Start\n         * @param {number} [end] - End\n         * @returns {boolean}\n         */\n        contains: function contains(start, end) {\n          var i = 0;\n          var length = this._ranges.length;\n          var range;\n\n          for (; i < length; i += 1) {\n            range = this._ranges[i];\n\n            if (range.contains(start, end)) {\n              return true;\n            }\n          }\n\n          return false;\n        },\n\n        /**\n         * Whether overlaps with a point or range\n         * @param {number} start - Start\n         * @param {number} [end] - End\n         * @returns {boolean}\n         */\n        hasOverlap: function hasOverlap(start, end) {\n          var i = 0;\n          var length = this._ranges.length;\n          var range;\n\n          for (; i < length; i += 1) {\n            range = this._ranges[i];\n\n            if (range.isOverlapped(start, end)) {\n              return true;\n            }\n          }\n\n          return false;\n        },\n\n        /**\n         * Add range\n         * @param {number} start - Start\n         * @param {number} [end] - End\n         */\n        add: function add(start, end) {\n          var overlapped = false;\n          var i = 0;\n          var len = this._ranges.length;\n          var range;\n\n          for (; i < len; i += 1) {\n            range = this._ranges[i];\n            overlapped = range.isOverlapped(start, end);\n\n            if (overlapped) {\n              range.merge(start, end);\n              break;\n            }\n\n            if (start < range.start) {\n              break;\n            }\n          }\n\n          if (!overlapped) {\n            this._ranges.splice(i, 0, new Range(start, end));\n          }\n        },\n\n        /**\n         * Returns minimum value in ranges\n         * @returns {number}\n         */\n        getMinimumValue: function getMinimumValue() {\n          return this._ranges[0].start;\n        },\n\n        /**\n         * Returns maximum value in ranges\n         * @returns {number}\n         */\n        getMaximumValue: function getMaximumValue() {\n          var length = this._ranges.length;\n          return this._ranges[length - 1].end;\n        },\n\n        /**\n         * @param {number} start - Start\n         * @param {number} [end] - End\n         */\n        exclude: function exclude(start, end) {\n          if (!isNumber(end)) {\n            end = start;\n          }\n\n          forEachArray(this._ranges, function (range) {\n            var rangeEnd;\n\n            if (range.isOverlapped(start, end)) {\n              rangeEnd = range.end; // Save before excluding\n\n              range.exclude(start, end);\n\n              if (end + 1 <= rangeEnd) {\n                this.add(end + 1, rangeEnd); // Add split range\n              }\n            }\n          }, this); // Reduce empty ranges\n\n          this._ranges = util.filter(this._ranges, function (range) {\n            return !range.isEmpty();\n          });\n        },\n\n        /**\n         * Returns the first overlapped range from the point or range\n         * @param {number} start - Start\n         * @param {number} end - End\n         * @returns {Array.<number>} - [start, end]\n         */\n        findOverlappedRange: function findOverlappedRange(start, end) {\n          var i = 0;\n          var len = this._ranges.length;\n          var range;\n\n          for (; i < len; i += 1) {\n            range = this._ranges[i];\n\n            if (range.isOverlapped(start, end)) {\n              return [range.start, range.end];\n            }\n          }\n\n          return null;\n        }\n      });\n      module.exports = RangeModel;\n      /***/\n    },\n    /* 57 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Range (in RangeModel)\n       * @author NHN. FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var defineClass = __webpack_require__(0);\n\n      var isNumber = __webpack_require__(15);\n      /**\n       * @class\n       * @ignore\n       * @param {number} start - Start of range\n       * @param {number} [end] - End of range\n       */\n\n\n      var Range = defineClass(\n      /** @lends Range.prototype */\n      {\n        init: function init(start, end) {\n          this.setRange(start, end);\n        },\n\n        /**\n         * Set range\n         * @param {number} start - Start number\n         * @param {number} [end] - End number\n         */\n        setRange: function setRange(start, end) {\n          if (!isNumber(end)) {\n            end = start;\n          }\n\n          this.start = Math.min(start, end);\n          this.end = Math.max(start, end);\n        },\n\n        /**\n         * Merge range\n         * @param {number} start - Start\n         * @param {number} [end] - End\n         */\n        merge: function merge(start, end) {\n          if (!isNumber(start) || !isNumber(end) || !this.isOverlapped(start, end)) {\n            return;\n          }\n\n          this.start = Math.min(start, this.start);\n          this.end = Math.max(end, this.end);\n        },\n\n        /**\n         * Whether being empty.\n         * @returns {boolean}\n         */\n        isEmpty: function isEmpty() {\n          return !isNumber(this.start) || !isNumber(this.end);\n        },\n\n        /**\n         * Set empty\n         */\n        setEmpty: function setEmpty() {\n          this.start = this.end = null;\n        },\n\n        /**\n         * Whether containing a range.\n         * @param {number} start - Start\n         * @param {number} [end] - End\n         * @returns {boolean}\n         */\n        contains: function contains(start, end) {\n          if (!isNumber(end)) {\n            end = start;\n          }\n\n          return this.start <= start && end <= this.end;\n        },\n\n        /**\n         * Whether overlaps with a range\n         * @param {number} start - Start\n         * @param {number} [end] - End\n         * @returns {boolean}\n         */\n        isOverlapped: function isOverlapped(start, end) {\n          if (!isNumber(end)) {\n            end = start;\n          }\n\n          return this.start <= end && this.end >= start;\n        },\n\n        /**\n         * Exclude a range\n         * @param {number} start - Start\n         * @param {number} end - End\n         */\n        exclude: function exclude(start, end) {\n          if (start <= this.start && end >= this.end) {\n            // Excluding range contains this\n            this.setEmpty();\n          } else if (this.contains(start)) {\n            this.setRange(this.start, start - 1);\n          } else if (this.contains(end)) {\n            this.setRange(end + 1, this.end);\n          }\n        }\n      });\n      module.exports = Range;\n      /***/\n    },\n    /* 58 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var template = __webpack_require__(11);\n\n      module.exports = function (context) {\n        var source = '<div class=\"tui-datepicker\">' + '  {{if timePicker}}' + '    {{if isTab}}' + '      <div class=\"tui-datepicker-selector\">' + '        <button type=\"button\" class=\"tui-datepicker-selector-button tui-is-checked\" aria-label=\"selected\">' + '          <span class=\"tui-ico-date\"></span>{{localeText[\"date\"]}}' + '        </button>' + '        <button type=\"button\" class=\"tui-datepicker-selector-button\">' + '          <span class=\"tui-ico-time\"></span>{{localeText[\"time\"]}}' + '        </button>' + '      </div>' + '      <div class=\"tui-datepicker-body\">' + '        <div class=\"tui-calendar-container\"></div>' + '        <div class=\"tui-timepicker-container\"></div>' + '      </div>' + '    {{else}}' + '      <div class=\"tui-datepicker-body\">' + '        <div class=\"tui-calendar-container\"></div>' + '      </div>' + '      <div class=\"tui-datepicker-footer\">' + '        <div class=\"tui-timepicker-container\"></div>' + '      </div>' + '    {{/if}}' + '  {{else}}' + '    <div class=\"tui-datepicker-body\">' + '      <div class=\"tui-calendar-container\"></div>' + '    </div>' + '  {{/if}}' + '</div>';\n        return template(source, context);\n      };\n      /***/\n\n    },\n    /* 59 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview DatePicker input(element) component\n       * @author NHN. FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var defineClass = __webpack_require__(0);\n\n      var CustomEvents = __webpack_require__(8);\n\n      var on = __webpack_require__(31);\n\n      var off = __webpack_require__(33);\n\n      var DateTimeFormatter = __webpack_require__(30);\n\n      var mouseTouchEvent = __webpack_require__(19);\n\n      var util = __webpack_require__(4);\n\n      var DEFAULT_FORMAT = 'yyyy-MM-dd';\n      /**\n       * DatePicker Input\n       * @ignore\n       * @class\n       * @param {string|HTMLElement} inputElement - Input element or selector\n       * @param {object} option - Option\n       * @param {string} option.id - Id\n       * @param {string} option.format - Text format\n       */\n\n      var DatePickerInput = defineClass(\n      /** @lends DatePickerInput.prototype */\n      {\n        init: function init(inputElement, option) {\n          option.format = option.format || DEFAULT_FORMAT;\n          /**\n           * Input element\n           * @type {HTMLElement}\n           * @private\n           */\n\n          this._input = util.getElement(inputElement);\n          /**\n           * Id\n           * @type {string}\n           * @private\n           */\n\n          this._id = option.id;\n          /**\n           * LocaleText titles\n           * @type {Object}\n           * @private\n           */\n\n          this._titles = option.localeText.titles;\n          /**\n           * Text<->DateTime Formatter\n           * @type {DateTimeFormatter}\n           * @private\n           */\n\n          this._formatter = new DateTimeFormatter(option.format, this._titles);\n\n          this._setEvents();\n        },\n\n        /**\n         * Change locale titles\n         * @param {object} titles - locale text in format\n         */\n        changeLocaleTitles: function changeLocaleTitles(titles) {\n          this._titles = titles;\n        },\n\n        /**\n         * Set input 'click', 'change' event\n         * @private\n         */\n        _setEvents: function _setEvents() {\n          if (this._input) {\n            on(this._input, 'change', this._onChangeHandler, this);\n            mouseTouchEvent.on(this._input, 'click', this._onClickHandler, this);\n          }\n        },\n\n        /**\n         * Remove events\n         * @private\n         */\n        _removeEvents: function _removeEvents() {\n          this.off();\n\n          if (this._input) {\n            off(this._input, 'change', this._onChangeHandler);\n            mouseTouchEvent.off(this._input, 'click', this._onClickHandler);\n          }\n        },\n\n        /**\n         * Onchange handler\n         */\n        _onChangeHandler: function _onChangeHandler() {\n          this.fire('change');\n        },\n\n        /**\n         * Onclick handler\n         */\n        _onClickHandler: function _onClickHandler() {\n          this.fire('click');\n        },\n\n        /**\n         * Check element is same as the input element.\n         * @param {HTMLElement} el - To check matched set of elements\n         * @returns {boolean}\n         */\n        is: function is(el) {\n          return this._input === el;\n        },\n\n        /**\n         * Enable input\n         */\n        enable: function enable() {\n          if (this._input) {\n            this._input.removeAttribute('disabled');\n          }\n        },\n\n        /**\n         * Disable input\n         */\n        disable: function disable() {\n          if (this._input) {\n            this._input.setAttribute('disabled', true);\n          }\n        },\n\n        /**\n         * Return format\n         * @returns {string}\n         */\n        getFormat: function getFormat() {\n          return this._formatter.getRawString();\n        },\n\n        /**\n         * Set format\n         * @param {string} format - Format\n         */\n        setFormat: function setFormat(format) {\n          if (!format) {\n            return;\n          }\n\n          this._formatter = new DateTimeFormatter(format, this._titles);\n        },\n\n        /**\n         * Clear text\n         */\n        clearText: function clearText() {\n          if (this._input) {\n            this._input.value = '';\n          }\n        },\n\n        /**\n         * Set value from date\n         * @param {Date} date - Date\n         */\n        setDate: function setDate(date) {\n          if (this._input) {\n            this._input.value = this._formatter.format(date);\n          }\n        },\n\n        /**\n         * Returns date from input-text\n         * @returns {Date}\n         * @throws {Error}\n         */\n        getDate: function getDate() {\n          var value = '';\n\n          if (this._input) {\n            value = this._input.value;\n          }\n\n          return this._formatter.parse(value);\n        },\n\n        /**\n         * Destroy\n         */\n        destroy: function destroy() {\n          this._removeEvents();\n\n          this._input = this._id = this._formatter = null;\n        }\n      });\n      CustomEvents.mixin(DatePickerInput);\n      module.exports = DatePickerInput;\n      /***/\n    },\n    /* 60 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Date-Range picker\n       * @author NHN. FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var forEachArray = __webpack_require__(2);\n\n      var defineClass = __webpack_require__(0);\n\n      var CustomEvents = __webpack_require__(8);\n\n      var addClass = __webpack_require__(16);\n\n      var getData = __webpack_require__(26);\n\n      var removeClass = __webpack_require__(18);\n\n      var extend = __webpack_require__(7);\n\n      var DatePicker = __webpack_require__(21);\n\n      var dateUtil = __webpack_require__(5);\n\n      var constants = __webpack_require__(1);\n\n      var util = __webpack_require__(4);\n\n      var CLASS_NAME_RANGE_PICKER = 'tui-rangepicker';\n      var CLASS_NAME_SELECTED = constants.CLASS_NAME_SELECTED;\n      var CLASS_NAME_SELECTED_RANGE = 'tui-is-selected-range';\n      /**\n       * @class\n       * @description\n       * Create a date-range picker by {@link DatePicker#createRangePicker DatePicker.createRangePicker()}.\n       * @see {@link /tutorial-example08-daterangepicker DateRangePicker example}\n       * @param {object} options - DateRangePicker options\n       *     @param {object} options.startpicker - Startpicker options\n       *         @param {HTMLElement|string} options.startpicker.input - Startpicker input element or selector\n       *         @param {HTMLElement|string} options.startpicker.container - Startpicker container element or selector\n       *         @param {Date|number} [options.startpicker.date] - Initial date of the start picker. Set by a Date instance or a number(timestamp). (default: no initial date)\n       *     @param {object} options.endpicker - Endpicker options\n       *         @param {HTMLElement|string} options.endpicker.input - Endpicker input element or selector\n       *         @param {HTMLElement|string} options.endpicker.container - Endpicker container element or selector\n       *         @param {Date|number} [options.endpicker.date] - Initial date of the end picker. Set by a Date instance or a number(timestamp). (default: no initial date)\n       *     @param {('date'|'month'|'year')} [options.type = 'date'] - DatePicker type. Determine whether to choose a date, month, or year.\n       *     @param {string} [options.language='en'] - Language code. English('en') and Korean('ko') are provided as default. To use the other languages, use {@link DatePicker#localeTexts DatePicker.localeTexts}.\n       *     @param {object|boolean} [options.timePicker] - [TimePicker](https://nhn.github.io/tui.time-picker/latest) options. Refer to the [TimePicker instance's options](https://nhn.github.io/tui.time-picker/latest/TimePicker). To create the TimePicker without customization, set to true.\n       *     @param {object} [options.calendar] - {@link Calendar} options. Refer to the {@link Calendar Calendar instance's options}.\n       *     @param {string} [options.format = 'yyyy-mm-dd'] - Format of the Date string\n       *     @param {Array.<Array.<Date|number>>} [options.selectableRanges] - Ranges of selectable date. Set by Date instances or numbers(timestamp).\n       *     @param {boolean} [options.showAlways = false] - Show the DateRangePicker always\n       *     @param {boolean} [options.autoClose = true] - Close the DateRangePicker after clicking the date\n       *     @param {boolean} [options.usageStatistics = true] - Send a hostname to Google Analytics (default: true)\n       * @example\n       * import DatePicker from 'tui-date-picker' // ES6\n       * // const DatePicker = require('tui-date-picker'); // CommonJS\n       * // const DatePicker = tui.DatePicker;\n       *\n       * const rangePicker = DatePicker.createRangePicker({\n       *     startpicker: {\n       *         input: '#start-input',\n       *         container: '#start-container'\n       *         date: new Date(2019, 3, 1)\n       *     },\n       *     endpicker: {\n       *         input: '#end-input',\n       *         container: '#end-container'\n       *     },\n       *     type: 'date',\n       *     format: 'yyyy-MM-dd'\n       *     selectableRanges: [\n       *         [new Date(2017, 3, 1), new Date(2017, 5, 1)],\n       *         [new Date(2017, 6, 3), new Date(2017, 10, 5)]\n       *     ]\n       * });\n       */\n\n      var DateRangePicker = defineClass(\n      /** @lends DateRangePicker.prototype */\n      {\n        init: function init(options) {\n          var startpickerOpt, endpickerOpt;\n          options = options || {};\n          startpickerOpt = options.startpicker;\n          endpickerOpt = options.endpicker;\n\n          if (!startpickerOpt) {\n            throw new Error('The \"startpicker\" option is required.');\n          }\n\n          if (!endpickerOpt) {\n            throw new Error('The \"endpicker\" option is required.');\n          }\n          /**\n           * Start picker\n           * @type {DatePicker}\n           * @private\n           */\n\n\n          this._startpicker = null;\n          /**\n           * End picker\n           * @type {DatePicker}\n           * @private\n           */\n\n          this._endpicker = null;\n\n          this._initializePickers(options);\n\n          this._syncRangesToEndpicker();\n        },\n\n        /**\n         * Create picker\n         * @param {Object} options - DatePicker options\n         * @private\n         */\n        _initializePickers: function _initializePickers(options) {\n          var startpickerContainer = util.getElement(options.startpicker.container);\n          var endpickerContainer = util.getElement(options.endpicker.container);\n          var startInput = util.getElement(options.startpicker.input);\n          var endInput = util.getElement(options.endpicker.input);\n          var startpickerOpt = extend({}, options, {\n            input: {\n              element: startInput,\n              format: options.format\n            },\n            date: options.startpicker.date\n          });\n          var endpickerOpt = extend({}, options, {\n            input: {\n              element: endInput,\n              format: options.format\n            },\n            date: options.endpicker.date\n          });\n          this._startpicker = new DatePicker(startpickerContainer, startpickerOpt);\n\n          this._startpicker.addCssClass(CLASS_NAME_RANGE_PICKER);\n\n          this._startpicker.on('change', this._onChangeStartpicker, this);\n\n          this._startpicker.on('draw', this._onDrawPicker, this);\n\n          this._endpicker = new DatePicker(endpickerContainer, endpickerOpt);\n\n          this._endpicker.addCssClass(CLASS_NAME_RANGE_PICKER);\n\n          this._endpicker.on('change', this._onChangeEndpicker, this);\n\n          this._endpicker.on('draw', this._onDrawPicker, this);\n        },\n\n        /**\n         * Set selection-class to elements after calendar drawing\n         * @param {Object} eventData - Event data {@link DatePicker#event:draw}\n         * @private\n         */\n        _onDrawPicker: function _onDrawPicker(eventData) {\n          var calendarType = eventData.type;\n\n          var startDate = this._startpicker.getDate();\n\n          var endDate = this._endpicker.getDate();\n\n          if (!startDate) {\n            return;\n          }\n\n          if (!endDate) {\n            // Convert null to invaild date.\n            endDate = new Date(NaN);\n          }\n\n          forEachArray(eventData.dateElements, function (el) {\n            var elDate = new Date(Number(getData(el, 'timestamp')));\n            var isInRange = dateUtil.inRange(startDate, endDate, elDate, calendarType);\n            var isSelected = dateUtil.isSame(startDate, elDate, calendarType) || dateUtil.isSame(endDate, elDate, calendarType);\n\n            this._setRangeClass(el, isInRange);\n\n            this._setSelectedClass(el, isSelected);\n          }, this);\n        },\n\n        /**\n         * Set range class to element\n         * @param {HTMLElement} el - Element\n         * @param {boolean} isInRange - In range\n         * @private\n         */\n        _setRangeClass: function _setRangeClass(el, isInRange) {\n          if (isInRange) {\n            addClass(el, CLASS_NAME_SELECTED_RANGE);\n          } else {\n            removeClass(el, CLASS_NAME_SELECTED_RANGE);\n          }\n        },\n\n        /**\n         * Set selected class to element\n         * @param {HTMLElement} el - Element\n         * @param {boolean} isSelected - Is selected\n         * @private\n         */\n        _setSelectedClass: function _setSelectedClass(el, isSelected) {\n          if (isSelected) {\n            addClass(el, CLASS_NAME_SELECTED);\n          } else {\n            removeClass(el, CLASS_NAME_SELECTED);\n          }\n        },\n\n        /**\n         * Sync ranges to endpicker\n         * @private\n         */\n        _syncRangesToEndpicker: function _syncRangesToEndpicker() {\n          var startDate = this._startpicker.getDate();\n\n          var overlappedRange;\n\n          if (startDate) {\n            overlappedRange = this._startpicker.findOverlappedRange(dateUtil.cloneWithStartOf(startDate).getTime(), dateUtil.cloneWithEndOf(startDate).getTime());\n\n            this._endpicker.enable();\n\n            this._endpicker.setRanges([[startDate.getTime(), overlappedRange[1].getTime()]]);\n          } else {\n            this._endpicker.setNull();\n\n            this._endpicker.disable();\n          }\n        },\n\n        /**\n         * After change on start-picker\n         * @private\n         */\n        _onChangeStartpicker: function _onChangeStartpicker() {\n          this._syncRangesToEndpicker();\n          /**\n           * Occur after the start date is changed.\n           * @event DateRangePicker#change:start\n           * @see {@link https://nhn.github.io/tui.code-snippet/latest/CustomEvents#on rangePicker.on()} to bind event handlers.\n           * @see {@link https://nhn.github.io/tui.code-snippet/latest/CustomEvents#off rangePicker.off()} to unbind event handlers.\n           * @see Refer to {@link https://nhn.github.io/tui.code-snippet/latest/CustomEvents CustomEvents} for more methods. DateRangePicker mixes in the methods from CustomEvents.\n           * @example\n           * // bind the 'change:start' event\n           * rangePicker.on('change:start', function() {\n           *     console.log(`Start date: ${rangePicker.getStartDate()}`);\n           * });\n           *\n           * // unbind the 'change:start' event\n           * rangePicker.off('change:start');\n           */\n\n\n          this.fire('change:start');\n        },\n\n        /**\n         * After change on end-picker\n         * @private\n         */\n        _onChangeEndpicker: function _onChangeEndpicker() {\n          /**\n           * Occur after the end date is changed.\n           * @event DateRangePicker#change:end\n           * @see {@link https://nhn.github.io/tui.code-snippet/latest/CustomEvents#on rangePicker.on()} to bind event handlers.\n           * @see {@link https://nhn.github.io/tui.code-snippet/latest/CustomEvents#off rangePicker.off()} to unbind event handlers.\n           * @see Refer to {@link https://nhn.github.io/tui.code-snippet/latest/CustomEvents CustomEvents} for more methods. DateRangePicker mixes in the methods from CustomEvents.\n           * @example\n           * // bind the 'change:end' event\n           * rangePicker.on('change:end', function() {\n           *     console.log(`End date: ${rangePicker.getEndDate()}`);\n           * });\n           *\n           * // unbind the 'change:end' event\n           * rangePicker.off('change:end');\n           */\n          this.fire('change:end');\n        },\n\n        /**\n         * Return a start-datepicker.\n         * @returns {DatePicker}\n         */\n        getStartpicker: function getStartpicker() {\n          return this._startpicker;\n        },\n\n        /**\n         * Return a end-datepicker.\n         * @returns {DatePicker}\n         */\n        getEndpicker: function getEndpicker() {\n          return this._endpicker;\n        },\n\n        /**\n         * Set the start date.\n         * @param {Date} date - Start date\n         */\n        setStartDate: function setStartDate(date) {\n          this._startpicker.setDate(date);\n        },\n\n        /**\n         * Return the start date.\n         * @returns {?Date}\n         */\n        getStartDate: function getStartDate() {\n          return this._startpicker.getDate();\n        },\n\n        /**\n         * Return the end date.\n         * @returns {?Date}\n         */\n        getEndDate: function getEndDate() {\n          return this._endpicker.getDate();\n        },\n\n        /**\n         * Set the end date.\n         * @param {Date} date - End date\n         */\n        setEndDate: function setEndDate(date) {\n          this._endpicker.setDate(date);\n        },\n\n        /**\n         * Set selectable ranges.\n         * @param {Array.<Array.<number|Date>>} ranges - Selectable ranges. Use Date instances or numbers(timestamp).\n         */\n        setRanges: function setRanges(ranges) {\n          this._startpicker.setRanges(ranges);\n\n          this._syncRangesToEndpicker();\n        },\n\n        /**\n         * Add a selectable range. Use Date instances or numbers(timestamp).\n         * @param {Date|number} start - the start date\n         * @param {Date|number} end - the end date\n         */\n        addRange: function addRange(start, end) {\n          this._startpicker.addRange(start, end);\n\n          this._syncRangesToEndpicker();\n        },\n\n        /**\n         * Remove a range. Use Date instances or numbers(timestamp).\n         * @param {Date|number} start - the start date\n         * @param {Date|number} end - the end date\n         * @param {null|'date'|'month'|'year'} type - Range type. If falsy, start and end values are considered as timestamp\n         */\n        removeRange: function removeRange(start, end, type) {\n          this._startpicker.removeRange(start, end, type);\n\n          this._syncRangesToEndpicker();\n        },\n\n        /**\n         * Change language.\n         * @param {string} language - Language code. English('en') and Korean('ko') are provided as default.\n         * @see To set to the other languages, use {@link DatePicker#localeTexts DatePicker.localeTexts}.\n         */\n        changeLanguage: function changeLanguage(language) {\n          this._startpicker.changeLanguage(language);\n\n          this._endpicker.changeLanguage(language);\n        },\n\n        /**\n         * Destroy the date-range picker.\n         */\n        destroy: function destroy() {\n          this.off();\n\n          this._startpicker.destroy();\n\n          this._endpicker.destroy();\n\n          this._startpicker = this._endpicker = null;\n        }\n      });\n      CustomEvents.mixin(DateRangePicker);\n      module.exports = DateRangePicker;\n      /***/\n    },\n    /* 61 */\n\n    /***/\n    function (module, exports, __webpack_require__) {// extracted by mini-css-extract-plugin\n\n      /***/\n    }\n    /******/\n    ])\n  );\n});","map":null,"metadata":{},"sourceType":"script"}