{"ast":null,"code":"/*!\n * TOAST UI Time Picker\n * @version 2.0.3\n * @author NHN FE Development Lab <dl_javascript@nhn.com>\n * @license MIT\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define([], factory);else if (typeof exports === 'object') exports[\"TimePicker\"] = factory();else root[\"tui\"] = root[\"tui\"] || {}, root[\"tui\"][\"TimePicker\"] = factory();\n})(window, function () {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__webpack_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            enumerable: true,\n            get: getter\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // define __esModule on exports\n\n      /******/\n\n\n      __webpack_require__.r = function (exports) {\n        /******/\n        if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n          /******/\n          Object.defineProperty(exports, Symbol.toStringTag, {\n            value: 'Module'\n          });\n          /******/\n        }\n        /******/\n\n\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n        /******/\n      };\n      /******/\n\n      /******/\n      // create a fake namespace object\n\n      /******/\n      // mode & 1: value is a module id, require it\n\n      /******/\n      // mode & 2: merge all properties of value into the ns\n\n      /******/\n      // mode & 4: return value when already ns object\n\n      /******/\n      // mode & 8|1: behave like require\n\n      /******/\n\n\n      __webpack_require__.t = function (value, mode) {\n        /******/\n        if (mode & 1) value = __webpack_require__(value);\n        /******/\n\n        if (mode & 8) return value;\n        /******/\n\n        if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n        /******/\n\n        var ns = Object.create(null);\n        /******/\n\n        __webpack_require__.r(ns);\n        /******/\n\n\n        Object.defineProperty(ns, 'default', {\n          enumerable: true,\n          value: value\n        });\n        /******/\n\n        if (mode & 2 && typeof value != 'string') for (var key in value) {\n          __webpack_require__.d(ns, key, function (key) {\n            return value[key];\n          }.bind(null, key));\n        }\n        /******/\n\n        return ns;\n        /******/\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __webpack_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __webpack_require__.p = \"dist\";\n      /******/\n\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(__webpack_require__.s = 20);\n      /******/\n    }(\n    /************************************************************************/\n\n    /******/\n    [\n    /* 0 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /* eslint-disable complexity */\n\n      /**\n       * @fileoverview Returns the first index at which a given element can be found in the array.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var isArray = __webpack_require__(2);\n      /**\n       * @module array\n       */\n\n      /**\n       * Returns the first index at which a given element can be found in the array\n       * from start index(default 0), or -1 if it is not present.\n       * It compares searchElement to elements of the Array using strict equality\n       * (the same method used by the ===, or triple-equals, operator).\n       * @param {*} searchElement Element to locate in the array\n       * @param {Array} array Array that will be traversed.\n       * @param {number} startIndex Start index in array for searching (default 0)\n       * @returns {number} the First index at which a given element, or -1 if it is not present\n       * @memberof module:array\n       * @example\n       * var inArray = require('tui-code-snippet/array/inArray'); // node, commonjs\n       *\n       * var arr = ['one', 'two', 'three', 'four'];\n       * var idx1 = inArray('one', arr, 3); // -1\n       * var idx2 = inArray('one', arr); // 0\n       */\n\n\n      function inArray(searchElement, array, startIndex) {\n        var i;\n        var length;\n        startIndex = startIndex || 0;\n\n        if (!isArray(array)) {\n          return -1;\n        }\n\n        if (Array.prototype.indexOf) {\n          return Array.prototype.indexOf.call(array, searchElement, startIndex);\n        }\n\n        length = array.length;\n\n        for (i = startIndex; startIndex >= 0 && i < length; i += 1) {\n          if (array[i] === searchElement) {\n            return i;\n          }\n        }\n\n        return -1;\n      }\n\n      module.exports = inArray;\n      /***/\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Extend the target object from other objects.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * @module object\n       */\n\n      /**\n       * Extend the target object from other objects.\n       * @param {object} target - Object that will be extended\n       * @param {...object} objects - Objects as sources\n       * @returns {object} Extended object\n       * @memberof module:object\n       */\n\n      function extend(target, objects) {\n        // eslint-disable-line no-unused-vars\n        var hasOwnProp = Object.prototype.hasOwnProperty;\n        var source, prop, i, len;\n\n        for (i = 1, len = arguments.length; i < len; i += 1) {\n          source = arguments[i];\n\n          for (prop in source) {\n            if (hasOwnProp.call(source, prop)) {\n              target[prop] = source[prop];\n            }\n          }\n        }\n\n        return target;\n      }\n\n      module.exports = extend;\n      /***/\n    },\n    /* 2 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Check whether the given variable is an instance of Array or not.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Check whether the given variable is an instance of Array or not.\n       * If the given variable is an instance of Array, return true.\n       * @param {*} obj - Target for checking\n       * @returns {boolean} Is array instance?\n       * @memberof module:type\n       */\n\n      function isArray(obj) {\n        return obj instanceof Array;\n      }\n\n      module.exports = isArray;\n      /***/\n    },\n    /* 3 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Execute the provided callback once for each element present in the array(or Array-like object) in ascending order.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Execute the provided callback once for each element present\n       * in the array(or Array-like object) in ascending order.\n       * If the callback function returns false, the loop will be stopped.\n       * Callback function(iteratee) is invoked with three arguments:\n       *  1) The value of the element\n       *  2) The index of the element\n       *  3) The array(or Array-like object) being traversed\n       * @param {Array|Arguments|NodeList} arr The array(or Array-like object) that will be traversed\n       * @param {function} iteratee Callback function\n       * @param {Object} [context] Context(this) of callback function\n       * @memberof module:collection\n       * @example\n       * var forEachArray = require('tui-code-snippet/collection/forEachArray'); // node, commonjs\n       *\n       * var sum = 0;\n       *\n       * forEachArray([1,2,3], function(value){\n       *     sum += value;\n       * });\n       * alert(sum); // 6\n       */\n\n      function forEachArray(arr, iteratee, context) {\n        var index = 0;\n        var len = arr.length;\n        context = context || null;\n\n        for (; index < len; index += 1) {\n          if (iteratee.call(context, arr[index], index, arr) === false) {\n            break;\n          }\n        }\n      }\n\n      module.exports = forEachArray;\n      /***/\n    },\n    /* 4 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Execute the provided callback once for each property of object(or element of array) which actually exist.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var isArray = __webpack_require__(2);\n\n      var forEachArray = __webpack_require__(3);\n\n      var forEachOwnProperties = __webpack_require__(16);\n      /**\n       * @module collection\n       */\n\n      /**\n       * Execute the provided callback once for each property of object(or element of array) which actually exist.\n       * If the object is Array-like object(ex-arguments object), It needs to transform to Array.(see 'ex2' of example).\n       * If the callback function returns false, the loop will be stopped.\n       * Callback function(iteratee) is invoked with three arguments:\n       *  1) The value of the property(or The value of the element)\n       *  2) The name of the property(or The index of the element)\n       *  3) The object being traversed\n       * @param {Object} obj The object that will be traversed\n       * @param {function} iteratee Callback function\n       * @param {Object} [context] Context(this) of callback function\n       * @memberof module:collection\n       * @example\n       * var forEach = require('tui-code-snippet/collection/forEach'); // node, commonjs\n       *\n       * var sum = 0;\n       *\n       * forEach([1,2,3], function(value){\n       *     sum += value;\n       * });\n       * alert(sum); // 6\n       *\n       * // In case of Array-like object\n       * var array = Array.prototype.slice.call(arrayLike); // change to array\n       * forEach(array, function(value){\n       *     sum += value;\n       * });\n       */\n\n\n      function forEach(obj, iteratee, context) {\n        if (isArray(obj)) {\n          forEachArray(obj, iteratee, context);\n        } else {\n          forEachOwnProperties(obj, iteratee, context);\n        }\n      }\n\n      module.exports = forEach;\n      /***/\n    },\n    /* 5 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Check whether the given variable is undefined or not.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Check whether the given variable is undefined or not.\n       * If the given variable is undefined, returns true.\n       * @param {*} obj - Target for checking\n       * @returns {boolean} Is undefined?\n       * @memberof module:type\n       */\n\n      function isUndefined(obj) {\n        return obj === undefined; // eslint-disable-line no-undefined\n      }\n\n      module.exports = isUndefined;\n      /***/\n    },\n    /* 6 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Check whether the given variable is a string or not.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Check whether the given variable is a string or not.\n       * If the given variable is a string, return true.\n       * @param {*} obj - Target for checking\n       * @returns {boolean} Is string?\n       * @memberof module:type\n       */\n\n      function isString(obj) {\n        return typeof obj === 'string' || obj instanceof String;\n      }\n\n      module.exports = isString;\n      /***/\n    },\n    /* 7 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Convert text by binding expressions with context.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var inArray = __webpack_require__(0);\n\n      var forEach = __webpack_require__(4);\n\n      var isArray = __webpack_require__(2);\n\n      var isString = __webpack_require__(6);\n\n      var extend = __webpack_require__(1); // IE8 does not support capture groups.\n\n\n      var EXPRESSION_REGEXP = /{{\\s?|\\s?}}/g;\n      var BRACKET_NOTATION_REGEXP = /^[a-zA-Z0-9_@]+\\[[a-zA-Z0-9_@\"']+\\]$/;\n      var BRACKET_REGEXP = /\\[\\s?|\\s?\\]/;\n      var DOT_NOTATION_REGEXP = /^[a-zA-Z_]+\\.[a-zA-Z_]+$/;\n      var DOT_REGEXP = /\\./;\n      var STRING_NOTATION_REGEXP = /^[\"']\\w+[\"']$/;\n      var STRING_REGEXP = /\"|'/g;\n      var NUMBER_REGEXP = /^-?\\d+\\.?\\d*$/;\n      var EXPRESSION_INTERVAL = 2;\n      var BLOCK_HELPERS = {\n        'if': handleIf,\n        'each': handleEach,\n        'with': handleWith\n      };\n      var isValidSplit = 'a'.split(/a/).length === 3;\n      /**\n       * Split by RegExp. (Polyfill for IE8)\n       * @param {string} text - text to be splitted\\\n       * @param {RegExp} regexp - regular expression\n       * @returns {Array.<string>}\n       */\n\n      var splitByRegExp = function () {\n        if (isValidSplit) {\n          return function (text, regexp) {\n            return text.split(regexp);\n          };\n        }\n\n        return function (text, regexp) {\n          var result = [];\n          var prevIndex = 0;\n          var match, index;\n\n          if (!regexp.global) {\n            regexp = new RegExp(regexp, 'g');\n          }\n\n          match = regexp.exec(text);\n\n          while (match !== null) {\n            index = match.index;\n            result.push(text.slice(prevIndex, index));\n            prevIndex = index + match[0].length;\n            match = regexp.exec(text);\n          }\n\n          result.push(text.slice(prevIndex));\n          return result;\n        };\n      }();\n      /**\n       * Find value in the context by an expression.\n       * @param {string} exp - an expression\n       * @param {object} context - context\n       * @returns {*}\n       * @private\n       */\n      // eslint-disable-next-line complexity\n\n\n      function getValueFromContext(exp, context) {\n        var splitedExps;\n        var value = context[exp];\n\n        if (exp === 'true') {\n          value = true;\n        } else if (exp === 'false') {\n          value = false;\n        } else if (STRING_NOTATION_REGEXP.test(exp)) {\n          value = exp.replace(STRING_REGEXP, '');\n        } else if (BRACKET_NOTATION_REGEXP.test(exp)) {\n          splitedExps = exp.split(BRACKET_REGEXP);\n          value = getValueFromContext(splitedExps[0], context)[getValueFromContext(splitedExps[1], context)];\n        } else if (DOT_NOTATION_REGEXP.test(exp)) {\n          splitedExps = exp.split(DOT_REGEXP);\n          value = getValueFromContext(splitedExps[0], context)[splitedExps[1]];\n        } else if (NUMBER_REGEXP.test(exp)) {\n          value = parseFloat(exp);\n        }\n\n        return value;\n      }\n      /**\n       * Extract elseif and else expressions.\n       * @param {Array.<string>} ifExps - args of if expression\n       * @param {Array.<string>} sourcesInsideBlock - sources inside if block\n       * @returns {object} - exps: expressions of if, elseif, and else / sourcesInsideIf: sources inside if, elseif, and else block.\n       * @private\n       */\n\n\n      function extractElseif(ifExps, sourcesInsideBlock) {\n        var exps = [ifExps];\n        var sourcesInsideIf = [];\n        var otherIfCount = 0;\n        var start = 0; // eslint-disable-next-line complexity\n\n        forEach(sourcesInsideBlock, function (source, index) {\n          if (source.indexOf('if') === 0) {\n            otherIfCount += 1;\n          } else if (source === '/if') {\n            otherIfCount -= 1;\n          } else if (!otherIfCount && (source.indexOf('elseif') === 0 || source === 'else')) {\n            exps.push(source === 'else' ? ['true'] : source.split(' ').slice(1));\n            sourcesInsideIf.push(sourcesInsideBlock.slice(start, index));\n            start = index + 1;\n          }\n        });\n        sourcesInsideIf.push(sourcesInsideBlock.slice(start));\n        return {\n          exps: exps,\n          sourcesInsideIf: sourcesInsideIf\n        };\n      }\n      /**\n       * Helper function for \"if\". \n       * @param {Array.<string>} exps - array of expressions split by spaces\n       * @param {Array.<string>} sourcesInsideBlock - array of sources inside the if block\n       * @param {object} context - context\n       * @returns {string}\n       * @private\n       */\n\n\n      function handleIf(exps, sourcesInsideBlock, context) {\n        var analyzed = extractElseif(exps, sourcesInsideBlock);\n        var result = false;\n        var compiledSource = '';\n        forEach(analyzed.exps, function (exp, index) {\n          result = handleExpression(exp, context);\n\n          if (result) {\n            compiledSource = compile(analyzed.sourcesInsideIf[index], context);\n          }\n\n          return !result;\n        });\n        return compiledSource;\n      }\n      /**\n       * Helper function for \"each\".\n       * @param {Array.<string>} exps - array of expressions split by spaces\n       * @param {Array.<string>} sourcesInsideBlock - array of sources inside the each block\n       * @param {object} context - context\n       * @returns {string}\n       * @private\n       */\n\n\n      function handleEach(exps, sourcesInsideBlock, context) {\n        var collection = handleExpression(exps, context);\n        var additionalKey = isArray(collection) ? '@index' : '@key';\n        var additionalContext = {};\n        var result = '';\n        forEach(collection, function (item, key) {\n          additionalContext[additionalKey] = key;\n          additionalContext['@this'] = item;\n          extend(context, additionalContext);\n          result += compile(sourcesInsideBlock.slice(), context);\n        });\n        return result;\n      }\n      /**\n       * Helper function for \"with ... as\"\n       * @param {Array.<string>} exps - array of expressions split by spaces\n       * @param {Array.<string>} sourcesInsideBlock - array of sources inside the with block\n       * @param {object} context - context\n       * @returns {string}\n       * @private\n       */\n\n\n      function handleWith(exps, sourcesInsideBlock, context) {\n        var asIndex = inArray('as', exps);\n        var alias = exps[asIndex + 1];\n        var result = handleExpression(exps.slice(0, asIndex), context);\n        var additionalContext = {};\n        additionalContext[alias] = result;\n        return compile(sourcesInsideBlock, extend(context, additionalContext)) || '';\n      }\n      /**\n       * Extract sources inside block in place.\n       * @param {Array.<string>} sources - array of sources\n       * @param {number} start - index of start block\n       * @param {number} end - index of end block\n       * @returns {Array.<string>}\n       * @private\n       */\n\n\n      function extractSourcesInsideBlock(sources, start, end) {\n        var sourcesInsideBlock = sources.splice(start + 1, end - start);\n        sourcesInsideBlock.pop();\n        return sourcesInsideBlock;\n      }\n      /**\n       * Handle block helper function\n       * @param {string} helperKeyword - helper keyword (ex. if, each, with)\n       * @param {Array.<string>} sourcesToEnd - array of sources after the starting block\n       * @param {object} context - context\n       * @returns {Array.<string>}\n       * @private\n       */\n\n\n      function handleBlockHelper(helperKeyword, sourcesToEnd, context) {\n        var executeBlockHelper = BLOCK_HELPERS[helperKeyword];\n        var helperCount = 1;\n        var startBlockIndex = 0;\n        var endBlockIndex;\n        var index = startBlockIndex + EXPRESSION_INTERVAL;\n        var expression = sourcesToEnd[index];\n\n        while (helperCount && isString(expression)) {\n          if (expression.indexOf(helperKeyword) === 0) {\n            helperCount += 1;\n          } else if (expression.indexOf('/' + helperKeyword) === 0) {\n            helperCount -= 1;\n            endBlockIndex = index;\n          }\n\n          index += EXPRESSION_INTERVAL;\n          expression = sourcesToEnd[index];\n        }\n\n        if (helperCount) {\n          throw Error(helperKeyword + ' needs {{/' + helperKeyword + '}} expression.');\n        }\n\n        sourcesToEnd[startBlockIndex] = executeBlockHelper(sourcesToEnd[startBlockIndex].split(' ').slice(1), extractSourcesInsideBlock(sourcesToEnd, startBlockIndex, endBlockIndex), context);\n        return sourcesToEnd;\n      }\n      /**\n       * Helper function for \"custom helper\".\n       * If helper is not a function, return helper itself.\n       * @param {Array.<string>} exps - array of expressions split by spaces (first element: helper)\n       * @param {object} context - context\n       * @returns {string}\n       * @private\n       */\n\n\n      function handleExpression(exps, context) {\n        var result = getValueFromContext(exps[0], context);\n\n        if (result instanceof Function) {\n          return executeFunction(result, exps.slice(1), context);\n        }\n\n        return result;\n      }\n      /**\n       * Execute a helper function.\n       * @param {Function} helper - helper function\n       * @param {Array.<string>} argExps - expressions of arguments\n       * @param {object} context - context\n       * @returns {string} - result of executing the function with arguments\n       * @private\n       */\n\n\n      function executeFunction(helper, argExps, context) {\n        var args = [];\n        forEach(argExps, function (exp) {\n          args.push(getValueFromContext(exp, context));\n        });\n        return helper.apply(null, args);\n      }\n      /**\n       * Get a result of compiling an expression with the context.\n       * @param {Array.<string>} sources - array of sources split by regexp of expression.\n       * @param {object} context - context\n       * @returns {Array.<string>} - array of sources that bind with its context\n       * @private\n       */\n\n\n      function compile(sources, context) {\n        var index = 1;\n        var expression = sources[index];\n        var exps, firstExp, result;\n\n        while (isString(expression)) {\n          exps = expression.split(' ');\n          firstExp = exps[0];\n\n          if (BLOCK_HELPERS[firstExp]) {\n            result = handleBlockHelper(firstExp, sources.splice(index, sources.length - index), context);\n            sources = sources.concat(result);\n          } else {\n            sources[index] = handleExpression(exps, context);\n          }\n\n          index += EXPRESSION_INTERVAL;\n          expression = sources[index];\n        }\n\n        return sources.join('');\n      }\n      /**\n       * Convert text by binding expressions with context.\n       * <br>\n       * If expression exists in the context, it will be replaced.\n       * ex) '{{title}}' with context {title: 'Hello!'} is converted to 'Hello!'.\n       * An array or object can be accessed using bracket and dot notation.\n       * ex) '{{odds\\[2\\]}}' with context {odds: \\[1, 3, 5\\]} is converted to '5'.\n       * ex) '{{evens\\[first\\]}}' with context {evens: \\[2, 4\\], first: 0} is converted to '2'.\n       * ex) '{{project\\[\"name\"\\]}}' and '{{project.name}}' with context {project: {name: 'CodeSnippet'}} is converted to 'CodeSnippet'.\n       * <br>\n       * If replaced expression is a function, next expressions will be arguments of the function.\n       * ex) '{{add 1 2}}' with context {add: function(a, b) {return a + b;}} is converted to '3'.\n       * <br>\n       * It has 3 predefined block helpers '{{helper ...}} ... {{/helper}}': 'if', 'each', 'with ... as ...'.\n       * 1) 'if' evaluates conditional statements. It can use with 'elseif' and 'else'.\n       * 2) 'each' iterates an array or object. It provides '@index'(array), '@key'(object), and '@this'(current element).\n       * 3) 'with ... as ...' provides an alias.\n       * @param {string} text - text with expressions\n       * @param {object} context - context\n       * @returns {string} - text that bind with its context\n       * @memberof module:domUtil\n       * @example\n       * var template = require('tui-code-snippet/domUtil/template');\n       * \n       * var source = \n       *     '<h1>'\n       *   +   '{{if isValidNumber title}}'\n       *   +     '{{title}}th'\n       *   +   '{{elseif isValidDate title}}'\n       *   +     'Date: {{title}}'\n       *   +   '{{/if}}'\n       *   + '</h1>'\n       *   + '{{each list}}'\n       *   +   '{{with addOne @index as idx}}'\n       *   +     '<p>{{idx}}: {{@this}}</p>'\n       *   +   '{{/with}}'\n       *   + '{{/each}}';\n       * \n       * var context = {\n       *   isValidDate: function(text) {\n       *     return /^\\d{4}-(0|1)\\d-(0|1|2|3)\\d$/.test(text);\n       *   },\n       *   isValidNumber: function(text) {\n       *     return /^\\d+$/.test(text);\n       *   }\n       *   title: '2019-11-25',\n       *   list: ['Clean the room', 'Wash the dishes'],\n       *   addOne: function(num) {\n       *     return num + 1;\n       *   }\n       * };\n       * \n       * var result = template(source, context);\n       * console.log(result); // <h1>Date: 2019-11-25</h1><p>1: Clean the room</p><p>2: Wash the dishes</p>\n       */\n\n\n      function template(text, context) {\n        return compile(splitByRegExp(text, EXPRESSION_REGEXP), context);\n      }\n\n      module.exports = template;\n      /***/\n    },\n    /* 8 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview This module provides some functions for custom events. And it is implemented in the observer design pattern.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var extend = __webpack_require__(1);\n\n      var isExisty = __webpack_require__(23);\n\n      var isString = __webpack_require__(6);\n\n      var isObject = __webpack_require__(25);\n\n      var isArray = __webpack_require__(2);\n\n      var isFunction = __webpack_require__(26);\n\n      var forEach = __webpack_require__(4);\n\n      var R_EVENTNAME_SPLIT = /\\s+/g;\n      /**\n       * @class\n       * @example\n       * // node, commonjs\n       * var CustomEvents = require('tui-code-snippet/customEvents/customEvents');\n       */\n\n      function CustomEvents() {\n        /**\n           * @type {HandlerItem[]}\n           */\n        this.events = null;\n        /**\n           * only for checking specific context event was binded\n           * @type {object[]}\n           */\n\n        this.contexts = null;\n      }\n      /**\n       * Mixin custom events feature to specific constructor\n       * @param {function} func - constructor\n       * @example\n       * var CustomEvents = require('tui-code-snippet/customEvents/customEvents'); // node, commonjs\n       *\n       * var model;\n       * function Model() {\n       *     this.name = '';\n       * }\n       * CustomEvents.mixin(Model);\n       *\n       * model = new Model();\n       * model.on('change', function() { this.name = 'model'; }, this);\n       * model.fire('change');\n       * alert(model.name); // 'model';\n       */\n\n\n      CustomEvents.mixin = function (func) {\n        extend(func.prototype, CustomEvents.prototype);\n      };\n      /**\n       * Get HandlerItem object\n       * @param {function} handler - handler function\n       * @param {object} [context] - context for handler\n       * @returns {HandlerItem} HandlerItem object\n       * @private\n       */\n\n\n      CustomEvents.prototype._getHandlerItem = function (handler, context) {\n        var item = {\n          handler: handler\n        };\n\n        if (context) {\n          item.context = context;\n        }\n\n        return item;\n      };\n      /**\n       * Get event object safely\n       * @param {string} [eventName] - create sub event map if not exist.\n       * @returns {(object|array)} event object. if you supplied `eventName`\n       *  parameter then make new array and return it\n       * @private\n       */\n\n\n      CustomEvents.prototype._safeEvent = function (eventName) {\n        var events = this.events;\n        var byName;\n\n        if (!events) {\n          events = this.events = {};\n        }\n\n        if (eventName) {\n          byName = events[eventName];\n\n          if (!byName) {\n            byName = [];\n            events[eventName] = byName;\n          }\n\n          events = byName;\n        }\n\n        return events;\n      };\n      /**\n       * Get context array safely\n       * @returns {array} context array\n       * @private\n       */\n\n\n      CustomEvents.prototype._safeContext = function () {\n        var context = this.contexts;\n\n        if (!context) {\n          context = this.contexts = [];\n        }\n\n        return context;\n      };\n      /**\n       * Get index of context\n       * @param {object} ctx - context that used for bind custom event\n       * @returns {number} index of context\n       * @private\n       */\n\n\n      CustomEvents.prototype._indexOfContext = function (ctx) {\n        var context = this._safeContext();\n\n        var index = 0;\n\n        while (context[index]) {\n          if (ctx === context[index][0]) {\n            return index;\n          }\n\n          index += 1;\n        }\n\n        return -1;\n      };\n      /**\n       * Memorize supplied context for recognize supplied object is context or\n       *  name: handler pair object when off()\n       * @param {object} ctx - context object to memorize\n       * @private\n       */\n\n\n      CustomEvents.prototype._memorizeContext = function (ctx) {\n        var context, index;\n\n        if (!isExisty(ctx)) {\n          return;\n        }\n\n        context = this._safeContext();\n        index = this._indexOfContext(ctx);\n\n        if (index > -1) {\n          context[index][1] += 1;\n        } else {\n          context.push([ctx, 1]);\n        }\n      };\n      /**\n       * Forget supplied context object\n       * @param {object} ctx - context object to forget\n       * @private\n       */\n\n\n      CustomEvents.prototype._forgetContext = function (ctx) {\n        var context, contextIndex;\n\n        if (!isExisty(ctx)) {\n          return;\n        }\n\n        context = this._safeContext();\n        contextIndex = this._indexOfContext(ctx);\n\n        if (contextIndex > -1) {\n          context[contextIndex][1] -= 1;\n\n          if (context[contextIndex][1] <= 0) {\n            context.splice(contextIndex, 1);\n          }\n        }\n      };\n      /**\n       * Bind event handler\n       * @param {(string|{name:string, handler:function})} eventName - custom\n       *  event name or an object {eventName: handler}\n       * @param {(function|object)} [handler] - handler function or context\n       * @param {object} [context] - context for binding\n       * @private\n       */\n\n\n      CustomEvents.prototype._bindEvent = function (eventName, handler, context) {\n        var events = this._safeEvent(eventName);\n\n        this._memorizeContext(context);\n\n        events.push(this._getHandlerItem(handler, context));\n      };\n      /**\n       * Bind event handlers\n       * @param {(string|{name:string, handler:function})} eventName - custom\n       *  event name or an object {eventName: handler}\n       * @param {(function|object)} [handler] - handler function or context\n       * @param {object} [context] - context for binding\n       * //-- #1. Get Module --//\n       * var CustomEvents = require('tui-code-snippet/customEvents/customEvents'); // node, commonjs\n       *\n       * //-- #2. Use method --//\n       * // # 2.1 Basic Usage\n       * CustomEvents.on('onload', handler);\n       *\n       * // # 2.2 With context\n       * CustomEvents.on('onload', handler, myObj);\n       *\n       * // # 2.3 Bind by object that name, handler pairs\n       * CustomEvents.on({\n       *     'play': handler,\n       *     'pause': handler2\n       * });\n       *\n       * // # 2.4 Bind by object that name, handler pairs with context object\n       * CustomEvents.on({\n       *     'play': handler\n       * }, myObj);\n       */\n\n\n      CustomEvents.prototype.on = function (eventName, handler, context) {\n        var self = this;\n\n        if (isString(eventName)) {\n          // [syntax 1, 2]\n          eventName = eventName.split(R_EVENTNAME_SPLIT);\n          forEach(eventName, function (name) {\n            self._bindEvent(name, handler, context);\n          });\n        } else if (isObject(eventName)) {\n          // [syntax 3, 4]\n          context = handler;\n          forEach(eventName, function (func, name) {\n            self.on(name, func, context);\n          });\n        }\n      };\n      /**\n       * Bind one-shot event handlers\n       * @param {(string|{name:string,handler:function})} eventName - custom\n       *  event name or an object {eventName: handler}\n       * @param {function|object} [handler] - handler function or context\n       * @param {object} [context] - context for binding\n       */\n\n\n      CustomEvents.prototype.once = function (eventName, handler, context) {\n        var self = this;\n\n        if (isObject(eventName)) {\n          context = handler;\n          forEach(eventName, function (func, name) {\n            self.once(name, func, context);\n          });\n          return;\n        }\n\n        function onceHandler() {\n          // eslint-disable-line require-jsdoc\n          handler.apply(context, arguments);\n          self.off(eventName, onceHandler, context);\n        }\n\n        this.on(eventName, onceHandler, context);\n      };\n      /**\n       * Splice supplied array by callback result\n       * @param {array} arr - array to splice\n       * @param {function} predicate - function return boolean\n       * @private\n       */\n\n\n      CustomEvents.prototype._spliceMatches = function (arr, predicate) {\n        var i = 0;\n        var len;\n\n        if (!isArray(arr)) {\n          return;\n        }\n\n        for (len = arr.length; i < len; i += 1) {\n          if (predicate(arr[i]) === true) {\n            arr.splice(i, 1);\n            len -= 1;\n            i -= 1;\n          }\n        }\n      };\n      /**\n       * Get matcher for unbind specific handler events\n       * @param {function} handler - handler function\n       * @returns {function} handler matcher\n       * @private\n       */\n\n\n      CustomEvents.prototype._matchHandler = function (handler) {\n        var self = this;\n        return function (item) {\n          var needRemove = handler === item.handler;\n\n          if (needRemove) {\n            self._forgetContext(item.context);\n          }\n\n          return needRemove;\n        };\n      };\n      /**\n       * Get matcher for unbind specific context events\n       * @param {object} context - context\n       * @returns {function} object matcher\n       * @private\n       */\n\n\n      CustomEvents.prototype._matchContext = function (context) {\n        var self = this;\n        return function (item) {\n          var needRemove = context === item.context;\n\n          if (needRemove) {\n            self._forgetContext(item.context);\n          }\n\n          return needRemove;\n        };\n      };\n      /**\n       * Get matcher for unbind specific hander, context pair events\n       * @param {function} handler - handler function\n       * @param {object} context - context\n       * @returns {function} handler, context matcher\n       * @private\n       */\n\n\n      CustomEvents.prototype._matchHandlerAndContext = function (handler, context) {\n        var self = this;\n        return function (item) {\n          var matchHandler = handler === item.handler;\n          var matchContext = context === item.context;\n          var needRemove = matchHandler && matchContext;\n\n          if (needRemove) {\n            self._forgetContext(item.context);\n          }\n\n          return needRemove;\n        };\n      };\n      /**\n       * Unbind event by event name\n       * @param {string} eventName - custom event name to unbind\n       * @param {function} [handler] - handler function\n       * @private\n       */\n\n\n      CustomEvents.prototype._offByEventName = function (eventName, handler) {\n        var self = this;\n        var andByHandler = isFunction(handler);\n\n        var matchHandler = self._matchHandler(handler);\n\n        eventName = eventName.split(R_EVENTNAME_SPLIT);\n        forEach(eventName, function (name) {\n          var handlerItems = self._safeEvent(name);\n\n          if (andByHandler) {\n            self._spliceMatches(handlerItems, matchHandler);\n          } else {\n            forEach(handlerItems, function (item) {\n              self._forgetContext(item.context);\n            });\n            self.events[name] = [];\n          }\n        });\n      };\n      /**\n       * Unbind event by handler function\n       * @param {function} handler - handler function\n       * @private\n       */\n\n\n      CustomEvents.prototype._offByHandler = function (handler) {\n        var self = this;\n\n        var matchHandler = this._matchHandler(handler);\n\n        forEach(this._safeEvent(), function (handlerItems) {\n          self._spliceMatches(handlerItems, matchHandler);\n        });\n      };\n      /**\n       * Unbind event by object(name: handler pair object or context object)\n       * @param {object} obj - context or {name: handler} pair object\n       * @param {function} handler - handler function\n       * @private\n       */\n\n\n      CustomEvents.prototype._offByObject = function (obj, handler) {\n        var self = this;\n        var matchFunc;\n\n        if (this._indexOfContext(obj) < 0) {\n          forEach(obj, function (func, name) {\n            self.off(name, func);\n          });\n        } else if (isString(handler)) {\n          matchFunc = this._matchContext(obj);\n\n          self._spliceMatches(this._safeEvent(handler), matchFunc);\n        } else if (isFunction(handler)) {\n          matchFunc = this._matchHandlerAndContext(handler, obj);\n          forEach(this._safeEvent(), function (handlerItems) {\n            self._spliceMatches(handlerItems, matchFunc);\n          });\n        } else {\n          matchFunc = this._matchContext(obj);\n          forEach(this._safeEvent(), function (handlerItems) {\n            self._spliceMatches(handlerItems, matchFunc);\n          });\n        }\n      };\n      /**\n       * Unbind custom events\n       * @param {(string|object|function)} eventName - event name or context or\n       *  {name: handler} pair object or handler function\n       * @param {(function)} handler - handler function\n       * @example\n       * //-- #1. Get Module --//\n       * var CustomEvents = require('tui-code-snippet/customEvents/customEvents'); // node, commonjs\n       *\n       * //-- #2. Use method --//\n       * // # 2.1 off by event name\n       * CustomEvents.off('onload');\n       *\n       * // # 2.2 off by event name and handler\n       * CustomEvents.off('play', handler);\n       *\n       * // # 2.3 off by handler\n       * CustomEvents.off(handler);\n       *\n       * // # 2.4 off by context\n       * CustomEvents.off(myObj);\n       *\n       * // # 2.5 off by context and handler\n       * CustomEvents.off(myObj, handler);\n       *\n       * // # 2.6 off by context and event name\n       * CustomEvents.off(myObj, 'onload');\n       *\n       * // # 2.7 off by an Object.<string, function> that is {eventName: handler}\n       * CustomEvents.off({\n       *   'play': handler,\n       *   'pause': handler2\n       * });\n       *\n       * // # 2.8 off the all events\n       * CustomEvents.off();\n       */\n\n\n      CustomEvents.prototype.off = function (eventName, handler) {\n        if (isString(eventName)) {\n          // [syntax 1, 2]\n          this._offByEventName(eventName, handler);\n        } else if (!arguments.length) {\n          // [syntax 8]\n          this.events = {};\n          this.contexts = [];\n        } else if (isFunction(eventName)) {\n          // [syntax 3]\n          this._offByHandler(eventName);\n        } else if (isObject(eventName)) {\n          // [syntax 4, 5, 6]\n          this._offByObject(eventName, handler);\n        }\n      };\n      /**\n       * Fire custom event\n       * @param {string} eventName - name of custom event\n       */\n\n\n      CustomEvents.prototype.fire = function (eventName) {\n        // eslint-disable-line\n        this.invoke.apply(this, arguments);\n      };\n      /**\n       * Fire a event and returns the result of operation 'boolean AND' with all\n       *  listener's results.\n       *\n       * So, It is different from {@link CustomEvents#fire}.\n       *\n       * In service code, use this as a before event in component level usually\n       *  for notifying that the event is cancelable.\n       * @param {string} eventName - Custom event name\n       * @param {...*} data - Data for event\n       * @returns {boolean} The result of operation 'boolean AND'\n       * @example\n       * var map = new Map();\n       * map.on({\n       *     'beforeZoom': function() {\n       *         // It should cancel the 'zoom' event by some conditions.\n       *         if (that.disabled && this.getState()) {\n       *             return false;\n       *         }\n       *         return true;\n       *     }\n       * });\n       *\n       * if (this.invoke('beforeZoom')) {    // check the result of 'beforeZoom'\n       *     // if true,\n       *     // doSomething\n       * }\n       */\n\n\n      CustomEvents.prototype.invoke = function (eventName) {\n        var events, args, index, item;\n\n        if (!this.hasListener(eventName)) {\n          return true;\n        }\n\n        events = this._safeEvent(eventName);\n        args = Array.prototype.slice.call(arguments, 1);\n        index = 0;\n\n        while (events[index]) {\n          item = events[index];\n\n          if (item.handler.apply(item.context, args) === false) {\n            return false;\n          }\n\n          index += 1;\n        }\n\n        return true;\n      };\n      /**\n       * Return whether at least one of the handlers is registered in the given\n       *  event name.\n       * @param {string} eventName - Custom event name\n       * @returns {boolean} Is there at least one handler in event name?\n       */\n\n\n      CustomEvents.prototype.hasListener = function (eventName) {\n        return this.getListenerLength(eventName) > 0;\n      };\n      /**\n       * Return a count of events registered.\n       * @param {string} eventName - Custom event name\n       * @returns {number} number of event\n       */\n\n\n      CustomEvents.prototype.getListenerLength = function (eventName) {\n        var events = this._safeEvent(eventName);\n\n        return events.length;\n      };\n\n      module.exports = CustomEvents;\n      /***/\n    },\n    /* 9 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview\n       * This module provides a function to make a constructor\n       * that can inherit from the other constructors like the CLASS easily.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var inherit = __webpack_require__(27);\n\n      var extend = __webpack_require__(1);\n      /**\n       * @module defineClass\n       */\n\n      /**\n       * Help a constructor to be defined and to inherit from the other constructors\n       * @param {*} [parent] Parent constructor\n       * @param {Object} props Members of constructor\n       *  @param {Function} props.init Initialization method\n       *  @param {Object} [props.static] Static members of constructor\n       * @returns {*} Constructor\n       * @memberof module:defineClass\n       * @example\n       * var defineClass = require('tui-code-snippet/defineClass/defineClass'); // node, commonjs\n       *\n       * //-- #2. Use property --//\n       * var Parent = defineClass({\n       *     init: function() { // constuructor\n       *         this.name = 'made by def';\n       *     },\n       *     method: function() {\n       *         // ...\n       *     },\n       *     static: {\n       *         staticMethod: function() {\n       *              // ...\n       *         }\n       *     }\n       * });\n       *\n       * var Child = defineClass(Parent, {\n       *     childMethod: function() {}\n       * });\n       *\n       * Parent.staticMethod();\n       *\n       * var parentInstance = new Parent();\n       * console.log(parentInstance.name); //made by def\n       * parentInstance.staticMethod(); // Error\n       *\n       * var childInstance = new Child();\n       * childInstance.method();\n       * childInstance.childMethod();\n       */\n\n\n      function defineClass(parent, props) {\n        var obj;\n\n        if (!props) {\n          props = parent;\n          parent = null;\n        }\n\n        obj = props.init || function () {};\n\n        if (parent) {\n          inherit(obj, parent);\n        }\n\n        if (props.hasOwnProperty('static')) {\n          extend(obj, props['static']);\n          delete props['static'];\n        }\n\n        extend(obj.prototype, props);\n        return obj;\n      }\n\n      module.exports = defineClass;\n      /***/\n    },\n    /* 10 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Bind DOM events\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var isString = __webpack_require__(6);\n\n      var forEach = __webpack_require__(4);\n\n      var safeEvent = __webpack_require__(17);\n      /**\n       * Bind DOM events.\n       * @param {HTMLElement} element - element to bind events\n       * @param {(string|object)} types - Space splitted events names or eventName:handler object\n       * @param {(function|object)} handler - handler function or context for handler method\n       * @param {object} [context] context - context for handler method.\n       * @memberof module:domEvent\n       * @example\n       * var div = document.querySelector('div');\n       * \n       * // Bind one event to an element.\n       * on(div, 'click', toggle);\n       * \n       * // Bind multiple events with a same handler to multiple elements at once.\n       * // Use event names splitted by a space.\n       * on(div, 'mouseenter mouseleave', changeColor);\n       * \n       * // Bind multiple events with different handlers to an element at once.\n       * // Use an object which of key is an event name and value is a handler function.\n       * on(div, {\n       *   keydown: highlight,\n       *   keyup: dehighlight\n       * });\n       * \n       * // Set a context for handler method.\n       * var name = 'global';\n       * var repository = {name: 'CodeSnippet'};\n       * on(div, 'drag', function() {\n       *  console.log(this.name);\n       * }, repository);\n       * // Result when you drag a div: \"CodeSnippet\"\n       */\n\n\n      function on(element, types, handler, context) {\n        if (isString(types)) {\n          forEach(types.split(/\\s+/g), function (type) {\n            bindEvent(element, type, handler, context);\n          });\n          return;\n        }\n\n        forEach(types, function (func, type) {\n          bindEvent(element, type, func, handler);\n        });\n      }\n      /**\n       * Bind DOM events\n       * @param {HTMLElement} element - element to bind events\n       * @param {string} type - events name\n       * @param {function} handler - handler function or context for handler method\n       * @param {object} [context] context - context for handler method.\n       * @private\n       */\n\n\n      function bindEvent(element, type, handler, context) {\n        /**\n           * Event handler\n           * @param {Event} e - event object\n           */\n        function eventHandler(e) {\n          handler.call(context || element, e || window.event);\n        }\n\n        if ('addEventListener' in element) {\n          element.addEventListener(type, eventHandler);\n        } else if ('attachEvent' in element) {\n          element.attachEvent('on' + type, eventHandler);\n        }\n\n        memorizeHandler(element, type, handler, eventHandler);\n      }\n      /**\n       * Memorize DOM event handler for unbinding.\n       * @param {HTMLElement} element - element to bind events\n       * @param {string} type - events name\n       * @param {function} handler - handler function that user passed at on() use\n       * @param {function} wrappedHandler - handler function that wrapped by domevent for implementing some features\n       * @private\n       */\n\n\n      function memorizeHandler(element, type, handler, wrappedHandler) {\n        var events = safeEvent(element, type);\n        var existInEvents = false;\n        forEach(events, function (obj) {\n          if (obj.handler === handler) {\n            existInEvents = true;\n            return false;\n          }\n\n          return true;\n        });\n\n        if (!existInEvents) {\n          events.push({\n            handler: handler,\n            wrappedHandler: wrappedHandler\n          });\n        }\n      }\n\n      module.exports = on;\n      /***/\n    },\n    /* 11 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Unbind DOM events\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var isString = __webpack_require__(6);\n\n      var forEach = __webpack_require__(4);\n\n      var safeEvent = __webpack_require__(17);\n      /**\n       * Unbind DOM events\n       * If a handler function is not passed, remove all events of that type.\n       * @param {HTMLElement} element - element to unbind events\n       * @param {(string|object)} types - Space splitted events names or eventName:handler object\n       * @param {function} [handler] - handler function\n       * @memberof module:domEvent\n       * @example\n       * // Following the example of domEvent#on\n       * \n       * // Unbind one event from an element.\n       * off(div, 'click', toggle);\n       * \n       * // Unbind multiple events with a same handler from multiple elements at once.\n       * // Use event names splitted by a space.\n       * off(element, 'mouseenter mouseleave', changeColor);\n       * \n       * // Unbind multiple events with different handlers from an element at once.\n       * // Use an object which of key is an event name and value is a handler function.\n       * off(div, {\n       *   keydown: highlight,\n       *   keyup: dehighlight\n       * });\n       * \n       * // Unbind events without handlers.\n       * off(div, 'drag');\n       */\n\n\n      function off(element, types, handler) {\n        if (isString(types)) {\n          forEach(types.split(/\\s+/g), function (type) {\n            unbindEvent(element, type, handler);\n          });\n          return;\n        }\n\n        forEach(types, function (func, type) {\n          unbindEvent(element, type, func);\n        });\n      }\n      /**\n       * Unbind DOM events\n       * If a handler function is not passed, remove all events of that type.\n       * @param {HTMLElement} element - element to unbind events\n       * @param {string} type - events name\n       * @param {function} [handler] - handler function\n       * @private\n       */\n\n\n      function unbindEvent(element, type, handler) {\n        var events = safeEvent(element, type);\n        var index;\n\n        if (!handler) {\n          forEach(events, function (item) {\n            removeHandler(element, type, item.wrappedHandler);\n          });\n          events.splice(0, events.length);\n        } else {\n          forEach(events, function (item, idx) {\n            if (handler === item.handler) {\n              removeHandler(element, type, item.wrappedHandler);\n              index = idx;\n              return false;\n            }\n\n            return true;\n          });\n          events.splice(index, 1);\n        }\n      }\n      /**\n       * Remove an event handler\n       * @param {HTMLElement} element - An element to remove an event\n       * @param {string} type - event type\n       * @param {function} handler - event handler\n       * @private\n       */\n\n\n      function removeHandler(element, type, handler) {\n        if ('removeEventListener' in element) {\n          element.removeEventListener(type, handler);\n        } else if ('detachEvent' in element) {\n          element.detachEvent('on' + type, handler);\n        }\n      }\n\n      module.exports = off;\n      /***/\n    },\n    /* 12 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Find parent element recursively\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var matches = __webpack_require__(30);\n      /**\n       * Find parent element recursively\n       * @param {HTMLElement} element - base element to start find\n       * @param {string} selector - selector string for find\n       * @returns {HTMLElement} - element finded or null\n       * @memberof module:domUtil\n       */\n\n\n      function closest(element, selector) {\n        var parent = element.parentNode;\n\n        if (matches(element, selector)) {\n          return element;\n        }\n\n        while (parent && parent !== document) {\n          if (matches(parent, selector)) {\n            return parent;\n          }\n\n          parent = parent.parentNode;\n        }\n\n        return null;\n      }\n\n      module.exports = closest;\n      /***/\n    },\n    /* 13 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Remove element from parent node.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Remove element from parent node.\n       * @param {HTMLElement} element - element to remove.\n       * @memberof module:domUtil\n       */\n\n      function removeElement(element) {\n        if (element && element.parentNode) {\n          element.parentNode.removeChild(element);\n        }\n      }\n\n      module.exports = removeElement;\n      /***/\n    },\n    /* 14 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Check whether the given variable is a instance of HTMLNode or not.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Check whether the given variable is a instance of HTMLNode or not.\n       * If the given variables is a instance of HTMLNode, return true.\n       * @param {*} html - Target for checking\n       * @returns {boolean} Is HTMLNode ?\n       * @memberof module:type\n       */\n\n      function isHTMLNode(html) {\n        if (typeof HTMLElement === 'object') {\n          return html && (html instanceof HTMLElement || !!html.nodeType);\n        }\n\n        return !!(html && html.nodeType);\n      }\n\n      module.exports = isHTMLNode;\n      /***/\n    },\n    /* 15 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Utils for Timepicker component\n       * @author NHN. FE dev Lab. <dl_javascript@nhn.com>\n       */\n\n      var inArray = __webpack_require__(0);\n\n      var sendHostname = __webpack_require__(35);\n\n      var uniqueId = 0;\n      /**\n       * Utils\n       * @namespace util\n       * @ignore\n       */\n\n      var utils = {\n        /**\n         * Returns unique id\n         * @returns {number}\n         */\n        getUniqueId: function getUniqueId() {\n          uniqueId += 1;\n          return uniqueId;\n        },\n\n        /**\n         * Convert a value to meet the format\n         * @param {number|string} value \n         * @param {string} format - ex) hh, h, mm, m\n         * @returns {string}\n         */\n        formatTime: function formatTime(value, format) {\n          var PADDING_ZERO_TYPES = ['hh', 'mm'];\n          value = String(value);\n          return inArray(format, PADDING_ZERO_TYPES) >= 0 && value.length === 1 ? '0' + value : value;\n        },\n\n        /**\n         * Get meridiem hour\n         * @param {number} hour - Original hour\n         * @returns {number} Converted meridiem hour\n         */\n        getMeridiemHour: function getMeridiemHour(hour) {\n          hour %= 12;\n\n          if (hour === 0) {\n            hour = 12;\n          }\n\n          return hour;\n        },\n\n        /**\n         * Returns range arr\n         * @param {number} start - Start value\n         * @param {number} end - End value\n         * @param {number} [step] - Step value\n         * @returns {Array}\n         */\n        getRangeArr: function getRangeArr(start, end, step) {\n          var arr = [];\n          var i;\n          step = step || 1;\n\n          if (start > end) {\n            for (i = end; i >= start; i -= step) {\n              arr.push(i);\n            }\n          } else {\n            for (i = start; i <= end; i += step) {\n              arr.push(i);\n            }\n          }\n\n          return arr;\n        },\n\n        /**\n         * Get a target element\n         * @param {Event} ev Event object\n         * @returns {HTMLElement} An event target element\n         */\n        getTarget: function getTarget(ev) {\n          return ev.target || ev.srcElement;\n        },\n\n        /**\n         * send host name\n         * @ignore\n         */\n        sendHostName: function sendHostName() {\n          sendHostname('time-picker', 'UA-129987462-1');\n        }\n      };\n      module.exports = utils;\n      /***/\n    },\n    /* 16 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Execute the provided callback once for each property of object which actually exist.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Execute the provided callback once for each property of object which actually exist.\n       * If the callback function returns false, the loop will be stopped.\n       * Callback function(iteratee) is invoked with three arguments:\n       *  1) The value of the property\n       *  2) The name of the property\n       *  3) The object being traversed\n       * @param {Object} obj The object that will be traversed\n       * @param {function} iteratee  Callback function\n       * @param {Object} [context] Context(this) of callback function\n       * @memberof module:collection\n       * @example\n       * var forEachOwnProperties = require('tui-code-snippet/collection/forEachOwnProperties'); // node, commonjs\n       *\n       * var sum = 0;\n       *\n       * forEachOwnProperties({a:1,b:2,c:3}, function(value){\n       *     sum += value;\n       * });\n       * alert(sum); // 6\n       */\n\n      function forEachOwnProperties(obj, iteratee, context) {\n        var key;\n        context = context || null;\n\n        for (key in obj) {\n          if (obj.hasOwnProperty(key)) {\n            if (iteratee.call(context, obj[key], key, obj) === false) {\n              break;\n            }\n          }\n        }\n      }\n\n      module.exports = forEachOwnProperties;\n      /***/\n    },\n    /* 17 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Get event collection for specific HTML element\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var EVENT_KEY = '_feEventKey';\n      /**\n       * Get event collection for specific HTML element\n       * @param {HTMLElement} element - HTML element\n       * @param {string} type - event type\n       * @returns {array}\n       * @private\n       */\n\n      function safeEvent(element, type) {\n        var events = element[EVENT_KEY];\n        var handlers;\n\n        if (!events) {\n          events = element[EVENT_KEY] = {};\n        }\n\n        handlers = events[type];\n\n        if (!handlers) {\n          handlers = events[type] = [];\n        }\n\n        return handlers;\n      }\n\n      module.exports = safeEvent;\n      /***/\n    },\n    /* 18 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Get HTML element's design classes.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var isUndefined = __webpack_require__(5);\n      /**\n       * Get HTML element's design classes.\n       * @param {(HTMLElement|SVGElement)} element target element\n       * @returns {string} element css class name\n       * @memberof module:domUtil\n       */\n\n\n      function getClass(element) {\n        if (!element || !element.className) {\n          return '';\n        }\n\n        if (isUndefined(element.className.baseVal)) {\n          return element.className;\n        }\n\n        return element.className.baseVal;\n      }\n\n      module.exports = getClass;\n      /***/\n    },\n    /* 19 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Set className value\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var isArray = __webpack_require__(2);\n\n      var isUndefined = __webpack_require__(5);\n      /**\n       * Set className value\n       * @param {(HTMLElement|SVGElement)} element - target element\n       * @param {(string|string[])} cssClass - class names\n       * @private\n       */\n\n\n      function setClassName(element, cssClass) {\n        cssClass = isArray(cssClass) ? cssClass.join(' ') : cssClass;\n        cssClass = cssClass.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n        if (isUndefined(element.className.baseVal)) {\n          element.className = cssClass;\n          return;\n        }\n\n        element.className.baseVal = cssClass;\n      }\n\n      module.exports = setClassName;\n      /***/\n    },\n    /* 20 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview The entry file of TimePicker components\n       * @author NHN. FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      __webpack_require__(21);\n\n      module.exports = __webpack_require__(22);\n      /***/\n    },\n    /* 21 */\n\n    /***/\n    function (module, exports, __webpack_require__) {// extracted by mini-css-extract-plugin\n\n      /***/\n    },\n    /* 22 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview TimePicker component\n       * @author NHN. FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var inArray = __webpack_require__(0);\n\n      var forEachArray = __webpack_require__(3);\n\n      var CustomEvents = __webpack_require__(8);\n\n      var defineClass = __webpack_require__(9);\n\n      var extend = __webpack_require__(1);\n\n      var on = __webpack_require__(10);\n\n      var off = __webpack_require__(11);\n\n      var addClass = __webpack_require__(29);\n\n      var closest = __webpack_require__(12);\n\n      var removeElement = __webpack_require__(13);\n\n      var removeClass = __webpack_require__(32);\n\n      var isHTMLNode = __webpack_require__(14);\n\n      var isNumber = __webpack_require__(33);\n\n      var Spinbox = __webpack_require__(34);\n\n      var Selectbox = __webpack_require__(38);\n\n      var util = __webpack_require__(15);\n\n      var localeTexts = __webpack_require__(40);\n\n      var tmpl = __webpack_require__(41);\n\n      var meridiemTmpl = __webpack_require__(42);\n\n      var SELECTOR_HOUR_ELEMENT = '.tui-timepicker-hour';\n      var SELECTOR_MINUTE_ELEMENT = '.tui-timepicker-minute';\n      var SELECTOR_MERIDIEM_ELEMENT = '.tui-timepicker-meridiem';\n      var CLASS_NAME_LEFT_MERIDIEM = 'tui-has-left';\n      var CLASS_NAME_HIDDEN = 'tui-hidden';\n      var CLASS_NAME_CHECKED = 'tui-timepicker-meridiem-checked';\n      var INPUT_TYPE_SPINBOX = 'spinbox';\n      var INPUT_TYPE_SELECTBOX = 'selectbox';\n      /**\n       * Merge default options\n       * @ignore\n       * @param {object} options - options\n       * @returns {object} Merged options\n       */\n\n      var mergeDefaultOptions = function mergeDefaultOptions(options) {\n        return extend({\n          language: 'en',\n          initialHour: 0,\n          initialMinute: 0,\n          showMeridiem: true,\n          inputType: 'selectbox',\n          hourStep: 1,\n          minuteStep: 1,\n          meridiemPosition: 'right',\n          format: 'h:m',\n          disabledHours: [],\n          usageStatistics: true\n        }, options);\n      };\n      /**\n       * @class\n       * @param {string|HTMLElement} container - Container element or selector\n       * @param {Object} [options] - Options for initialization\n       * @param {number} [options.initialHour = 0] - Initial setting value of hour\n       * @param {number} [options.initialMinute = 0] - Initial setting value of minute\n       * @param {number} [options.hourStep = 1] - Step value of hour\n       * @param {number} [options.minuteStep = 1] - Step value of minute\n       * @param {string} [options.inputType = 'selectbox'] - 'selectbox' or 'spinbox'\n       * @param {string} [options.format = 'h:m'] - hour, minute format for display\n       * @param {boolean} [options.showMeridiem = true] - Show meridiem expression?\n       * @param {Array} [options.disabledHours = []] - Registered Hours is disabled.\n       * @param {string} [options.meridiemPosition = 'right'] - Set location of the meridiem element.\n       *                 If this option set 'left', the meridiem element is created in front of the hour element.\n       * @param {string} [options.language = 'en'] Set locale texts\n       * @param {Boolean} [options.usageStatistics=true|false] send hostname to google analytics [default value is true]\n       * @example\n       * var timepicker = new tui.TimePicker('#timepicker-container', {\n       *     initialHour: 15,\n       *     initialMinute: 13,\n       *     inputType: 'selectbox',\n       *     showMeridiem: false\n       * });\n       */\n\n\n      var TimePicker = defineClass(\n      /** @lends TimePicker.prototype */\n      {\n        static: {\n          /**\n           * Locale text data\n           * @type {object}\n           * @memberof TimePicker\n           * @static\n           * @example\n           * var TimePicker = tui.TimePicker; // or require('tui-time-picker');\n           *\n           * TimePicker.localeTexts['customKey'] = {\n           *     am: 'a.m.',\n           *     pm: 'p.m.'\n           * };\n           *\n           * var instance = new tui.TimePicker('#timepicker-container', {\n           *     language: 'customKey',\n           * });\n           */\n          localeTexts: localeTexts\n        },\n        init: function init(container, options) {\n          options = mergeDefaultOptions(options);\n          /**\n           * @type {number}\n           * @private\n           */\n\n          this._id = util.getUniqueId();\n          /**\n           * @type {HTMLElement}\n           * @private\n           */\n\n          this._container = isHTMLNode(container) ? container : document.querySelector(container);\n          /**\n           * @type {HTMLElement}\n           * @private\n           */\n\n          this._element = null;\n          /**\n           * @type {HTMLElement}\n           * @private\n           */\n\n          this._meridiemElement = null;\n          /**\n           * @type {HTMLElement}\n           * @private\n           */\n\n          this._amEl = null;\n          /**\n           * @type {HTMLElement}\n           * @private\n           */\n\n          this._pmEl = null;\n          /**\n           * @type {boolean}\n           * @private\n           */\n\n          this._showMeridiem = options.showMeridiem;\n          /**\n           * Meridiem postion\n           * @type {'left'|'right'}\n           * @private\n           */\n\n          this._meridiemPosition = options.meridiemPosition;\n          /**\n           * @type {Spinbox|Selectbox}\n           * @private\n           */\n\n          this._hourInput = null;\n          /**\n           * @type {Spinbox|Selectbox}\n           * @private\n           */\n\n          this._minuteInput = null;\n          /**\n           * @type {number}\n           * @private\n           */\n\n          this._hour = options.initialHour;\n          /**\n           * @type {number}\n           * @private\n           */\n\n          this._minute = options.initialMinute;\n          /**\n           * @type {number}\n           * @private\n           */\n\n          this._hourStep = options.hourStep;\n          /**\n           * @type {number}\n           * @private\n           */\n\n          this._minuteStep = options.minuteStep;\n          /**\n           * @type {Array}\n           * @private\n           */\n\n          this._disabledHours = options.disabledHours;\n          /**\n           * TimePicker inputType\n           * @type {'spinbox'|'selectbox'}\n           * @private\n           */\n\n          this._inputType = options.inputType;\n          /**\n           * Locale text for meridiem\n           * @type {string}\n           * @private\n           */\n\n          this._localeText = localeTexts[options.language];\n          /**\n           * Time format for output\n           * @type {string}\n           * @private\n           */\n\n          this._format = this._getValidTimeFormat(options.format);\n\n          this._render();\n\n          this._setEvents();\n\n          if (options.usageStatistics) {\n            util.sendHostName();\n          }\n        },\n\n        /**\n         * Set event handlers to selectors, container\n         * @private\n         */\n        _setEvents: function _setEvents() {\n          this._hourInput.on('change', this._onChangeTimeInput, this);\n\n          this._minuteInput.on('change', this._onChangeTimeInput, this);\n\n          if (this._showMeridiem) {\n            if (this._inputType === INPUT_TYPE_SELECTBOX) {\n              on(this._meridiemElement.querySelector('select'), 'change', this._onChangeMeridiem, this);\n            } else if (this._inputType === INPUT_TYPE_SPINBOX) {\n              on(this._meridiemElement, 'click', this._onChangeMeridiem, this);\n            }\n          }\n        },\n\n        /**\n         * Remove events\n         * @private\n         */\n        _removeEvents: function _removeEvents() {\n          this.off();\n\n          this._hourInput.destroy();\n\n          this._minuteInput.destroy();\n\n          if (this._showMeridiem) {\n            if (this._inputType === INPUT_TYPE_SELECTBOX) {\n              off(this._meridiemElement.querySelector('select'), 'change', this._onChangeMeridiem, this);\n            } else if (this._inputType === INPUT_TYPE_SPINBOX) {\n              off(this._meridiemElement, 'click', this._onChangeMeridiem, this);\n            }\n          }\n        },\n\n        /**\n         * Render element\n         * @private\n         */\n        _render: function _render() {\n          var context = {\n            showMeridiem: this._showMeridiem,\n            isSpinbox: this._inputType === 'spinbox'\n          };\n\n          if (this._showMeridiem) {\n            extend(context, {\n              meridiemElement: this._makeMeridiemHTML()\n            });\n          }\n\n          if (this._element) {\n            removeElement(this._element);\n          }\n\n          this._container.innerHTML = tmpl(context);\n          this._element = this._container.firstChild;\n\n          this._renderTimeInputs();\n\n          if (this._showMeridiem) {\n            this._setMeridiemElement();\n          }\n        },\n\n        /**\n         * Set meridiem element on timepicker\n         * @private\n         */\n        _setMeridiemElement: function _setMeridiemElement() {\n          if (this._meridiemPosition === 'left') {\n            addClass(this._element, CLASS_NAME_LEFT_MERIDIEM);\n          }\n\n          this._meridiemElement = this._element.querySelector(SELECTOR_MERIDIEM_ELEMENT);\n          this._amEl = this._meridiemElement.querySelector('[value=\"AM\"]');\n          this._pmEl = this._meridiemElement.querySelector('[value=\"PM\"]');\n\n          this._syncToMeridiemElements();\n        },\n\n        /**\n         * Make html for meridiem element\n         * @returns {HTMLElement} Meridiem element\n         * @private\n         */\n        _makeMeridiemHTML: function _makeMeridiemHTML() {\n          var localeText = this._localeText;\n          return meridiemTmpl({\n            am: localeText.am,\n            pm: localeText.pm,\n            radioId: this._id,\n            isSpinbox: this._inputType === 'spinbox'\n          });\n        },\n\n        /**\n         * Render time selectors\n         * @private\n         */\n        _renderTimeInputs: function _renderTimeInputs() {\n          var hour = this._hour;\n          var showMeridiem = this._showMeridiem;\n\n          var hourElement = this._element.querySelector(SELECTOR_HOUR_ELEMENT);\n\n          var minuteElement = this._element.querySelector(SELECTOR_MINUTE_ELEMENT);\n\n          var BoxComponent = this._inputType.toLowerCase() === 'selectbox' ? Selectbox : Spinbox;\n\n          var formatExplode = this._format.split(':');\n\n          var hourItems = this._getHourItems();\n\n          if (showMeridiem) {\n            hour = util.getMeridiemHour(hour);\n          }\n\n          this._hourInput = new BoxComponent(hourElement, {\n            initialValue: hour,\n            items: hourItems,\n            format: formatExplode[0],\n            disabledItems: this._makeDisabledStatItems(hourItems)\n          });\n          this._minuteInput = new BoxComponent(minuteElement, {\n            initialValue: this._minute,\n            items: this._getMinuteItems(),\n            format: formatExplode[1]\n          });\n        },\n        _makeDisabledStatItems: function _makeDisabledStatItems(hourItems) {\n          var result = [];\n\n          var disabledHours = this._disabledHours.concat();\n\n          if (this._showMeridiem) {\n            disabledHours = this._meridiemableTime(disabledHours);\n          }\n\n          forEachArray(hourItems, function (hour) {\n            result.push(inArray(hour, disabledHours) >= 0);\n          });\n          return result;\n        },\n        _meridiemableTime: function _meridiemableTime(disabledHours) {\n          var diffHour = 0;\n          var startHour = 0;\n          var endHour = 11;\n          var result = [];\n\n          if (this._hour >= 12) {\n            diffHour = 12;\n            startHour = 12;\n            endHour = 23;\n          }\n\n          forEachArray(disabledHours, function (hour) {\n            if (hour >= startHour && hour <= endHour) {\n              result.push(hour - diffHour === 0 ? 12 : hour - diffHour);\n            }\n          });\n          return result;\n        },\n\n        /**\n         * Return formatted format.\n         * @param {string} format - format option\n         * @returns {string}\n         * @private\n         */\n        _getValidTimeFormat: function _getValidTimeFormat(format) {\n          if (!format.match(/^[h]{1,2}:[m]{1,2}$/i)) {\n            return 'h:m';\n          }\n\n          return format.toLowerCase();\n        },\n\n        /**\n         * Initialize meridiem elements\n         * @private\n         */\n        _syncToMeridiemElements: function _syncToMeridiemElements() {\n          var selectedEl = this._hour >= 12 ? this._pmEl : this._amEl;\n          var notSelectedEl = selectedEl === this._pmEl ? this._amEl : this._pmEl;\n          selectedEl.setAttribute('selected', true);\n          selectedEl.setAttribute('checked', true);\n          addClass(selectedEl, CLASS_NAME_CHECKED);\n          notSelectedEl.removeAttribute('selected');\n          notSelectedEl.removeAttribute('checked');\n          removeClass(notSelectedEl, CLASS_NAME_CHECKED);\n        },\n\n        /**\n         * Set values in spinboxes from time\n         * @private\n         */\n        _syncToInputs: function _syncToInputs() {\n          var hour = this._hour;\n          var minute = this._minute;\n\n          if (this._showMeridiem) {\n            hour = util.getMeridiemHour(hour);\n          }\n\n          this._hourInput.setValue(hour);\n\n          this._minuteInput.setValue(minute);\n        },\n\n        /**\n         * DOM event handler\n         * @param {Event} ev - Change event on meridiem element\n         * @private\n         */\n        _onChangeMeridiem: function _onChangeMeridiem(ev) {\n          var hour = this._hour;\n          var target = util.getTarget(ev);\n\n          if (target.value && closest(target, SELECTOR_MERIDIEM_ELEMENT)) {\n            hour = this._to24Hour(target.value === 'PM', hour);\n            this.setTime(hour, this._minute);\n\n            this._setDisabledHours();\n          }\n        },\n\n        /**\n         * Time change event handler\n         * @private\n         */\n        _onChangeTimeInput: function _onChangeTimeInput() {\n          var hour = this._hourInput.getValue();\n\n          var minute = this._minuteInput.getValue();\n\n          var isPM = this._hour >= 12;\n\n          if (this._showMeridiem) {\n            hour = this._to24Hour(isPM, hour);\n          }\n\n          this.setTime(hour, minute);\n        },\n\n        /**\n         * 12Hour-expression to 24Hour-expression\n         * @param {boolean} isPM - Is pm?\n         * @param {number} hour - Hour\n         * @returns {number}\n         * @private\n         */\n        _to24Hour: function _to24Hour(isPM, hour) {\n          hour %= 12;\n\n          if (isPM) {\n            hour += 12;\n          }\n\n          return hour;\n        },\n        _setDisabledHours: function _setDisabledHours() {\n          var hourItems = this._getHourItems();\n\n          var disabledItems = this._makeDisabledStatItems(hourItems);\n\n          this._hourInput.setDisabledItems(disabledItems);\n        },\n\n        /**\n         * Get items of hour\n         * @returns {array} Hour item list\n         * @private\n         */\n        _getHourItems: function _getHourItems() {\n          var step = this._hourStep;\n          return this._showMeridiem ? util.getRangeArr(1, 12, step) : util.getRangeArr(0, 23, step);\n        },\n\n        /**\n         * Get items of minute\n         * @returns {array} Minute item list\n         * @private\n         */\n        _getMinuteItems: function _getMinuteItems() {\n          return util.getRangeArr(0, 59, this._minuteStep);\n        },\n\n        /**\n         * Whether the hour and minute are in valid items or not\n         * @param {number} hour - Hour value\n         * @param {number} minute - Minute value\n         * @returns {boolean} State\n         * @private\n         */\n        _validItems: function _validItems(hour, minute) {\n          if (!isNumber(hour) || !isNumber(minute)) {\n            return false;\n          }\n\n          if (this._showMeridiem) {\n            hour = util.getMeridiemHour(hour);\n          }\n\n          return inArray(hour, this._getHourItems()) > -1 && inArray(minute, this._getMinuteItems()) > -1;\n        },\n\n        /**\n         * Set step of hour\n         * @param {array} step - Step to create items of hour\n         */\n        setHourStep: function setHourStep(step) {\n          this._hourStep = step;\n\n          this._hourInput.fire('changeItems', this._getHourItems());\n        },\n\n        /**\n         * Get step of hour\n         * @returns {number} Step of hour\n         */\n        getHourStep: function getHourStep() {\n          return this._hourStep;\n        },\n\n        /**\n         * Set step of minute\n         * @param {array} step - Step to create items of minute\n         */\n        setMinuteStep: function setMinuteStep(step) {\n          this._minuteStep = step;\n\n          this._minuteInput.fire('changeItems', this._getMinuteItems());\n        },\n\n        /**\n         * Get step of minute\n         * @returns {number} Step of minute\n         */\n        getMinuteStep: function getMinuteStep() {\n          return this._minuteStep;\n        },\n\n        /**\n         * Show time picker element\n         */\n        show: function show() {\n          removeClass(this._element, CLASS_NAME_HIDDEN);\n        },\n\n        /**\n         * Hide time picker element\n         */\n        hide: function hide() {\n          addClass(this._element, CLASS_NAME_HIDDEN);\n        },\n\n        /**\n         * Set hour\n         * @param {number} hour for time picker - (0~23)\n         * @returns {boolean} result of set time\n         */\n        setHour: function setHour(hour) {\n          return this.setTime(hour, this._minute);\n        },\n\n        /**\n         * Set minute\n         * @param {number} minute for time picker\n         * @returns {boolean} result of set time\n         */\n        setMinute: function setMinute(minute) {\n          return this.setTime(this._hour, minute);\n        },\n\n        /**\n         * Set time\n         * @param {number} hour for time picker - (0~23)\n         * @param {number} minute for time picker\n         */\n        setTime: function setTime(hour, minute) {\n          if (!this._validItems(hour, minute)) {\n            return;\n          }\n\n          this._hour = hour;\n          this._minute = minute;\n\n          this._syncToInputs();\n\n          if (this._showMeridiem) {\n            this._syncToMeridiemElements();\n          }\n          /**\n           * Change event - TimePicker\n           * @event TimePicker#change\n           */\n\n\n          this.fire('change', {\n            hour: this._hour,\n            minute: this._minute\n          });\n        },\n\n        /**\n         * Get hour\n         * @returns {number} hour - (0~23)\n         */\n        getHour: function getHour() {\n          return this._hour;\n        },\n\n        /**\n         * Get minute\n         * @returns {number} minute\n         */\n        getMinute: function getMinute() {\n          return this._minute;\n        },\n\n        /**\n         * Change locale text of meridiem by language code\n         * @param {string} language - Language code\n         */\n        changeLanguage: function changeLanguage(language) {\n          this._localeText = localeTexts[language];\n\n          this._render();\n        },\n\n        /**\n         * Destroy\n         */\n        destroy: function destroy() {\n          this._removeEvents();\n\n          removeElement(this._element);\n          this._container = this._showMeridiem = this._hourInput = this._minuteInput = this._hour = this._minute = this._inputType = this._element = this._meridiemElement = this._amEl = this._pmEl = null;\n        }\n      });\n      CustomEvents.mixin(TimePicker);\n      module.exports = TimePicker;\n      /***/\n    },\n    /* 23 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Check whether the given variable is existing or not.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var isUndefined = __webpack_require__(5);\n\n      var isNull = __webpack_require__(24);\n      /**\n       * Check whether the given variable is existing or not.\n       * If the given variable is not null and not undefined, returns true.\n       * @param {*} param - Target for checking\n       * @returns {boolean} Is existy?\n       * @memberof module:type\n       * @example\n       * var isExisty = require('tui-code-snippet/type/isExisty'); // node, commonjs\n       *\n       * isExisty(''); //true\n       * isExisty(0); //true\n       * isExisty([]); //true\n       * isExisty({}); //true\n       * isExisty(null); //false\n       * isExisty(undefined); //false\n      */\n\n\n      function isExisty(param) {\n        return !isUndefined(param) && !isNull(param);\n      }\n\n      module.exports = isExisty;\n      /***/\n    },\n    /* 24 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Check whether the given variable is null or not.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Check whether the given variable is null or not.\n       * If the given variable(arguments[0]) is null, returns true.\n       * @param {*} obj - Target for checking\n       * @returns {boolean} Is null?\n       * @memberof module:type\n       */\n\n      function isNull(obj) {\n        return obj === null;\n      }\n\n      module.exports = isNull;\n      /***/\n    },\n    /* 25 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Check whether the given variable is an object or not.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Check whether the given variable is an object or not.\n       * If the given variable is an object, return true.\n       * @param {*} obj - Target for checking\n       * @returns {boolean} Is object?\n       * @memberof module:type\n       */\n\n      function isObject(obj) {\n        return obj === Object(obj);\n      }\n\n      module.exports = isObject;\n      /***/\n    },\n    /* 26 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Check whether the given variable is a function or not.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Check whether the given variable is a function or not.\n       * If the given variable is a function, return true.\n       * @param {*} obj - Target for checking\n       * @returns {boolean} Is function?\n       * @memberof module:type\n       */\n\n      function isFunction(obj) {\n        return obj instanceof Function;\n      }\n\n      module.exports = isFunction;\n      /***/\n    },\n    /* 27 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Provide a simple inheritance in prototype-oriented.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var createObject = __webpack_require__(28);\n      /**\n       * Provide a simple inheritance in prototype-oriented.\n       * Caution :\n       *  Don't overwrite the prototype of child constructor.\n       *\n       * @param {function} subType Child constructor\n       * @param {function} superType Parent constructor\n       * @memberof module:inheritance\n       * @example\n       * var inherit = require('tui-code-snippet/inheritance/inherit'); // node, commonjs\n       *\n       * // Parent constructor\n       * function Animal(leg) {\n       *     this.leg = leg;\n       * }\n       * Animal.prototype.growl = function() {\n       *     // ...\n       * };\n       *\n       * // Child constructor\n       * function Person(name) {\n       *     this.name = name;\n       * }\n       *\n       * // Inheritance\n       * inherit(Person, Animal);\n       *\n       * // After this inheritance, please use only the extending of property.\n       * // Do not overwrite prototype.\n       * Person.prototype.walk = function(direction) {\n       *     // ...\n       * };\n       */\n\n\n      function inherit(subType, superType) {\n        var prototype = createObject(superType.prototype);\n        prototype.constructor = subType;\n        subType.prototype = prototype;\n      }\n\n      module.exports = inherit;\n      /***/\n    },\n    /* 28 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Create a new object with the specified prototype object and properties.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * @module inheritance\n       */\n\n      /**\n       * Create a new object with the specified prototype object and properties.\n       * @param {Object} obj This object will be a prototype of the newly-created object.\n       * @returns {Object}\n       * @memberof module:inheritance\n       */\n\n      function createObject(obj) {\n        function F() {} // eslint-disable-line require-jsdoc\n\n\n        F.prototype = obj;\n        return new F();\n      }\n\n      module.exports = createObject;\n      /***/\n    },\n    /* 29 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Add css class to element\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var forEach = __webpack_require__(4);\n\n      var inArray = __webpack_require__(0);\n\n      var getClass = __webpack_require__(18);\n\n      var setClassName = __webpack_require__(19);\n      /**\n       * domUtil module\n       * @module domUtil\n       */\n\n      /**\n       * Add css class to element\n       * @param {(HTMLElement|SVGElement)} element - target element\n       * @param {...string} cssClass - css classes to add\n       * @memberof module:domUtil\n       */\n\n\n      function addClass(element) {\n        var cssClass = Array.prototype.slice.call(arguments, 1);\n        var classList = element.classList;\n        var newClass = [];\n        var origin;\n\n        if (classList) {\n          forEach(cssClass, function (name) {\n            element.classList.add(name);\n          });\n          return;\n        }\n\n        origin = getClass(element);\n\n        if (origin) {\n          cssClass = [].concat(origin.split(/\\s+/), cssClass);\n        }\n\n        forEach(cssClass, function (cls) {\n          if (inArray(cls, newClass) < 0) {\n            newClass.push(cls);\n          }\n        });\n        setClassName(element, newClass);\n      }\n\n      module.exports = addClass;\n      /***/\n    },\n    /* 30 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Check element match selector\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var inArray = __webpack_require__(0);\n\n      var toArray = __webpack_require__(31);\n\n      var elProto = Element.prototype;\n\n      var matchSelector = elProto.matches || elProto.webkitMatchesSelector || elProto.mozMatchesSelector || elProto.msMatchesSelector || function (selector) {\n        var doc = this.document || this.ownerDocument;\n        return inArray(this, toArray(doc.querySelectorAll(selector))) > -1;\n      };\n      /**\n       * Check element match selector\n       * @param {HTMLElement} element - element to check\n       * @param {string} selector - selector to check\n       * @returns {boolean} is selector matched to element?\n       * @memberof module:domUtil\n       */\n\n\n      function matches(element, selector) {\n        return matchSelector.call(element, selector);\n      }\n\n      module.exports = matches;\n      /***/\n    },\n    /* 31 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Transform the Array-like object to Array.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var forEachArray = __webpack_require__(3);\n      /**\n       * Transform the Array-like object to Array.\n       * In low IE (below 8), Array.prototype.slice.call is not perfect. So, try-catch statement is used.\n       * @param {*} arrayLike Array-like object\n       * @returns {Array} Array\n       * @memberof module:collection\n       * @example\n       * var toArray = require('tui-code-snippet/collection/toArray'); // node, commonjs\n       *\n       * var arrayLike = {\n       *     0: 'one',\n       *     1: 'two',\n       *     2: 'three',\n       *     3: 'four',\n       *     length: 4\n       * };\n       * var result = toArray(arrayLike);\n       *\n       * alert(result instanceof Array); // true\n       * alert(result); // one,two,three,four\n       */\n\n\n      function toArray(arrayLike) {\n        var arr;\n\n        try {\n          arr = Array.prototype.slice.call(arrayLike);\n        } catch (e) {\n          arr = [];\n          forEachArray(arrayLike, function (value) {\n            arr.push(value);\n          });\n        }\n\n        return arr;\n      }\n\n      module.exports = toArray;\n      /***/\n    },\n    /* 32 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Remove css class from element\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var forEachArray = __webpack_require__(3);\n\n      var inArray = __webpack_require__(0);\n\n      var getClass = __webpack_require__(18);\n\n      var setClassName = __webpack_require__(19);\n      /**\n       * Remove css class from element\n       * @param {(HTMLElement|SVGElement)} element - target element\n       * @param {...string} cssClass - css classes to remove\n       * @memberof module:domUtil\n       */\n\n\n      function removeClass(element) {\n        var cssClass = Array.prototype.slice.call(arguments, 1);\n        var classList = element.classList;\n        var origin, newClass;\n\n        if (classList) {\n          forEachArray(cssClass, function (name) {\n            classList.remove(name);\n          });\n          return;\n        }\n\n        origin = getClass(element).split(/\\s+/);\n        newClass = [];\n        forEachArray(origin, function (name) {\n          if (inArray(name, cssClass) < 0) {\n            newClass.push(name);\n          }\n        });\n        setClassName(element, newClass);\n      }\n\n      module.exports = removeClass;\n      /***/\n    },\n    /* 33 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Check whether the given variable is a number or not.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      /**\n       * Check whether the given variable is a number or not.\n       * If the given variable is a number, return true.\n       * @param {*} obj - Target for checking\n       * @returns {boolean} Is number?\n       * @memberof module:type\n       */\n\n      function isNumber(obj) {\n        return typeof obj === 'number' || obj instanceof Number;\n      }\n\n      module.exports = isNumber;\n      /***/\n    },\n    /* 34 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Spinbox (in TimePicker)\n       * @author NHN. FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var inArray = __webpack_require__(0);\n\n      var forEachArray = __webpack_require__(3);\n\n      var CustomEvents = __webpack_require__(8);\n\n      var defineClass = __webpack_require__(9);\n\n      var extend = __webpack_require__(1);\n\n      var on = __webpack_require__(10);\n\n      var off = __webpack_require__(11);\n\n      var closest = __webpack_require__(12);\n\n      var removeElement = __webpack_require__(13);\n\n      var isHTMLNode = __webpack_require__(14);\n\n      var util = __webpack_require__(15);\n\n      var tmpl = __webpack_require__(37);\n\n      var SELECTOR_UP_BUTTON = '.tui-timepicker-btn-up';\n      var SELECTOR_DOWN_BUTTON = '.tui-timepicker-btn-down';\n      /**\n       * @class\n       * @ignore\n       * @param {String|HTMLElement} container - Container of spinbox or selector\n       * @param {Object} [options] - Options for initialization\n       * @param {number} [options.initialValue] - initial setting value\n       * @param {Array.<number>} items - Items\n       */\n\n      var Spinbox = defineClass(\n      /** @lends Spinbox.prototype */\n      {\n        init: function init(container, options) {\n          options = extend({\n            items: []\n          }, options);\n          /**\n           * @type {HTMLElement}\n           * @private\n           */\n\n          this._container = isHTMLNode(container) ? container : document.querySelector(container);\n          /**\n           * Spinbox element\n           * @type {HTMLElement}\n           * @private\n           */\n\n          this._element = null;\n          /**\n           * @type {HTMLElement}\n           * @private\n           */\n\n          this._inputElement = null;\n          /**\n           * Spinbox value items\n           * @type {Array.<number>}\n           * @private\n           */\n\n          this._items = options.items;\n          /**\n           * Selectbox disabled items info\n           * @type {Array.<number>}\n           * @private\n           */\n\n          this._disabledItems = options.disabledItems || [];\n          /**\n           * @type {number}\n           * @private\n           */\n\n          this._selectedIndex = Math.max(0, inArray(options.initialValue, this._items));\n          /**\n           * Time format for output\n           * @type {string}\n           * @private\n           */\n\n          this._format = options.format;\n\n          this._render();\n\n          this._setEvents();\n        },\n\n        /**\n         * Render spinbox\n         * @private\n         */\n        _render: function _render() {\n          var index = inArray(this.getValue(), this._items);\n          var context;\n\n          if (this._disabledItems[index]) {\n            this._selectedIndex = this._findEnabledIndex();\n          }\n\n          context = {\n            maxLength: this._getMaxLength(),\n            initialValue: this.getValue(),\n            format: this._format,\n            formatTime: util.formatTime\n          };\n          this._container.innerHTML = tmpl(context);\n          this._element = this._container.firstChild;\n          this._inputElement = this._element.querySelector('input');\n        },\n\n        /**\n         * Find the index of the enabled item\n         * @returns {number} - find selected index\n         * @private\n         */\n        _findEnabledIndex: function _findEnabledIndex() {\n          return inArray(false, this._disabledItems);\n        },\n\n        /**\n         * Returns maxlength of value\n         * @returns {number}\n         * @private\n         */\n        _getMaxLength: function _getMaxLength() {\n          var lengths = [];\n          forEachArray(this._items, function (item) {\n            lengths.push(String(item).length);\n          });\n          return Math.max.apply(null, lengths);\n        },\n\n        /**\n         * Set disabledItems\n         * @param {object} disabledItems - disabled status of items\n         */\n        setDisabledItems: function setDisabledItems(disabledItems) {\n          this._disabledItems = disabledItems;\n\n          this._changeToInputValue();\n        },\n\n        /**\n         * Assign default events to up/down button\n         * @private\n         */\n        _setEvents: function _setEvents() {\n          on(this._container, 'click', this._onClickHandler, this);\n          on(this._inputElement, 'keydown', this._onKeydownInputElement, this);\n          on(this._inputElement, 'change', this._onChangeHandler, this);\n          this.on('changeItems', function (items) {\n            this._items = items;\n\n            this._render();\n          }, this);\n        },\n\n        /**\n         * Remove events to up/down button\n         * @private\n         */\n        _removeEvents: function _removeEvents() {\n          this.off();\n          off(this._container, 'click', this._onClickHandler, this);\n          off(this._inputElement, 'keydown', this._onKeydownInputElement, this);\n          off(this._inputElement, 'change', this._onChangeHandler, this);\n        },\n\n        /**\n         * Click event handler\n         * @param {Event} ev - Change event on up/down buttons.\n         */\n        _onClickHandler: function _onClickHandler(ev) {\n          var target = util.getTarget(ev);\n\n          if (closest(target, SELECTOR_DOWN_BUTTON)) {\n            this._setNextValue(true);\n          } else if (closest(target, SELECTOR_UP_BUTTON)) {\n            this._setNextValue(false);\n          }\n        },\n\n        /**\n         * Set input value\n         * @param {boolean} isDown - From down-action?\n         * @private\n         */\n        _setNextValue: function _setNextValue(isDown) {\n          var index = this._selectedIndex;\n\n          if (isDown) {\n            index = index ? index - 1 : this._items.length - 1;\n          } else {\n            index = index < this._items.length - 1 ? index + 1 : 0;\n          }\n\n          if (this._disabledItems[index]) {\n            this._selectedIndex = index;\n\n            this._setNextValue(isDown);\n          } else {\n            this.setValue(this._items[index]);\n          }\n        },\n\n        /**\n         * DOM(Input element) Keydown Event handler\n         * @param {Event} ev event-object\n         * @private\n         */\n        _onKeydownInputElement: function _onKeydownInputElement(ev) {\n          var keyCode = ev.which || ev.keyCode;\n          var isDown;\n\n          if (closest(util.getTarget(ev), 'input')) {\n            switch (keyCode) {\n              case 38:\n                isDown = false;\n                break;\n\n              case 40:\n                isDown = true;\n                break;\n\n              default:\n                return;\n            }\n\n            this._setNextValue(isDown);\n          }\n        },\n\n        /**\n         * DOM(Input element) Change Event handler\n         * @param {Event} ev Change event on an input element.\n         * @private\n         */\n        _onChangeHandler: function _onChangeHandler(ev) {\n          if (closest(util.getTarget(ev), 'input')) {\n            this._changeToInputValue();\n          }\n        },\n\n        /**\n         * Change value to input-box if it is valid.\n         * @private\n         */\n        _changeToInputValue: function _changeToInputValue() {\n          var newValue = Number(this._inputElement.value);\n          var newIndex = inArray(newValue, this._items);\n\n          if (this._disabledItems[newIndex]) {\n            newIndex = this._findEnabledIndex();\n            newValue = this._items[newIndex];\n          } else if (newIndex === this._selectedIndex) {\n            return;\n          }\n\n          if (newIndex === -1) {\n            this.setValue(this._items[this._selectedIndex]);\n          } else {\n            this._selectedIndex = newIndex;\n            this.fire('change', {\n              value: newValue\n            });\n          }\n        },\n\n        /**\n         * Set value to input-box.\n         * @param {number} value - Value\n         */\n        setValue: function setValue(value) {\n          this._inputElement.value = util.formatTime(value, this._format);\n\n          this._changeToInputValue();\n        },\n\n        /**\n         * Returns current value\n         * @returns {number}\n         */\n        getValue: function getValue() {\n          return this._items[this._selectedIndex];\n        },\n\n        /**\n         * Destory\n         */\n        destroy: function destroy() {\n          this._removeEvents();\n\n          removeElement(this._element);\n          this._container = this._element = this._inputElement = this._items = this._selectedIndex = null;\n        }\n      });\n      CustomEvents.mixin(Spinbox);\n      module.exports = Spinbox;\n      /***/\n    },\n    /* 35 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Send hostname on DOMContentLoaded.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var isUndefined = __webpack_require__(5);\n\n      var imagePing = __webpack_require__(36);\n\n      var ms7days = 7 * 24 * 60 * 60 * 1000;\n      /**\n       * Check if the date has passed 7 days\n       * @param {number} date - milliseconds\n       * @returns {boolean}\n       * @private\n       */\n\n      function isExpired(date) {\n        var now = new Date().getTime();\n        return now - date > ms7days;\n      }\n      /**\n       * Send hostname on DOMContentLoaded.\n       * To prevent hostname set tui.usageStatistics to false.\n       * @param {string} appName - application name\n       * @param {string} trackingId - GA tracking ID\n       * @ignore\n       */\n\n\n      function sendHostname(appName, trackingId) {\n        var url = 'https://www.google-analytics.com/collect';\n        var hostname = location.hostname;\n        var hitType = 'event';\n        var eventCategory = 'use';\n        var applicationKeyForStorage = 'TOAST UI ' + appName + ' for ' + hostname + ': Statistics';\n        var date = window.localStorage.getItem(applicationKeyForStorage); // skip if the flag is defined and is set to false explicitly\n\n        if (!isUndefined(window.tui) && window.tui.usageStatistics === false) {\n          return;\n        } // skip if not pass seven days old\n\n\n        if (date && !isExpired(date)) {\n          return;\n        }\n\n        window.localStorage.setItem(applicationKeyForStorage, new Date().getTime());\n        setTimeout(function () {\n          if (document.readyState === 'interactive' || document.readyState === 'complete') {\n            imagePing(url, {\n              v: 1,\n              t: hitType,\n              tid: trackingId,\n              cid: hostname,\n              dp: hostname,\n              dh: appName,\n              el: appName,\n              ec: eventCategory\n            });\n          }\n        }, 1000);\n      }\n\n      module.exports = sendHostname;\n      /***/\n    },\n    /* 36 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Request image ping.\n       * @author NHN FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var forEachOwnProperties = __webpack_require__(16);\n      /**\n       * @module request\n       */\n\n      /**\n       * Request image ping.\n       * @param {String} url url for ping request\n       * @param {Object} trackingInfo infos for make query string\n       * @returns {HTMLElement}\n       * @memberof module:request\n       * @example\n       * var imagePing = require('tui-code-snippet/request/imagePing'); // node, commonjs\n       *\n       * imagePing('https://www.google-analytics.com/collect', {\n       *     v: 1,\n       *     t: 'event',\n       *     tid: 'trackingid',\n       *     cid: 'cid',\n       *     dp: 'dp',\n       *     dh: 'dh'\n       * });\n       */\n\n\n      function imagePing(url, trackingInfo) {\n        var trackingElement = document.createElement('img');\n        var queryString = '';\n        forEachOwnProperties(trackingInfo, function (value, key) {\n          queryString += '&' + key + '=' + value;\n        });\n        queryString = queryString.substring(1);\n        trackingElement.src = url + '?' + queryString;\n        trackingElement.style.display = 'none';\n        document.body.appendChild(trackingElement);\n        document.body.removeChild(trackingElement);\n        return trackingElement;\n      }\n\n      module.exports = imagePing;\n      /***/\n    },\n    /* 37 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var template = __webpack_require__(7);\n\n      module.exports = function (context) {\n        var source = '<div class=\"tui-timepicker-btn-area\">' + '  <input type=\"text\" class=\"tui-timepicker-spinbox-input\"' + '        maxlength=\"{{maxLength}}\"' + '        size=\"{{maxLength}}\"' + '        value=\"{{formatTime initialValue format}}\"' + '        aria-label=\"TimePicker spinbox value\">' + '  <button type=\"button\" class=\"tui-timepicker-btn tui-timepicker-btn-up\">' + '    <span class=\"tui-ico-t-btn\">Increase</span>' + '  </button>' + '  <button type=\"button\" class=\"tui-timepicker-btn tui-timepicker-btn-down\">' + '    <span class=\"tui-ico-t-btn\">Decrease</span>' + '  </button>' + '</div>';\n        return template(source, context);\n      };\n      /***/\n\n    },\n    /* 38 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Selectbox (in TimePicker)\n       * @author NHN. FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      var inArray = __webpack_require__(0);\n\n      var CustomEvents = __webpack_require__(8);\n\n      var defineClass = __webpack_require__(9);\n\n      var extend = __webpack_require__(1);\n\n      var on = __webpack_require__(10);\n\n      var off = __webpack_require__(11);\n\n      var closest = __webpack_require__(12);\n\n      var removeElement = __webpack_require__(13);\n\n      var isHTMLNode = __webpack_require__(14);\n\n      var util = __webpack_require__(15);\n\n      var tmpl = __webpack_require__(39);\n      /**\n       * @class\n       * @ignore\n       * @param {string|HTMLElement} container - Container element or selector\n       * @param {object} options - Options\n       * @param {Array.<number>} options.items - Items\n       * @param {number} options.initialValue - Initial value\n       */\n\n\n      var Selectbox = defineClass(\n      /** @lends Selectbox.prototype */\n      {\n        init: function init(container, options) {\n          options = extend({\n            items: []\n          }, options);\n          /**\n           * Container element\n           * @type {HTMLElement}\n           * @private\n           */\n\n          this._container = isHTMLNode(container) ? container : document.querySelector(container);\n          /**\n           * Selectbox items\n           * @type {Array.<number>}\n           * @private\n           */\n\n          this._items = options.items || [];\n          /**\n           * Selectbox disabled items info\n           * @type {Array.<number>}\n           * @private\n           */\n\n          this._disabledItems = options.disabledItems || [];\n          /**\n           * Selected index\n           * @type {number}\n           * @private\n           */\n\n          this._selectedIndex = Math.max(0, inArray(options.initialValue, this._items));\n          /**\n           * Time format for output\n           * @type {string}\n           * @private\n           */\n\n          this._format = options.format;\n          /**\n           * Select element\n           * @type {HTMLElement}\n           * @private\n           */\n\n          this._element = null;\n\n          this._render();\n\n          this._setEvents();\n        },\n\n        /**\n         * Render selectbox\n         * @private\n         */\n        _render: function _render() {\n          var context;\n\n          this._changeEnabledIndex();\n\n          context = {\n            items: this._items,\n            format: this._format,\n            initialValue: this.getValue(),\n            disabledItems: this._disabledItems,\n            formatTime: util.formatTime,\n            equals: function equals(a, b) {\n              return a === b;\n            }\n          };\n\n          if (this._element) {\n            this._removeElement();\n          }\n\n          this._container.innerHTML = tmpl(context);\n          this._element = this._container.firstChild;\n          on(this._element, 'change', this._onChangeHandler, this);\n        },\n\n        /**\n         * Change the index of the enabled item\n         * @private\n         */\n        _changeEnabledIndex: function _changeEnabledIndex() {\n          var index = inArray(this.getValue(), this._items);\n\n          if (this._disabledItems[index]) {\n            this._selectedIndex = inArray(false, this._disabledItems);\n          }\n        },\n\n        /**\n         * Set disabledItems\n         * @param {object} disabledItems - disabled status of items\n         * @private\n         */\n        setDisabledItems: function setDisabledItems(disabledItems) {\n          this._disabledItems = disabledItems;\n\n          this._render();\n        },\n\n        /**\n         * Set events\n         * @private\n         */\n        _setEvents: function _setEvents() {\n          this.on('changeItems', function (items) {\n            this._items = items;\n\n            this._render();\n          }, this);\n        },\n\n        /**\n         * Remove events\n         * @private\n         */\n        _removeEvents: function _removeEvents() {\n          this.off();\n        },\n\n        /**\n         * Remove element\n         * @private\n         */\n        _removeElement: function _removeElement() {\n          off(this._element, 'change', this._onChangeHandler, this);\n          removeElement(this._element);\n        },\n\n        /**\n         * Change event handler\n         * @param {Event} ev Change event on a select element.\n         * @private\n         */\n        _onChangeHandler: function _onChangeHandler(ev) {\n          if (closest(util.getTarget(ev), 'select')) {\n            this._setNewValue();\n          }\n        },\n\n        /**\n         * Set new value\n         * @private\n         */\n        _setNewValue: function _setNewValue() {\n          var newValue = Number(this._element.value);\n          this._selectedIndex = inArray(newValue, this._items);\n          this.fire('change', {\n            value: newValue\n          });\n        },\n\n        /**\n         * Returns current value\n         * @returns {number}\n         */\n        getValue: function getValue() {\n          return this._items[this._selectedIndex];\n        },\n\n        /**\n         * Set value\n         * @param {number} value - New value\n         */\n        setValue: function setValue(value) {\n          var newIndex = inArray(value, this._items);\n\n          if (newIndex > -1 && newIndex !== this._selectedIndex) {\n            this._selectedIndex = newIndex;\n            this._element.value = value;\n\n            this._setNewValue();\n          }\n        },\n\n        /**\n         * Destory\n         */\n        destroy: function destroy() {\n          this._removeEvents();\n\n          this._removeElement();\n\n          this._container = this._items = this._selectedIndex = this._element = null;\n        }\n      });\n      CustomEvents.mixin(Selectbox);\n      module.exports = Selectbox;\n      /***/\n    },\n    /* 39 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var template = __webpack_require__(7);\n\n      module.exports = function (context) {\n        var source = '<select class=\"tui-timepicker-select\" aria-label=\"Time\">' + '  {{each items}}' + '    {{if equals initialValue @this}}' + '      <option value=\"{{@this}}\" selected {{if disabledItems[@index]}}disabled{{/if}}>{{formatTime @this format}}</option>' + '    {{else}}' + '      <option value=\"{{@this}}\" {{if disabledItems[@index]}}disabled{{/if}}>{{formatTime @this format}}</option>' + '    {{/if}}' + '  {{/each}}' + '</select>';\n        return template(source, context);\n      };\n      /***/\n\n    },\n    /* 40 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * @fileoverview Default locale texts\n       * @author NHN. FE Development Lab <dl_javascript@nhn.com>\n       */\n\n      module.exports = {\n        en: {\n          am: 'AM',\n          pm: 'PM'\n        },\n        ko: {\n          am: '오전',\n          pm: '오후'\n        }\n      };\n      /***/\n    },\n    /* 41 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var template = __webpack_require__(7);\n\n      module.exports = function (context) {\n        var source = '<div class=\"tui-timepicker\">' + '  <div class=\"tui-timepicker-body\">' + '    <div class=\"tui-timepicker-row\">' + '      {{if isSpinbox}}' + '        <div class=\"tui-timepicker-column tui-timepicker-spinbox tui-timepicker-hour\"></div>' + '        <span class=\"tui-timepicker-column tui-timepicker-colon\"><span class=\"tui-ico-colon\">:</span></span>' + '        <div class=\"tui-timepicker-column tui-timepicker-spinbox tui-timepicker-minute\"></div>' + '        {{if showMeridiem}}' + '          {{meridiemElement}}' + '        {{/if}}' + '      {{else}}' + '        <div class=\"tui-timepicker-column tui-timepicker-selectbox tui-timepicker-hour\"></div>' + '        <span class=\"tui-timepicker-column tui-timepicker-colon\"><span class=\"tui-ico-colon\">:</span></span>' + '        <div class=\"tui-timepicker-column tui-timepicker-selectbox tui-timepicker-minute\"></div>' + '        {{if showMeridiem}}' + '          {{meridiemElement}}' + '        {{/if}}' + '      {{/if}}' + '    </div>' + '  </div>' + '</div>';\n        return template(source, context);\n      };\n      /***/\n\n    },\n    /* 42 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var template = __webpack_require__(7);\n\n      module.exports = function (context) {\n        var source = '{{if isSpinbox}}' + '  <div class=\"tui-timepicker-column tui-timepicker-checkbox tui-timepicker-meridiem\">' + '    <div class=\"tui-timepicker-check-area\">' + '      <ul class=\"tui-timepicker-check-lst\">' + '        <li class=\"tui-timepicker-check\">' + '          <div class=\"tui-timepicker-radio\">' + '            <input type=\"radio\"' + '                  name=\"optionsRadios-{{radioId}}\"' + '                  value=\"AM\"' + '                  class=\"tui-timepicker-radio-am\"' + '                  id=\"tui-timepicker-radio-am-{{radioId}}\">' + '            <label for=\"tui-timepicker-radio-am-{{radioId}}\" class=\"tui-timepicker-radio-label\">' + '              <span class=\"tui-timepicker-input-radio\"></span>{{am}}' + '            </label>' + '          </div>' + '        </li>' + '        <li class=\"tui-timepicker-check\">' + '          <div class=\"tui-timepicker-radio\">' + '            <input type=\"radio\"' + '                  name=\"optionsRadios-{{radioId}}\"' + '                  value=\"PM\"' + '                  class=\"tui-timepicker-radio-pm\"' + '                  id=\"tui-timepicker-radio-pm-{{radioId}}\">' + '            <label for=\"tui-timepicker-radio-pm-{{radioId}}\" class=\"tui-timepicker-radio-label\">' + '              <span class=\"tui-timepicker-input-radio\"></span>{{pm}}' + '            </label>' + '          </div>' + '        </li>' + '      </ul>' + '    </div>' + '  </div>' + '{{else}}' + '  <div class=\"tui-timepicker-column tui-timepicker-selectbox tui-is-add-picker tui-timepicker-meridiem\">' + '    <select class=\"tui-timepicker-select\" aria-label=\"AM/PM\">' + '      <option value=\"AM\">{{am}}</option>' + '      <option value=\"PM\">{{pm}}</option>' + '    </select>' + '  </div>' + '{{/if}}';\n        return template(source, context);\n      };\n      /***/\n\n    }\n    /******/\n    ])\n  );\n});","map":null,"metadata":{},"sourceType":"script"}